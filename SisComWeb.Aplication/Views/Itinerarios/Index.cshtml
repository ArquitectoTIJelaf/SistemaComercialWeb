@using SisComWeb.Aplication.Helpers

@{
    ViewBag.Title = "Ventas";
    var usuario = DataSession.UsuarioLogueado;
}

@Html.Partial("_Filtros")
@Html.Partial("_Table")
@Html.Partial("_Venta")

@section styles{
    <style>
        .panel-default .panel-heading {
            height: 35px;
            min-height: 35px;
        }

        .input-group-addon {
            border-radius: 4px;
            border: 1px solid rgb(228, 231, 234);
            color: #2a97f4;
            background-color: white;
        }

        ul.pagination {
            display: inline-block;
            padding: 0;
            margin: 0;
            background-color: white;
            padding: 5px;
            border-radius: 8px;
            cursor: pointer;
        }

            ul.pagination li {
                display: inline;
            }

                ul.pagination li a {
                    color: black;
                    float: left;
                    padding: 8px 16px;
                    text-decoration: none;
                    transition: background-color .3s;
                    border: 1px solid #ddd;
                    margin: 0 4px;
                    border-radius: 50%;
                }

                    ul.pagination li a.active {
                        background-color: #4CAF50;
                        color: white;
                        border: 1px solid #4CAF50;
                    }

                    ul.pagination li a:hover:not(.active) {
                        background-color: #ddd;
                    }

        .pagination > li:first-child > a {
            border-top-left-radius: 50%;
            border-bottom-left-radius: 50%
        }

        .pagination > li:last-child > a {
            border-bottom-right-radius: 50%;
            border-top-right-radius: 50%;
        }

        .table-responsive > ul {
            display: none;
        }

        .btn-inverse:focus {
            background-color: #A1ABB7 !important;
            border: 1px solid #A1ABB7 !important;
        }

        .container-bus {
            display: inline-block;
            width: 100%;
            padding: 15px;
        }

        .img-bus {
            float: left;
        }

        .form-bus {
            background-color: #616e7e;
            width: calc(100% - 108px);
            border: 2px solid #4b4a4b;
            border-radius: 0 8px 8px 0;
            margin-bottom: 0;
        }

        .table-bus {
            cursor: default;
            background-color: white;
            height: 252px;
        }

        .LI {
            border-left: 2px solid #4b4a4b;
            margin-left: 5px;
            margin-right: 3px;
            height: 100%;
            display: block;
        }

        .PU {
            background: url("/wwwroot/plugins/images/users/puerta.png") no-repeat center center;
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .VA {
            /*background: url("/wwwroot/plugins/images/users/PUERTA-moment.png") no-repeat center center;*/
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .CU {
            /*background: url("/wwwroot/plugins/images/users/PUERTA-moment.png") no-repeat center center;*/
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .BA {
            background: url("/wwwroot/plugins/images/users/baño.png") no-repeat center center;
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .TV {
            background: url("/wwwroot/plugins/images/users/TV.png") no-repeat center center;
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .EE {
            background: url("/wwwroot/plugins/images/users/ESCALERAS.png") no-repeat center center;
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .bus-td {
            padding: 0 !important;
            height: 50px;
            border-color: transparent !important;
            vertical-align: middle !important;
            align-items: center;
            text-align: center;
        }

        .btn-bus {
            padding: 5px;
            height: 95% !important;
            width: 95% !important;
            font-weight: 900;
            background-color: #f7fafc;
            border: 1px solid #5b5b5c !important;
            color: #333;
        }

        .number-of-seat {
            display: block;
            font-size: 14px;
        }

        .icons-of-seat {
            display: block;
        }

        .ios-left {
            position: relative;
            left: -10%;
            height: 95%;
            min-width: 8px;
        }

        .ios-right {
            position: relative;
            right: -10%;
        }

        .check-with-label:checked + .label-for-check {
        }

        .active-chck {
            color: #2A97F4;
            font-weight: 500 !important;
        }
    </style>
}

@section scripts{
    <script>

        $(function () {

            if ($('.dp').length) {

                $('#spnFecha').click(function (event) {
                    event.preventDefault();
                    $('#txtFecha').focus();
                });
            }

            //#region RECORRIDO ITINERARIOS

            $(document).on('focus active', 'input[type=checkbox]', function () {
                $('label[for=' + $(this).attr('id') + ']').addClass('active-chck');
            });
            $(document).on('blur', 'input[type=checkbox]', function () {
                $('label[for=' + $(this).attr('id') + ']').removeClass('active-chck');
            });
            //#endregion

            //#region RECORRIDO TURNOS

            var over_click_filter_ventas;
            $('#FiltersVentas').mouseenter(function () {
                over_click_filter_ventas = true;
            }).mouseleave(function () {
                over_click_filter_ventas = false;
            });
            $('#cboEmpresa input[type=search]').blur(function (e) {
                if (over_click_filter_ventas) {
                    $('#cboSucursal input[type=search]').focus();
                }
            });
            $('#cboSucursal input[type=search]').blur(function () {
                if (over_click_filter_ventas) {
                    $('#cboOrigenBus input[type=search]').focus();
                }
            });
            $('#cboOrigenBus input[type=search]').blur(function () {
                if (over_click_filter_ventas) {
                    $('#cboPVOrigenBus input[type=search]').focus();
                }
            });
            $('#cboPVOrigenBus input[type=search]').blur(function () {
                if (over_click_filter_ventas) {
                    $('#cboDestinoBus_2 input[type=search]').focus();
                }
            });
            $('#cboDestinoBus_2 input[type=search]').blur(function () {
                if (over_click_filter_ventas) {
                    $('#cboServicio input[type=search]').focus();
                }
            });
            $('#cboServicio input[type=search]').blur(function () {
                if (over_click_filter_ventas) {
                    $('#cboDestinoPas_2 input[type=search]').focus();
                }
            });
            $('#cboDestinoPas_2 input[type=search]').blur(function () {
                if (over_click_filter_ventas) {
                    $('#txtTurno').focus();
                }
            });
            $('#txtTurno').blur(function () {
                if (over_click_filter_ventas) {
                    $('#txtFecha_2').focus();
                }
            });
            $('#txtFecha_2').blur(function () {
                if (over_click_filter_ventas) {
                    appController.chargeTurnos();
                }
            });
            //#endregion

        });

        Vue.use(VueMask.VueMaskPlugin);

        Vue.filter('money', function (value) {
            if (typeof value !== 'undefined' && value !== '') {
                value = parseFloat(value);
                return 'S/ ' + value.toFixed(2);
            } else {
                return 'S/ 0.00';
            }
        });

        Vue.filter('fixed2', function (value) {
            if (typeof value !== 'undefined' && value !== '') {
                value = parseFloat(value);
                return String(value.toFixed(2));
            } else {
                return '0.00';
            }
        });

        var selectAll = {
            id: 0,
            label: 'TODOS'
        }

        var appController = (function () {
            return {
                loadTable: function (_list) {
                    appVueTable.loadTable(_list)
                },
                showVentas: function (_item, _turnos) {
                    appVueFilter.showVentas = true;
                    appVueTable.showVentas = true;
                    appVueVenta.showVentas = true;
                    var _fechaViaje = appVueFilter.filtro.FechaViaje
                    appVueVenta.chargeVentas(_item, _fechaViaje, _turnos);
                },
                hideVentas: function () {
                    appVueFilter.showVentas = false;
                    appVueTable.showVentas = false;
                    appVueVenta.showVentas = false;
                },
                chargeItinerarios: function () {
                    appVueFilter.search();
                },
                chargeTurnos: function () {
                    var item = {};
                    appVueVenta.firstCharge = false;
                    item.CodiEmpresa = appVueVenta.filtro.CodiEmpresa.id;
                    item.CodiOrigen = appVueVenta.filtro.CodiSucursal.id;
                    item.CodiSucursal = appVueVenta.filtro.CodiOrigenBus.id;
                    item.CodiPuntoVenta = appVueVenta.filtro.CodiPVOrigenBus.id;
                    item.CodiRuta = appVueVenta.filtro.CodiDestinoBus.id;
                    item.CodiServicio = appVueVenta.filtro.CodiServicio.id;
                    item.CodiDestino = appVueVenta.filtro.CodiDestinoPas.id;
                    item.HoraPartida = appVueVenta.filtro.Turno.replace(" ", "");
                    item.FechaViaje = appVueVenta.filtro.Fecha;
                    appVueVenta.getTurno(item, item.FechaViaje);
                }
            };
        })();

        var appVueFilter = new Vue({
            el: '#appVueFilter',
            data: {
                filtro: {
                    CodiOrigen: null,
                    CodiDestino: null,
                    CodiRuta: null,
                    FechaViaje: '',
                    Hora: '',
                    TodosTurnos: false,
                    SoloProgramados: false
                },
                list: {
                    origenesPas: [],
                    destinosPas: [],
                    destinosBus: []
                },
                showVentas: false,
                processing: false
            },
            mounted: function () {
                $(".preloader").fadeIn();
                this.getSucursales();
                this.$nextTick(() => {
                    $('#cboDestinoPas input[type=search]').focus();
                    $(".preloader").fadeOut();
                });
            },
            methods: {
                getLabel(option) {
                    return `${option.id} - ${option.label}`
                },
                getSucursales() {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-oficinas')
                        .then(res => {
                            _this.list.origenesPas = _.cloneDeep(res.data);
                            _this.filtro.CodiOrigen = _this.list.origenesPas.find(x => x.id === '@usuario.CodiSucursal')
                            _this.list.destinosPas = _.cloneDeep(res.data);
                            _this.list.destinosPas.unshift(selectAll);
                            _this.list.destinosBus = _.cloneDeep(res.data);
                            _this.list.destinosBus.unshift(selectAll);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                search() {
                    this.processing = true;
                    var _this = this;
                    var input = {};
                    input.CodiOrigen = _this.filtro.CodiOrigen.id;
                    input.CodiDestino = _this.filtro.CodiDestino.id;
                    input.CodiRuta = (_this.filtro.CodiRuta) ? _this.filtro.CodiRuta.id : 0;
                    input.FechaViaje = _this.filtro.FechaViaje;
                    input.Hora = _this.filtro.Hora;
                    input.TodosTurnos = _this.filtro.TodosTurnos;
                    input.SoloProgramados = _this.filtro.SoloProgramados;
                    APP.rq.axios.post(APP.base + '/itinerarios/lista-itinerarios', input)
                        .then(res => {
                            appController.loadTable(res.data);
                            this.processing = false;
                        }).catch(err => {
                            this.processing = false;
                            APP.rq.axios_handler_error_alert;
                        });
                },
                recorrido: function () {
                    var _this = this;
                    if (_this.filtro.CodiOrigen === null) {
                        $('#cboOrigenPas input[type=search]').focus();
                    } else if (_this.filtro.CodiDestino === null) {
                        $('#cboDestinoPas input[type=search]').focus();
                    } else if (_this.filtro.CodiRuta === null) {
                        $('#cboDestinoBus input[type=search]').focus();
                    } else if (_this.filtro.FechaViaje === '') {
                        $('#txtFecha').focus();
                    } else if (_this.filtro.Hora === '') {
                        $('#txtHora').focus();
                    }
                },
                nextStep: function (code) {
                    switch (code) {
                        case 1:
                            $('#cboDestinoPas input[type=search]').focus();
                            break;
                        case 2:
                            $('#cboDestinoBus input[type=search]').focus();
                            break;
                        case 3:
                            $('#txtFecha').focus();
                            break;
                        case 4:
                            this.filtro.FechaViaje = $('#txtFecha').val();//$('#txtFecha').data('DateTimePicker').date()
                            $('#txtHora').focus();
                            break;
                        case 5:
                            this.filtro.Hora = $('#txtHora').val();
                            $('#chckTodos:first').focus();
                            break;
                        case 6:
                            $('#chckProgramados:first').focus();
                            break;
                        case 7:
                            $('#buscar').focus();
                            break;
                    }
                }
            },
            computed: {
            },
            watch: {
            }
        });

        var appVueTable = new Vue({
            el: '#appVueTable',
            data: {
                list: {
                    itinerarios: []
                },
                paginate: ['items'],
                showVentas: false
            },
            mounted: function () {
            },
            methods: {
                loadTable: function (list) {
                    this.list.itinerarios = list;
                    this.$nextTick(() => {
                        this.shown = true
                    });
                },
                sendRow: function (item) {
                    var turnos = this.list.itinerarios.reduce(function (filtered, option) {
                        if (option.CodiDestino === item.CodiDestino) {
                            var someNewValue =
                            {
                                NomServicio: option.NomServicio,
                                HoraPartida: option.HoraPartida,
                                CodiServicio: option.CodiServicio,
                                CodiRuta: option.CodiRuta,
                                //Parámetros innecesarios
                                PlanoBus: option.PlanoBus,
                                CodiProgramacion: option.CodiProgramacion,
                                CodiOrigen: option.CodiOrigen,
                                CodiDestino: option.CodiDestino,
                                CodiBus: option.CodiBus,
                                HoraViaje: option.HoraViaje,
                                FechaViaje: appVueFilter.filtro.FechaViaje,//
                                CodiEmpresa: option.CodiEmpresa,
                                FechaProgramacion: option.FechaProgramacion,
                                NroViaje: option.NroViaje,
                                CodiPuntoVenta: option.CodiPuntoVenta,
                                CodiSucursal: option.CodiSucursal
                            }
                            filtered.push(someNewValue);
                        }
                        return filtered;
                    }, []);
                    appController.showVentas(item, turnos);
                }
            },
            computed: {
            },
            watch: {
            }
        });

        var appVueVenta = new Vue({
            el: '#appVueVenta',
            data: {
                filtro: {
                    CodiEmpresa: null,
                    CodiSucursal: null,
                    CodiOrigenBus: null,
                    CodiPVOrigenBus: null,
                    CodiDestinoBus: null,
                    CodiServicio: null,
                    CodiDestinoPas: null,
                    Turno: '',
                    Fecha: '',
                    NroViaje: '',
                    CodiProgramacion: ''
                },
                list: {
                    empresas: [],
                    sucursales: [],
                    origenesBus: [],
                    pvOrigenesBus: [],
                    destinosBus: [],
                    servicios: [],
                    destinosPas: [],
                    plano1: [],
                    plano2: [],
                    plano3: [],
                    plano4: [],
                    plano5: [],
                    tiposDoc: [],
                    turnos: [],
                    destinosRuta: [],
                    sexos: [
                        { 'id': 'M', 'label': 'MASCULINO' },
                        { 'id': 'F', 'label': 'FEMENINO' }
                    ]
                },
                objPlano: {
                    CodiBus: '',
                    PlacaBus: '',
                    PlanoBus: '',
                    CodiChofer: '',
                    NombreChofer: '',
                    CodiCopiloto: '',
                    NombreCopiloto: ''
                },
                objVenta: {
                    IdCliente: 0,
                    CodiTipoDoc: null,
                    Documento: '',
                    Nombres: '',
                    Apellidos: '',
                    ApellidoPaterno: '',
                    ApellidoMaterno: '',
                    FechaNac: '',
                    Edad: '',
                    Sexo: '',
                    Telefono: '',
                    Ruc: '',
                    Recoger: '',
                    Reintegro: '',
                    Observacion: '',
                    Precio: '',
                    NroAsiento: '',
                    NroVenta: '',
                    NroSolicitud: '',
                    FechaVen: ''
                },
                showVentas: false,
                showPlano: false,
                showTextTurnos: false,
                firstCharge: true
            },
            mounted: function () {
                this.getEmpresas();
                this.getSucursales();
                this.getServicios();
                this.getTiposDoc();
            },
            methods: {
                chargeVentas: function (item, fechaViaje, turnos) {
                    this.firstCharge = true;
                    this.list.turnos = turnos;
                    this.getTurno(item, fechaViaje);
                },
                getTurno: function (item, fechaViaje) {
                    var _this = this;
                    var input = {};
                    input.CodiEmpresa = item.CodiEmpresa;
                    input.CodiOrigen = item.CodiOrigen;
                    input.CodiDestino = item.CodiDestino;
                    input.CodiSucursal = item.CodiSucursal;
                    input.CodiRuta = item.CodiRuta;
                    input.CodiPuntoVenta = item.CodiPuntoVenta;
                    input.CodiServicio = item.CodiServicio;
                    input.HoraViaje = item.HoraPartida;
                    input.FechaViaje = fechaViaje;
                    APP.rq.axios.post(APP.base + '/itinerarios/turnos', input)
                        .then(async function (res) {
                            if (res.data.NroViaje) {
                                _this.filtro.CodiEmpresa = _this.list.empresas.find(x => x.id === String(res.data.CodiEmpresa));
                                _this.filtro.CodiSucursal = _this.list.sucursales.find(x => x.id === String(res.data.CodiOrigen));
                                _this.filtro.CodiOrigenBus = _this.list.origenesBus.find(x => x.id === String(res.data.CodiSucursal));
                                _this.filtro.CodiDestinoBus = _this.list.destinosBus.find(x => x.id === String(res.data.CodiRuta));
                                _this.filtro.CodiServicio = _this.list.servicios.find(x => x.id === String(res.data.CodiServicio));
                                _this.filtro.CodiDestinoPas = _this.list.destinosPas.find(x => x.id === String(res.data.CodiDestino));
                                _this.filtro.Turno = res.data.HoraPartida;
                                _this.filtro.Fecha = fechaViaje;
                                _this.filtro.NroViaje = res.data.NroViaje;
                                _this.filtro.CodiProgramacion = res.data.CodiProgramacion;
                                await _this.getPVOrigenesBus(_this.filtro.CodiOrigenBus.id);
                                _this.filtro.CodiPVOrigenBus = _this.list.pvOrigenesBus.find(x => x.id === String(res.data.CodiPuntoVenta));

                                _this.objPlano.CodiBus = res.data.CodiBus;
                                _this.objPlano.PlacaBus = res.data.PlacaBus;
                                _this.objPlano.PlanoBus = res.data.PlanoBus;
                                _this.objPlano.CodiChofer = res.data.CodiChofer;
                                _this.objPlano.NombreChofer = res.data.NombreChofer;
                                _this.objPlano.CodiCopiloto = res.data.CodiCopiloto;
                                _this.objPlano.NombreCopiloto = res.data.NombreCopiloto;

                                _this.list.destinosRuta = res.data.ListaDestinosRuta;

                                var tempList = _.cloneDeep(res.data.ListaPlanoBus);
                                var limpiarAB = await _this.limpiarAsientosBloqueados(tempList);
                                if (tempList.length > 0 && limpiarAB) {
                                    _this.list.plano5 = tempList.filter(x => x.Indice === Math.ceil(x.Indice / 5) * 5);
                                    _this.list.plano4 = tempList.filter(x => x.Indice + 1 === Math.ceil(x.Indice / 5) * 5);
                                    _this.list.plano3 = tempList.filter(x => x.Indice + 2 === Math.ceil(x.Indice / 5) * 5);
                                    _this.list.plano2 = tempList.filter(x => x.Indice + 3 === Math.ceil(x.Indice / 5) * 5);
                                    _this.list.plano1 = tempList.filter(x => x.Indice + 4 === Math.ceil(x.Indice / 5) * 5);
                                    _this.$nextTick(() => {
                                        if (!_this.firstCharge)
                                            $('#btnDesplegar').click();
                                        _this.showPlano = true;
                                    });
                                } else {
                                    _this.list.plano5 = [];
                                    _this.list.plano4 = [];
                                    _this.list.plano3 = [];
                                    _this.list.plano2 = [];
                                    _this.list.plano1 = [];
                                    _this.$nextTick(() => {
                                        _this.showPlano = false;
                                        APP.msg.error('No se pudo cargar el plano');
                                    });
                                }
                            } else {
                                _this.showPlano = false;
                                APP.msg.error('No se cargó resultados');
                            }

                        }).catch(APP.rq.axios_handler_error_alert);
                },
                getEmpresas: function() {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-empresas')
                        .then(res => {
                            _this.list.empresas = _.cloneDeep(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                getSucursales: function() {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-oficinas')
                        .then(res => {
                            _this.list.sucursales = _.cloneDeep(res.data);
                            _this.list.origenesBus = _.cloneDeep(res.data);
                            _this.list.destinosBus = _.cloneDeep(res.data);
                            _this.list.destinosPas = _.cloneDeep(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                getPVOrigenesBus: async function(Codi_OrigenBus) {
                    var _this = this;
                    await APP.rq.axios2.get(APP.base + '/base/get-puntosventa', { params: { CodiSucursal: Codi_OrigenBus } })
                        .then(res => {
                            _this.list.pvOrigenesBus = _.cloneDeep(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                getServicios: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-servicios')
                        .then(res => {
                            _this.list.servicios = _.cloneDeep(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                getTiposDoc() {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-tiposDoc')
                        .then(res => {
                            _this.list.tiposDoc = _.cloneDeep(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                hideVentas: function() {
                    this.showPlano = false;
                    appController.hideVentas();
                },
                changeTurno: function (item) {
                    this.showPlano = false;
                    this.getTurno(item, item.FechaViaje);
                },
                clear: function () {
                    var _this = this;
                    _this.firstCharge = false; //TODO
                    _this.filtro.CodiEmpresa = null;
                    _this.filtro.CodiSucursal = null;
                    _this.filtro.CodiOrigenBus = null;
                    _this.filtro.CodiPVOrigenBus = null;
                    _this.filtro.CodiDestinoBus = null;
                    _this.filtro.CodiServicio = null;
                    _this.filtro.CodiDestinoPas = null;
                    $('#txtTurno').data("DateTimePicker").clear();
                    $('#txtFecha_2').data("DateTimePicker").clear();
                    _this.filtro.Turno = '';
                    _this.filtro.Fecha = '';
                },
                getLabel: function (option) {
                    return `${option.id} - ${option.label}`
                },
                styleBloquearAsiento: function (NumeAsiento, IDS) {
                    if (NumeAsiento === 0) {
                        if (IDS !== 0) return { 'background-color': 'darkgoldenrod' };
                    }
                },
                bloquearAsiento: async function (asientoSel) {
                    var _this = this;
                    // Validación: 'liberarAsiento'
                    if (asientoSel.IDS !== 0) {
                        await _this.liberarAsiento(asientoSel);
                        return;
                    }
                    var input = {};
                    input.CodiProgramacion = _this.filtro.CodiProgramacion;
                    input.NroViaje = _this.filtro.NroViaje;
                    input.CodiOrigen = _this.filtro.CodiSucursal.id;
                    input.CodiDestino = _this.filtro.CodiDestinoPas.id;
                    input.NumeAsiento = asientoSel.Tipo;
                    input.FechaProgramacion = _this.filtro.Fecha;
                    input.Precio = asientoSel.PrecioVenta;
                    input.CodiTerminal = 0; // Por mientras.
                    APP.rq.axios2.post(APP.base + '/itinerarios/bloquearAsiento', input)
                        .then(res => {
                            if (res.statusText === "OK") {
                                if (res.data !== 0) {
                                    asientoSel.IDS = res.data;
                                    _this.passSectionVentas(asientoSel.Tipo);
                                    APP.msg.info('Asiento bloqueado');

                                    // CREATE COOKIE
                                    var nameCookie = 'asientoBloqueado_' + (_this.filtro.CodiProgramacion !== 0 ? _this.filtro.CodiProgramacion : _this.filtro.NroViaje) + '_' + asientoSel.Tipo;
                                    APP.util.createCookie(nameCookie, asientoSel.IDS, 7);
                                    // -------------
                                }
                            } else {
                                APP.msg.error('No se pudo bloquear el asiento');
                            }
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                liberarAsiento: async function (asientoSel) {
                    var _this = this;
                    await APP.rq.axios2.post(APP.base + '/itinerarios/liberarAsiento', { IDS : asientoSel.IDS })
                        .then(res => {
                            if (res.statusText === "OK") {
                                if (res.data) {
                                    asientoSel.IDS = 0;
                                    this.clearSectionVentas();
                                    APP.msg.info('Asiento liberado');

                                    // DELETE COOKIE
                                    var nameCookie = 'asientoBloqueado_' + (_this.filtro.CodiProgramacion !== 0 ? _this.filtro.CodiProgramacion : _this.filtro.NroViaje) + '_' + asientoSel.Tipo;
                                    APP.util.deleteCookie(nameCookie);
                                    // -------------
                                }
                            } else {
                                APP.msg.error('No se pudo liberar el asiento');
                            }
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                limpiarAsientosBloqueados: async function (tempList) {
                    var _this = this;
                    var respuesta = true;
                    var partNameCookie = 'asientoBloqueado_' + (_this.filtro.CodiProgramacion !== 0 ? _this.filtro.CodiProgramacion : _this.filtro.NroViaje) + '_';

                    tempList.forEach(async function (e) {
                        if (!isNaN(e.Tipo)) {
                            var valueCookie = APP.util.readCookie(partNameCookie + e.Tipo);
                            if (valueCookie !== null) {
                                APP.util.deleteCookie(partNameCookie + e.Tipo);
                                await APP.rq.axios2.post(APP.base + '/itinerarios/liberarAsiento', { IDS: valueCookie })
                                    .then(res => {
                                        if (res.statusText === "OK") {
                                            e.NumeAsiento = 0;
                                        }
                                        else
                                            return false;
                                    }).catch(APP.rq.axios_handler_error_alert);
                            }
                        }
                    });

                    return respuesta;
                },
                recorridoSectionVentas: function () {
                    var _this = this;
                    if (!_this.objVenta.CodiTipoDoc) {
                        $('#cboTipoDoc input[type=search]').focus();
                    } else if (_this.objVenta.Documento === '') {
                        $('#txtDocumento').focus();
                    } else if (_this.objVenta.Nombres === '') {
                        $('#txtNombres').focus();
                    } else if (_this.objVenta.Apellidos === '') {
                        $('#txtApellidos').focus();
                    } else if (_this.objVenta.FechaNac === '') {
                        $('#txtFechaNac').focus();
                    } else if (!_this.objVenta.Sexo) {
                        $('#cboSexo input[type=search]').focus();
                    } else if (_this.objVenta.Telefono === '') {
                        $('#txtTelefono').focus();
                    } else if (_this.objVenta.Ruc === '') {
                        $('#txtRuc').focus();
                    } else if (_this.objVenta.Recoger === '') {
                        $('#txtRecoger').focus();
                    } else if (_this.objVenta.Reintegro === '') {
                        $('#txtReintegro').focus();
                    }
                },
                searchUser: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/itinerarios/consultar-usuario' + APP.util.getQueryParamByObject({
                        tipoDoc: _this.objVenta.CodiTipoDoc.id,
                        numeroDoc: _this.objVenta.Documento
                    }))
                        .then(res => {
                            if (res.data.IdCliente !== 0) {
                                _this.objVenta.IdCliente = res.data.IdCliente;
                                _this.objVenta.Nombres = res.data.NombreCliente;
                                _this.objVenta.Apellidos = res.data.ApellidoPaterno + ' ' + res.data.ApellidoMaterno;
                                _this.objVenta.ApellidoPaterno = res.data.ApellidoPaterno ;
                                _this.objVenta.ApellidoMaterno = res.data.ApellidoMaterno;
                                _this.objVenta.FechaNac = res.data.FechaNacimiento;
                                _this.objVenta.Edad = res.data.Edad;
                                _this.objVenta.Sexo = _this.list.sexos.find(x => x.id === res.data.Sexo);
                                _this.objVenta.Telefono = res.data.Telefono;
                                _this.objVenta.Ruc = res.data.RucContacto;
                            } else {
                                _this.objVenta.Nombres = '';
                                _this.objVenta.Apellidos = '';
                                _this.objVenta.FechaNac = '';
                                $('#txtFechaNac').data("DateTimePicker").clear();
                                _this.objVenta.Edad = '';
                                _this.objVenta.Sexo = null;
                                _this.objVenta.Telefono = '';
                                _this.objVenta.Ruc = '';
                            }
                            _this.recorridoSectionVentas();
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                passSectionVentas: function (_nroAsiento) {
                    this.objVenta.NroAsiento = _nroAsiento;
                    this.objVenta.NroVenta = 'N° 02-00000??';
                    this.recorridoSectionVentas();
                },
                clearSectionVentas: function () {
                    this.objVenta.NroAsiento = '';
                    this.objVenta.NroVenta = '';
                },
                saveUser: function () {
                    var _this = this;
                    var input = {};
                    input.IdCliente = _this.objVenta.IdCliente;
                    input.TipoDoc = _this.objVenta.CodiTipoDoc.id;
                    input.NumeroDoc = _this.objVenta.Documento;
                    input.NombreCliente = _this.objVenta.Nombres;
                    input.ApellidoPaterno = _this.objVenta.ApellidoPaterno;
                    input.ApellidoMaterno = _this.objVenta.ApellidoMaterno;
                    input.FechaNacimiento = _this.objVenta.FechaNac;
                    input.Edad = _this.objVenta.Edad;
                    input.Direccion = '';
                    input.Telefono = _this.objVenta.Telefono;
                    input.Email = '';
                    input.RucContacto = _this.objVenta.Ruc;
                    input.Sexo = _this.objVenta.Sexo;
                    APP.rq.axios2.post(APP.base + '/itinerarios/grabar-pasajero', input)
                        .then(res => {
                            APP.msg.info(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                bgcVentaBus: function (FechaVenta, Color, NumeAsiento, IDS) {
                    if (FechaVenta) {
                        switch (Color) {
                            case 45074:
                                return { 'background-color': '#12B000' };
                                break;
                            case 11337901:
                                return { 'background-color': '#AD00AD' };
                                break;
                            case 2752511:
                                return { 'background-color': '#FFFF29' };
                                break;
                        }
                    } else {
                        if (NumeAsiento === 0) {
                            if (IDS !== 0) return { 'background-color': 'darkgoldenrod' };
                        }
                    }
                },                
                bgcVentaBus2: function (Color) {
                    //TODO: Borrar Método
                    switch (Color) {
                        case 65280:
                            return '#12B000';
                            break;
                        case 11141290:
                            return '#AA00AA';
                            break;
                        case 3145727:
                            return '#FFFF2F';
                            break;
                        case 45074:
                            return '#12B000';
                            break;
                    }
                },
                iconVentaBus: function (Sexo, Edad) {
                    if (Edad < 18) {
                        return '/wwwroot/plugins/images/users/HOMBRE.png';
                    } else {
                        return Sexo === 'F' ? '/wwwroot/plugins/images/users/MUJER.png': '/wwwroot/plugins/images/users/NINO.png';
                    }
                },
                showNombrePasajero: function (FechaVenta, Nombres, ApellidoPaterno, ApellidoMaterno) {
                    if (FechaVenta) {
                        return `${Nombres} ${ApellidoPaterno} ${ApellidoMaterno}`
                    }
                }
            },
            computed: {
            },
            watch: {
                'filtro.CodiOrigenBus': function (newVal, oldVal) {
                    if (newVal) {
                        if (String(newVal.id).replace(/\s/g, '').length > 0 && typeof oldVal !== 'string') {
                            this.getPVOrigenesBus(newVal.id);
                            this.filtro.CodiPVOrigenBus = null;
                        }
                    } else {
                        this.list.pvOrigenesBus = [];
                        this.filtro.CodiPVOrigenBus = null;
                    }
                },
                'filtro.Fecha': function (newVal, oldVal) {
                    if (newVal) {
                        if (String(newVal.id).replace(/\s/g, '').length > 0) {
                            var _nombreDia = moment(newVal, 'DD/MM/YYYY').format('dddd');
                            document.getElementById('lblNameDay_Fecha').innerHTML = 'DÍA: ' + _nombreDia.toUpperCase();
                        }
                    } else {
                        document.getElementById('lblNameDay_Fecha').innerHTML = 'DÍA:';
                    }
                },
                'objVenta.CodiTipoDoc': function (newVal, oldVal) {
                    this.recorridoSectionVentas();
                },
                'objVenta.FechaNac': function (newVal) {
                    if (newVal) {
                        if (String(newVal.id).replace(/\s/g, '').length > 0) {
                            var auxFechaNac = moment(newVal, 'DD/MM/YYYY');
                            this.objVenta.Edad = '' + moment().diff(auxFechaNac, 'years');
                            this.recorridoSectionVentas();
                        }
                    } else {
                        return '';
                    }
                },
                'objVenta.Sexo': function (newVal, oldVal) {
                    this.recorridoSectionVentas();
                }
            }
        });

    </script>
}
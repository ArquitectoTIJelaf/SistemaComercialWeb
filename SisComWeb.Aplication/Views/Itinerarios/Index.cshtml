@using SisComWeb.Aplication.Helpers;
@using System.Globalization;
@using System.Configuration;

@{
    ViewBag.Title = "Ventas";
    var usuario = DataSession.UsuarioLogueado;
    var fechaActual = DateTime.Now.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture);
    var horaActual = DateTime.Now.ToString("hh:mmtt", CultureInfo.InvariantCulture);

    var CodiCorrelativoVentaBoleta = ConfigurationManager.AppSettings["CodiCorrelativoVentaBoleta"];
    var CodiCorrelativoVentaFactura = ConfigurationManager.AppSettings["CodiCorrelativoVentaFactura"];
}

@Html.Partial("_Filtros")
@Html.Partial("_Table")
@Html.Partial("_Venta")
@Html.Partial("_RegistrarInfante")
@Html.Partial("_TipoPago")
@Html.Partial("_PaseCortesia")
@Html.Partial("_BoletosVendidos")
@Html.Partial("_Postergacion")
@Html.Partial("_ClaveAutorizacion")

@section styles{
    <style type="text/css">
        .v-select.disabled .open-indicator {
            background-color: transparent !important;
        }

        #checkRegistrarNino {
            align-items: center;
            border: 1px solid #009CFF;
            border-radius: 5px;
            color: black;
            display: inline-flex;
            height: 31px;
            margin: 0px;
            padding-left: 30px;
            padding-right: 10px;
            text-align: center;
        }

        .v-select.disabled .dropdown-toggle input {
            background-color: transparent !important;
        }

        #divOtrosTurnos ul {
            display: block;
            margin-left: 30%;
        }

        #appRegistrarInfante .form-horizontal .control-label {
            text-align: left;
        }

        #appVueTipoPago .form-horizontal .control-label {
            text-align: left;
        }

        a[disabled] {
            pointer-events: none;
        }

        .panel-default .panel-heading {
            height: auto;
        }

        .input-group-addon {
            border-radius: 4px;
            border: 1px solid rgb(228, 231, 234);
            color: #2a97f4;
            background-color: white;
        }

        ul.pagination {
            display: inline-block;
            padding: 0;
            margin: 0;
            background-color: white;
            padding: 5px;
            border-radius: 8px;
            cursor: pointer;
        }

            ul.pagination li {
                display: inline;
            }

                ul.pagination li a {
                    color: black;
                    float: left;
                    padding: 8px 16px;
                    text-decoration: none;
                    transition: background-color .3s;
                    border: 1px solid #ddd;
                    margin: 0 4px;
                    border-radius: 50%;
                }

                    ul.pagination li a.active {
                        background-color: #4CAF50;
                        color: white;
                        border: 1px solid #4CAF50;
                    }

                    ul.pagination li a:hover:not(.active) {
                        background-color: #ddd;
                    }

        .pagination > li:first-child > a {
            border-top-left-radius: 50%;
            border-bottom-left-radius: 50%
        }

        .pagination > li:last-child > a {
            border-bottom-right-radius: 50%;
            border-top-right-radius: 50%;
        }

        .table-responsive > ul {
            display: none;
        }

        .btn-inverse:focus {
            background-color: #A1ABB7 !important;
            border: 1px solid #A1ABB7 !important;
        }

        .container-bus {
            display: inline-block;
            width: 100%;
            padding: 15px;
        }

        .img-bus {
            float: left;
        }

        .form-bus {
            background-color: #616e7e;
            width: calc(100% - 108px);
            border: 2px solid #4b4a4b;
            border-radius: 0 8px 8px 0;
            margin-bottom: 0;
        }

        .table-bus {
            cursor: default;
            background-color: white;
            height: 252px;
        }

        .LI {
            border-left: 2px solid #4b4a4b;
            margin-left: 5px;
            margin-right: 3px;
            height: 100%;
            display: block;
        }

        .PU {
            background: url("/wwwroot/plugins/images/users/puerta.png") no-repeat center center;
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .VA {
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .CU {
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .BA {
            background: url("/wwwroot/plugins/images/users/baño.png") no-repeat center center;
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .TV {
            background: url("/wwwroot/plugins/images/users/TV.png") no-repeat center center;
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .EE {
            background: url("/wwwroot/plugins/images/users/ESCALERA.png") no-repeat center center;
            background-color: #B2B2B2;
            border-radius: 4px;
            display: block;
            height: 95%;
            /*min-width: 40px;*/
            margin: 0 10px 0 10px;
        }

        .bus-td {
            padding: 0 !important;
            height: 48px;
            border-color: transparent !important;
            vertical-align: middle !important;
            align-items: center;
            text-align: center;
        }

        .btn-bus {
            padding: 5px;
            height: 95% !important;
            width: 95% !important;
            font-weight: 900;
            background-color: #f7fafc;
            border: 1px solid #5b5b5c !important;
            color: #333;
            background-image: radial-gradient(circle,rgba(255,255,255,.5),rgba(255,255,255,0));
        }

        .number-of-seat {
            display: block;
            font-size: 14px;
        }

        .icons-of-seat {
            display: block;
        }

        .ios-left {
            position: relative;
            left: -10%;
            height: 95%;
            min-width: 8px;
        }

        .ios-right {
            position: relative;
            right: -10%;
        }

        .ios-center {
            position: relative;
            height: 95%;
        }

        .check-with-label:checked + .label-for-check {
        }

        .active-chck {
            color: #2A97F4;
            font-weight: 500 !important;
        }

        @@-webkit-keyframes pulseColor {
            0% {
                color: #2A97F4;
            }

            50% {
                color: #198DF3;
            }

            51% {
                color: #0A67B8;
            }

            100% {
                color: #064072;
            }
        }

        #btnActualizar:focus {
            color: #2A97F4;
            font-weight: 500 !important;
            font-size: 16px;
            -webkit-animation-name: pulseColor;
            -webkit-animation-iteration-count: infinite;
            -webkit-animation-duration: 1s;
        }

        .animated {
            -webkit-animation-duration: 400ms;
            animation-duration: 400ms;
        }

        .align-radio {
            float: left;
            margin-right: 5px !important;
            margin-top: 2px !important;
        }

        .align-label-radio {
            margin-bottom: 4px;
        }

        .placeh-ticket-venta::placeholder {
            color: var(--emp-color);
            opacity: 1;
        }

        .placeh-ticket-venta:-ms-input-placeholder {
            color: var(--emp-color);
        }

        .placeh-ticket-venta::-ms-input-placeholder {
            color: var(--emp-color);
        }

        #appVueTable {
            /*height: calc(100vh - 265px);
            display: flex;*/
            /*align-items: center;*/
        }

        .content {
            /*text-align: center;
            width: 100%;*/
        }

        .boletosVendidos {
            font-size: 16px !important;
            font-weight: 500;
            color: #004e90;
            line-height: 0.5;
            text-align: center;
        }

        .boletosVendidosTitle {
            font-weight: 500;
            color: #6c7282;
            font-size: 18px;
            font-weight: 600;
            font-family: monospace;
            line-height: 15px;
        }

        .faImgTitle {
            font-size: 6em;
            color: var(--emp-color);
        }

        .colorHr {
            margin-top: 5px;
            background-color: cadetblue;
        }

        .mfBoletosVendidos {
            text-align: center;
        }
    </style>
}

@section scripts{
    <script type="text/javascript">

        $(document).ready(function () {

            //#region RECORRIDO ITINERARIOS
            $(document).on('focus active', 'input[type=checkbox]', function () {
                $('label[for=' + $(this).attr('id') + ']').addClass('active-chck');
            });
            $(document).on('blur', 'input[type=checkbox]', function () {
                $('label[for=' + $(this).attr('id') + ']').removeClass('active-chck');
            });
            //#endregion

            $('#txtPrecio').on('keypress', function (e) {
                // backspace = 8, enter = 13, ’0′ = 48, ’9′ = 57, ‘.’ = 46
                var field = $(this);
                key = e.keycode ? e.keycode : e.which;

                if (key == 8) return true;
                if (key > 47 && key < 58) {
                    if (field.val() === "") return true;
                    var existepto = (/[.]/).test(field.val());
                    if (existepto === false) {
                        regexp = /.[0-9]{10}$/; //parte entera 10
                    }
                    else {
                        regexp = /.[0-9]{2}$/; //parte decimal2
                    }
                    return !(regexp.test(field.val()));
                }
                if (key == 46) {
                    if (field.val() === "") return false;
                    regexp = /^[0-9]+$/;

                    return regexp.test(field.val());
                }
                return false;
            });

            $('#txtTtarjetaCantTP').on('keypress', function (e) {
                // backspace = 8, enter = 13, ’0′ = 48, ’9′ = 57, ‘.’ = 46
                var field = $(this);
                key = e.keycode ? e.keycode : e.which;

                if (key == 8) return true;
                if (key > 47 && key < 58) {
                    if (field.val() === "") return true;
                    var existepto = (/[.]/).test(field.val());
                    if (existepto === false) {
                        regexp = /.[0-9]{10}$/; //parte entera 10
                    }
                    else {
                        regexp = /.[0-9]{2}$/; //parte decimal2
                    }
                    return !(regexp.test(field.val()));
                }
                if (key == 46) {
                    if (field.val() === "") return false;
                    regexp = /^[0-9]+$/;

                    return regexp.test(field.val());
                }
                return false;
            });

            $('#txtEfectivoTP').on('keypress', function (e) {
                // backspace = 8, enter = 13, ’0′ = 48, ’9′ = 57, ‘.’ = 46
                var field = $(this);
                key = e.keycode ? e.keycode : e.which;

                if (key == 8) return true;
                if (key > 47 && key < 58) {
                    if (field.val() === "") return true;
                    var existepto = (/[.]/).test(field.val());
                    if (existepto === false) {
                        regexp = /.[0-9]{10}$/; //parte entera 10
                    }
                    else {
                        regexp = /.[0-9]{2}$/; //parte decimal2
                    }
                    return !(regexp.test(field.val()));
                }
                if (key == 46) {
                    if (field.val() === "") return false;
                    regexp = /^[0-9]+$/;

                    return regexp.test(field.val());
                }
                return false;
            });

            $('#appVueTipoPago').on('shown.bs.modal', function () {

                switch (appVueVenta.list.ventas[appVueVenta.indexVenta].FlagVenta) {
                    case 'R': // Reserva
                        $("#cboTipoPagoTP input[type=search]").focus();
                        return;
                }

                switch (appVueTipoPago.pickedBusVenta) {
                    case 'V': // Venta
                        $("#cboTipoPagoTP input[type=search]").focus();
                        break;
                    case '7': // Pase de Cortesía
                        appVueTipoPago.tipoPago = '01';
                        appVueTipoPago.$nextTick(function () {
                            $("#txtImportePagadoC").focus();
                        });
                        break;
                }
            });

            $('#appVueTipoPago').on('hidden.bs.modal', function () {
                $("#btnTipoPago").focus();
                appVueTipoPago.limpiarCampos();
            });

            $('#appRegistrarInfante').on('shown.bs.modal', function () {
                if (appVueVenta.list.ventas[appVueVenta.indexVenta].ObjAcompaniante) {
                    appRegistrarInfante.setMostrarInfante(appVueVenta.list.ventas[appVueVenta.indexVenta].ObjAcompaniante);
                    document.getElementById("chckRegistrarNino").checked = true;
                }
                else
                    $("#cboTipoDocRA input[type=search]").focus();
            });

            $('#appRegistrarInfante').on('hidden.bs.modal', function () {
                appVueVenta.$refs.refRegistrarNino.focus();
                if (!appVueVenta.list.ventas[appVueVenta.indexVenta].ObjAcompaniante)
                    appVueVenta.checkRegistrarNino = false;
                else {
                    if (appVueVenta.list.ventas[appVueVenta.indexVenta].ObjAcompaniante.CodiTipoDoc &&
                        appVueVenta.list.ventas[appVueVenta.indexVenta].ObjAcompaniante.Documento)
                        appVueVenta.checkRegistrarNino = true;
                    else {
                        appVueVenta.checkRegistrarNino = false;
                        document.getElementById('chckRegistrarNino').blur();
                    }
                }
            });

            $('#appVuePaseCortesia').on('shown.bs.modal', function () {
                $("#cboGerentePC input[type=search]").focus();
            });

            $('#appBoletosVendidos').on('shown.bs.modal', function () {
                $('#btnCerrarVenta').focus();
            });

            $('#appBoletosVendidos').on('hidden.bs.modal', function () {
                appController.chargeTurnos();
            });

            $('#appVuePostergacion').on('shown.bs.modal', function () {
                $('#cboEmpresaPos input[type=search]').focus();
            });

            $('#appClaveAutorizacion').on('shown.bs.modal', function () {
                $('#txtContraseniaCA').focus();
            });

            if ($('.dpyear').length) {
                $('.dpyear').datetimepicker({
                    keyBinds: {
                        enter: function (e) {
                            if (!e[0].previousElementSibling.value) {
                                this.date(moment().subtract(1, 'years').format('DD/MM/YYYY'));
                            }
                            this.hide();
                        }
                    },
                    useCurrent: false,
                    locale: 'es',
                    showTodayButton: false,
                    showClose: false,
                    showClear: false,
                    keepOpen: false,
                    toolbarPlacement: 'top',
                    format: 'DD/MM/YYYY',
                    defaultDate: moment().subtract(1, 'years'),
                    maxDate: moment().subtract(1, 'years'),
                    minDate: moment().subtract(150, 'years'),
                    tooltips: {
                        today: 'Ir a la fecha actual',
                        clear: 'Borrar fecha',
                        close: 'Cerrar selector'
                    }
                });
            }

            if ($('.dpyearnino').length) {
                $('.dpyearnino').datetimepicker({
                    keyBinds: {
                        enter: function (e) {
                            if (!e[0].previousElementSibling.value) {
                                this.date(moment().subtract(2, 'days').format('DD/MM/YYYY'));
                            }
                            this.hide();
                        }
                    },
                    useCurrent: false,
                    locale: 'es',
                    showTodayButton: false,
                    showClose: false,
                    showClear: false,
                    keepOpen: false,
                    toolbarPlacement: 'top',
                    format: 'DD/MM/YYYY',
                    defaultDate: moment().subtract(2, 'days'),
                    maxDate: moment().subtract(2, 'days'),
                    tooltips: {
                        today: 'Ir a la fecha actual',
                        clear: 'Borrar fecha',
                        close: 'Cerrar selector'
                    }
                });
            }
        })

        var fechaActual = '@fechaActual';

        var horaActual = '@horaActual';

        var CodiSucursal = '@usuario.CodiSucursal';

        var UrlIndexPrincipal = '@Url.Action("Index", "Principal")';

        var CodiCorrelativoVentaBoleta = '@CodiCorrelativoVentaBoleta';

        var CodiCorrelativoVentaFactura = '@CodiCorrelativoVentaFactura';

        var selectAll = {
            id: '0',
            label: 'TODOS'
        };

        Vue.filter('formatNombre', function (value) {
            var nombreConcat = value.split(',');
            return `${nombreConcat[2]} ${nombreConcat[0]} ${nombreConcat[1]}`;
        });

        Vue.filter('formatNroVenta', function (value) {
            if (value) {
                // Para el caso de 'Reserva'
                var auxCeroPorSigno = value.substring(1, 2);
                if (auxCeroPorSigno === '-') {
                    auxCeroPorSigno = '0';
                    value = value.substring(0, 1) + auxCeroPorSigno + value.substring(2);
                }
                // -------------------------
                var auxValue = value.substring(5);
                auxValue = auxValue.padStart(8, '0');
                return value.substring(0, 5) + auxValue;
            }
            else
                return '';
        });

        var appController = (function () {
            return {
                loadTable: function (_list) {
                    appVueTable.loadTable(_list)
                },
                showVentas: async function (_item, _turnos) {
                    appVueVenta.pickedBusVenta = 'V';
                    await appVueVenta.chargeVentas(_item, _turnos);
                    if (appVueVenta.showPlano) {
                        appVueFilter.showVentas = true;
                        appVueTable.showVentas = true;
                        appVueVenta.showVentas = true;
                    }
                },
                hideVentas: function () {
                    appVueFilter.showVentas = false;
                    appVueTable.showVentas = false;
                    appVueVenta.showVentas = false;
                },
                chargeTurnos: async function () {
                    // Si está actualizando, no volver a actualizar.
                    if (appVueVenta.processing) return;
                    var item = {};
                    appVueVenta.firstCharge = false;
                    item.CodiEmpresa = appVueVenta.filtro.CodiEmpresa.id;
                    item.CodiOrigen = appVueVenta.filtro.CodiSucursal.id;
                    item.CodiSucursal = appVueVenta.filtro.CodiOrigenBus.id;
                    item.CodiPuntoVenta = appVueVenta.filtro.CodiPVOrigenBus.id;
                    item.CodiRuta = appVueVenta.filtro.CodiDestinoBus.id;
                    item.CodiServicio = appVueVenta.filtro.CodiServicio.id;
                    item.CodiDestino = appVueVenta.filtro.CodiDestinoPas.id;
                    item.HoraPartida = appVueVenta.filtro.Turno.replace(" ", "");
                    item.FechaViaje = appVueVenta.filtro.Fecha;
                    await appVueVenta.getTurno(item, item.FechaViaje);
                },
                showTipoPago: function (_embarque, _arribos, _ticketVenta, _listaVenta) {
                    appVueTipoPago.show(_embarque, _arribos, _ticketVenta, _listaVenta);
                },
                showRegistrarInfante: function (_TipoDoc, _ListSexos) {
                    appRegistrarInfante.show(_TipoDoc, _ListSexos);
                },
                showPaseCortesia: function () {
                    appVuePaseCortesia.show();
                },
                sendPaseCortesia: function (_beneficiario) {
                    appVueVenta.setPaseCortesia(_beneficiario);
                },
                showBoletosVendidos: function (_boletosVendidos) {
                    appBoletosVendidos.show(_boletosVendidos);
                },
                chargeInfante: function (_ObjAcompaniante) {
                    appRegistrarInfante.setMostrarInfante(_ObjAcompaniante);
                },
                showPostergacion: function () {
                    appVuePostergacion.show();
                },
                showRegistrarWithClave: function () {
                    appClaveAutorizacion.show();
                },
                sendClaveAutorizacion: function (_password) {
                    appRegistrarInfante.sendClaveAutorizacion(_password);
                },
                liberarAsientoActual: function () {
                    var auxNroAsiento = appVueVenta.list.ventas[appVueVenta.indexVenta].NroAsiento;
                    if (auxNroAsiento) {
                        var auxObj = appVueVenta.findObjectAsiento(auxNroAsiento);
                        appVueVenta.liberarAsiento(auxObj, true);
                    }
                }
            };
        })();

        var appVueFilter = new Vue({
            el: '#appVueFilter',
            data: {
                filtro: {
                    CodiOrigen: null,
                    CodiDestino: selectAll,
                    CodiRuta: selectAll,
                    FechaViaje: fechaActual,
                    Hora: horaActual,
                    TodosTurnos: false,
                    SoloProgramados: false
                },
                list: {
                    origenesPas: [],
                    destinosPas: [],
                    destinosBus: [],

                    destinosPas_backup: [],
                    destinosBus_backup: []
                },
                showVentas: false,
                processing: false
            },
            mounted: function () {
                document.getElementsByClassName("borderBottom")[0].classList.add("colorBlue");

                $(".preloader").fadeIn();
                this.getSucursales();
                this.$nextTick(() => {
                    $('#cboDestinoPas input[type=search]').focus();
                    $(".preloader").fadeOut();
                });
            },
            methods: {
                getLabel(option) {
                    return `${option.id} - ${option.label}`
                },
                getSucursales() {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-oficinas')
                        .then(res => {
                            if (res.data.Estado) {
                                _this.list.origenesPas = _.cloneDeep(res.data.Valor);
                                _this.list.destinosPas = _.cloneDeep(res.data.Valor);
                                _this.list.destinosPas.unshift(selectAll);
                                _this.list.destinosBus = _.cloneDeep(res.data.Valor);
                                _this.list.destinosBus.unshift(selectAll);

                                _this.list.destinosPas_backup = _.cloneDeep(res.data.Valor);
                                _this.list.destinosPas_backup.unshift(selectAll);
                                _this.list.destinosBus_backup = _.cloneDeep(res.data.Valor);
                                _this.list.destinosBus_backup.unshift(selectAll);
                                _this.$nextTick(() => {
                                    _this.filtro.CodiOrigen = _this.list.origenesPas.find(x => x.id === CodiSucursal);
                                });
                            }
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                search() {
                    var _this = this;
                    _this.processing = true;

                    var input = {};
                    input.CodiOrigen = _this.filtro.CodiOrigen.id;
                    input.CodiDestino = _this.filtro.CodiDestino.id;
                    input.CodiRuta = (_this.filtro.CodiRuta) ? _this.filtro.CodiRuta.id : 0;
                    input.FechaViaje = _this.filtro.FechaViaje;
                    input.Hora = _this.filtro.Hora;
                    input.TodosTurnos = _this.filtro.TodosTurnos;
                    input.SoloProgramados = _this.filtro.SoloProgramados;

                    input.NomDestino = (_this.filtro.CodiDestino) ? _this.filtro.CodiDestino.label : '';

                    APP.rq.axios.post(APP.base + '/itinerarios/lista-itinerarios', input)
                        .then(res => {
                            if (res.data.Estado)
                                appController.loadTable(res.data.Valor);
                            else
                                APP.msg.error(res.data.Mensaje);

                            _this.processing = false;
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                recorrido: function () {
                    var _this = this;
                    if (!_this.filtro.CodiOrigen) {
                        $('#cboOrigenPas input[type=search]').focus();
                    }
                    else if (!_this.filtro.CodiDestino) {
                        $('#cboDestinoPas input[type=search]').focus();
                    }
                    else if (!_this.filtro.CodiRuta) {
                        $('#cboDestinoBus input[type=search]').focus();
                    }
                    else if (!_this.filtro.FechaViaje) {
                        $('#txtFecha').focus();
                    }
                    else {
                        this.search();
                    }
                },
                nextStep: function (code) {
                    switch (code) {
                        case 1: $('#cboDestinoPas input[type=search]').focus(); break;
                        case 2: $('#cboDestinoBus input[type=search]').focus(); break;
                        case 3: $('#txtFecha').focus(); break;
                        case 4: this.filtro.FechaViaje = $('#txtFecha').val(); $('#txtHora').focus(); break;
                        case 5: this.filtro.Hora = $('#txtHora').val(); $('#chckTodos:first').focus(); break;
                        case 6: $('#chckProgramados:first').focus(); break;
                        case 7: $('#buscar').focus(); break;
                        default: this.recorrido();
                    }
                }
            },
            watch: {
                'filtro.CodiOrigen': function (newVal, oldVal) {
                    if (this.filtro.CodiOrigen) {
                        this.$refs.refOrigenPas._data.typeAheadPointer = this.$nextTick(() => { _.findIndex(this.list.origenesPas, { 'id': this.filtro.CodiOrigen.id, 'label': this.filtro.CodiOrigen.label }); });

                        this.list.destinosPas = _.cloneDeep(this.list.destinosPas_backup);
                        _.pull(this.list.destinosPas, _.find(this.list.destinosPas, { 'id': this.filtro.CodiOrigen.id, 'label': this.filtro.CodiOrigen.label }));

                        this.list.destinosBus = _.cloneDeep(this.list.destinosBus_backup);
                        _.pull(this.list.destinosBus, _.find(this.list.destinosBus, { 'id': this.filtro.CodiOrigen.id, 'label': this.filtro.CodiOrigen.label }));
                    }
                },
                'filtro.CodiDestino': function (newVal, oldVal) {
                    if (this.filtro.CodiDestino)
                        this.$refs.refDestinoPas._data.typeAheadPointer = this.$nextTick(() => { _.findIndex(this.list.destinosPas, { 'id': this.filtro.CodiDestino.id, 'label': this.filtro.CodiDestino.label }); });
                },
                'filtro.CodiRuta': function (newVal, oldVal) {
                    if (this.filtro.CodiRuta)
                        this.$refs.refDestinoBus._data.typeAheadPointer = this.$nextTick(() => { _.findIndex(this.list.destinosBus, { 'id': this.filtro.CodiRuta.id, 'label': this.filtro.CodiRuta.label }); });
                }
            }
        });

        var appVueTable = new Vue({
            el: '#appVueTable',
            data: {
                list: {
                    itinerarios: []
                },
                paginate: ['items'],
                showVentas: false
            },
            mounted: function () {},
            methods: {
                loadTable: function (list) {
                    this.list.itinerarios = list;
                    this.$nextTick(() => {
                        this.shown = true
                        if (this.$refs.paginator && this.list.itinerarios.length > 0)
                            this.$refs.paginator.goToPage(1);
                    });
                },
                sendRow: async function (item) {
                    var turnos = this.list.itinerarios.reduce(function (filtered, option) {
                        if (option.CodiDestino === item.CodiDestino) {
                            var someNewValue =
                            {
                                NomServicio: option.NomServicio,
                                HoraPartida: option.HoraPartida,
                                CodiServicio: option.CodiServicio,
                                CodiRuta: option.CodiRuta,
                                //TODO Parámetros innecesarios
                                PlanoBus: option.PlanoBus,
                                CodiProgramacion: option.CodiProgramacion,
                                CodiOrigen: option.CodiOrigen,
                                CodiDestino: option.CodiDestino,
                                CodiBus: option.CodiBus,
                                HoraViaje: option.HoraViaje,
                                FechaViaje: option.FechaViaje,
                                CodiEmpresa: option.CodiEmpresa,
                                FechaProgramacion: option.FechaProgramacion,
                                NroViaje: option.NroViaje,
                                CodiPuntoVenta: option.CodiPuntoVenta,
                                CodiSucursal: option.CodiSucursal
                            }
                            filtered.push(someNewValue);
                        }
                        return filtered;
                    }, []);

                    appController.showVentas(item, turnos);

                    //await appController.showVentas(item, turnos);
                    //this.$nextTick(() => {
                    //    this.$refs.refNroAsientoVenta.focus();
                    //});
                }
            },
            computed: {},
            watch: {}
        });
        
        var appVueVenta = new Vue({
            el: '#appVueVenta',
            data: {
                filtro: {
                    CodiEmpresa: null,
                    CodiSucursal: null,
                    CodiOrigenBus: null,
                    CodiPVOrigenBus: null,
                    CodiDestinoBus: null,
                    CodiServicio: null,
                    CodiDestinoPas: null,
                    Turno: '',
                    Fecha: '',
                    NroViaje: '',
                    CodiProgramacion: ''
                },
                list: {
                    empresas: [],
                    sucursales: [],
                    origenesBus: [],
                    pvOrigenesBus: [],
                    destinosBus: [],
                    servicios: [],
                    destinosPas: [],
                    plano1: [],
                    plano2: [],
                    plano3: [],
                    plano4: [],
                    plano5: [],
                    tiposDoc: [],
                    turnos: [],
                    destinosRuta: [],
                    embarques: [],
                    arribos: [],
                    ventas: [{
                        IdCliente: 0,
                        CodiTipoDoc: null,
                        Documento: '',
                        Nombres: '',
                        ApellidoPaterno: '',
                        ApellidoMaterno: '',
                        FechaNac: '',
                        Edad: '',
                        Sexo: null,
                        Telefono: '',
                        Ruc: '',
                        RazonSocial: '',
                        Direccion: '',
                        Recoger: '',
                        Reintegro: '',
                        Observacion: '',
                        Precio: '',
                        PrecioNormal: '',
                        PrecioMin: '',
                        PrecioMax: '',
                        NroAsiento: '',
                        NivelAsiento: 0,
                        NroVenta: '',
                        NroSolicitud: '',
                        FechaVen: moment(new Date, 'DD/MM/YYYY').format("DD/MM/YYYY"),
                        Nacionalidad: '',
                        OldNroAsiento: '',
                        FlagVenta: '',
                        ObjAcompaniante: null,
                        CodiGerente: '',
                        CodiSocio: '',
                        Concepto: '',
                        FechaAbierta: false,
                        IdVenta: 0
                    }],
                    sexos: [
                        { 'id': 'M', 'label': 'MASCULINO' },
                        { 'id': 'F', 'label': 'FEMENINO' }
                    ],
                    tempList: []
                },
                objPlano: {
                    CodiBus: '',
                    PlacaBus: '',
                    PlanoBus: '',
                    CodiChofer: '',
                    NombreChofer: '',
                    CodiCopiloto: '',
                    NombreCopiloto: ''
                },
                showVentas: false,
                showPlano: false,
                showTextTurnos: false,
                firstCharge: true,
                indexVenta: 0,
                oldPeople: [],
                firstAsiento: true,
                pickedBusVenta: 'V',
                mask: {
                    documento: ''
                },
                objTurno: {
                    FechaProgramacion: '',
                    HoraProgramacion: ''
                },
                Correlativo: '',
                auxFocus: {
                    asiento: false,
                    precio: false
                },
                processing: false,
                empresas: [],
                checkRegistrarNino: false,
                disabledAsiento: false,
                // Correlativos
                CorrelativoVentaBoleta: '',
                CorrelativoVentaFactura: ''
            },
            mounted: function () {
                this.getEmpresas();
                this.getSucursales();
                this.getServicios();
                this.getTiposDoc();

                window.addEventListener('keydown', this.configEventKeyF5);
                window.addEventListener('beforeunload', this.beforeClosePage);
            },
            methods: {
                chargeVentas: async function (item, turnos) {
                    this.firstCharge = true;
                    this.list.turnos = turnos;
                    this.objTurno.FechaProgramacion = item.FechaProgramacion;
                    this.objTurno.HoraProgramacion = item.HoraProgramacion;

                    await this.getTurno(item);
                },
                getTurno: async function (item) {
                    var _this = this;
                    _this.processing = true;
                    _this.checkRegistrarNino = false;
                    // --------------------------------------
                    if (!_this.firstCharge) {
                        if ($("#panelWrapperV").hasClass("in")) {
                            $('#btnDesplegar').click();
                            this.showTextTurnos = true;
                        }
                    }
                    // --------------------------------------
                    var input = {};
                    input.CodiEmpresa = item.CodiEmpresa;
                    input.CodiOrigen = item.CodiOrigen;
                    input.CodiDestino = item.CodiDestino;
                    input.CodiSucursal = item.CodiSucursal;
                    input.CodiRuta = item.CodiRuta;
                    input.CodiPuntoVenta = item.CodiPuntoVenta;
                    input.CodiServicio = item.CodiServicio;
                    input.HoraViaje = item.HoraPartida;
                    input.FechaViaje = item.FechaViaje;
                    _this.CorrelativoVentaBoleta = await _this.getCorrelativo(item.CodiEmpresa, CodiCorrelativoVentaBoleta);
                    // ---------------------------------
                    if (!_this.CorrelativoVentaBoleta) {
                        _this.processing = false;
                        _this.showPlano = false;
                        return;
                    }
                    // ---------------------------------
                    _this.CorrelativoVentaFactura = await _this.getCorrelativo(item.CodiEmpresa, CodiCorrelativoVentaFactura);
                    _this.Correlativo = _.cloneDeep(_this.CorrelativoVentaBoleta);
                    await APP.rq.axios.post(APP.base + '/itinerarios/turnos', input)
                        .then(async function (res) {
                            if (res.data.Estado) {
                                _this.filtro.CodiEmpresa = _this.list.empresas.find(x => x.id === String(res.data.Valor.CodiEmpresa));
                                _this.filtro.CodiSucursal = _this.list.sucursales.find(x => x.id === String(res.data.Valor.CodiOrigen));
                                _this.filtro.CodiOrigenBus = _this.list.origenesBus.find(x => x.id === String(res.data.Valor.CodiSucursal));
                                _this.filtro.CodiDestinoBus = _this.list.destinosBus.find(x => x.id === String(res.data.Valor.CodiRuta));
                                _this.filtro.CodiServicio = _this.list.servicios.find(x => x.id === String(res.data.Valor.CodiServicio));
                                _this.filtro.CodiDestinoPas = _this.list.destinosPas.find(x => x.id === String(res.data.Valor.CodiDestino));
                                _this.filtro.Turno = res.data.Valor.HoraPartida;
                                _this.filtro.Fecha = input.FechaViaje;
                                _this.filtro.NroViaje = res.data.Valor.NroViaje;
                                _this.filtro.CodiProgramacion = res.data.Valor.CodiProgramacion;
                                await _this.getPVOrigenesBus(_this.filtro.CodiOrigenBus.id);
                                _this.filtro.CodiPVOrigenBus = _this.list.pvOrigenesBus.find(x => x.id === String(res.data.Valor.CodiPuntoVenta));
                                _this.objPlano.CodiBus = res.data.Valor.CodiBus;
                                _this.objPlano.PlacaBus = res.data.Valor.PlacaBus;
                                _this.objPlano.PlanoBus = res.data.Valor.PlanoBus;
                                _this.objPlano.CodiChofer = res.data.Valor.CodiChofer;
                                _this.objPlano.NombreChofer = res.data.Valor.NombreChofer;
                                _this.objPlano.CodiCopiloto = res.data.Valor.CodiCopiloto;
                                _this.objPlano.NombreCopiloto = res.data.Valor.NombreCopiloto;
                                _this.list.destinosRuta = res.data.Valor.ListaDestinosRuta;
                                _this.list.embarques = res.data.Valor.ListaEmbarques;
                                _this.list.arribos = res.data.Valor.ListaArribos;
                                _this.objTurno.FechaProgramacion = res.data.Valor.FechaProgramacion;
                                _this.objTurno.HoraProgramacion = res.data.Valor.HoraProgramacion;
                                _this.list.tempList = _.cloneDeep(res.data.Valor.ListaPlanoBus);
                                // -------------------------------------------------------
                                var auxResponse = await _this.limpiarAsientosBloqueados();
                                if (!auxResponse) {
                                    _this.processing = false;
                                    _this.showPlano = false;
                                    return;
                                }
                                // -------------------------------------------------------
                                _this.list.plano5 = _this.list.tempList.filter(x => x.Indice === Math.ceil(x.Indice / 5) * 5);
                                _this.list.plano4 = _this.list.tempList.filter(x => x.Indice + 1 === Math.ceil(x.Indice / 5) * 5);
                                _this.list.plano3 = _this.list.tempList.filter(x => x.Indice + 2 === Math.ceil(x.Indice / 5) * 5);
                                _this.list.plano2 = _this.list.tempList.filter(x => x.Indice + 3 === Math.ceil(x.Indice / 5) * 5);
                                _this.list.plano1 = _this.list.tempList.filter(x => x.Indice + 4 === Math.ceil(x.Indice / 5) * 5);
                                _this.firstAsiento = true;
                                _this.limpiarVenta();
                                _this.$nextTick(() => {
                                    _this.showPlano = true;
                                });
                            }
                            else {
                                _this.showPlano = false;
                                APP.msg.error(res.data.Mensaje);
                            }

                            _this.processing = false;
                        })
                        .catch(APP.rq.axios_handler_error_alert);

                    _this.$nextTick(() => {
                        if (_this.showTextTurnos) {
                            animateScrollTop(800);
                            _this.$refs.refNroAsientoVenta.focus();
                        }
                    });
                },
                getEmpresas: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-empresas')
                        .then(res => {
                            if (res.data.Estado) {
                                _this.list.empresas = _.cloneDeep(res.data.Valor);
                                _this.empresas = _.cloneDeep(res.data.Valor);
                            }
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                getSucursales: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-oficinas')
                        .then(res => {
                            if (res.data.Estado) {
                                _this.list.sucursales = _.cloneDeep(res.data.Valor);
                                _this.list.origenesBus = _.cloneDeep(res.data.Valor);
                                _this.list.destinosBus = _.cloneDeep(res.data.Valor);
                                _this.list.destinosPas = _.cloneDeep(res.data.Valor);
                            }
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                getPVOrigenesBus: async function (Codi_OrigenBus) {
                    var _this = this;
                    await APP.rq.axios2.get(APP.base + '/base/get-puntosventa', { params: { CodiSucursal: Codi_OrigenBus } })
                        .then(res => {
                            if (res.data.Estado)
                                _this.list.pvOrigenesBus = _.cloneDeep(res.data.Valor);
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                getServicios: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-servicios')
                        .then(res => {
                            if (res.data.Estado)
                                _this.list.servicios = _.cloneDeep(res.data.Valor);
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                getTiposDoc() {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-tiposDoc')
                        .then(res => {
                            if (res.data.Estado)
                                _this.list.tiposDoc = _.cloneDeep(res.data.Valor);
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                hideVentas: async function () {
                    this.showPlano = false;
                    this.firstCharge = false;
                    if (!$("#panelWrapperV").hasClass("in")) {
                        $('#btnDesplegar').click();
                    }
                    appController.hideVentas();
                    await this.limpiarAsientosBloqueados();
                    /*appVueFilter.nextStep(0);*/ // PUBLICADO
                },
                cerrarVentas: async function () {
                    await this.limpiarAsientosBloqueados();
                    window.location.href = UrlIndexPrincipal;
                },
                changeTurno: function (item) {
                    this.showPlano = false;
                    this.getTurno(item, item.FechaViaje);
                },
                clear: function () {
                    var _this = this;
                    _this.firstCharge = false; //TODO
                    _this.filtro.CodiEmpresa = null;
                    _this.filtro.CodiSucursal = null;
                    _this.filtro.CodiOrigenBus = null;
                    _this.filtro.CodiPVOrigenBus = null;
                    _this.filtro.CodiDestinoBus = null;
                    _this.filtro.CodiServicio = null;
                    _this.filtro.CodiDestinoPas = null;
                    $('#txtTurno').data("DateTimePicker").clear();
                    $('#txtFecha_2').data("DateTimePicker").clear();
                    _this.filtro.Turno = '';
                    _this.filtro.Fecha = '';
                },
                getLabel: function (option) {
                    return `${option.id} - ${option.label}`
                },
                labelOfDocumento: function (option) {
                    return option.label.substring(0, 8);
                },
                bloquearAsiento: async function (asientoSel, auxBool_Click_Key) { // Click: True | Key: False
                    var _this = this;
                    
                    // Validar 'AsientoSel' no vendido
                    if (!asientoSel.FlagVenta) {
                        switch (_this.pickedBusVenta) {
                            case 'AN': // Anulación
                                APP.msg.warning("Debe seleccionar un asiento vendido.");
                                // Animación 'ScrollTop'
                                animateScrollTop(800);
                                return;
                        }
                    }

                    // Validar 'liberarAsiento'
                    if (asientoSel.IDS > 0) {
                        await _this.liberarAsiento(asientoSel, true);
                        return;
                    }

                    // Validar 'AsientoSel' vendido
                    if (asientoSel.FlagVenta) {
                        await _this.fillDataAsientoVendido(asientoSel);
                        return;
                    }

                    // Limpiar si el asiento anterior era solo vista
                    if (_this.list.ventas[_this.indexVenta].FlagVenta)
                        _this.limpiarVenta();

                    var input = {};
                    input.CodiProgramacion = _this.filtro.CodiProgramacion;
                    input.NroViaje = _this.filtro.NroViaje;
                    input.CodiOrigen = _this.filtro.CodiSucursal.id;
                    input.CodiDestino = _this.filtro.CodiDestinoPas.id;
                    input.NumeAsiento = asientoSel.Tipo;
                    input.FechaProgramacion = _this.filtro.Fecha;
                    input.Precio = asientoSel.PrecioVenta;
                    await APP.rq.axios2.post(APP.base + '/itinerarios/bloquearAsiento', input)
                        .then(res => {
                            if (res.data.EsCorrecto) {
                                // Animación 'ScrollTop'
                                animateScrollTop(800);

                                asientoSel.IDS = res.data.Valor;
                                asientoSel.NumeAsiento = parseFloat(asientoSel.Tipo);

                                var nameCookie = 'asientoBloqueado_' + (_this.filtro.CodiProgramacion > 0 ? _this.filtro.CodiProgramacion : _this.filtro.NroViaje) + '_' + _this.filtro.Fecha + '_' + asientoSel.Tipo;
                                APP.util.createCookie(nameCookie, asientoSel.IDS, 7);

                                if (auxBool_Click_Key) {
                                    if (!_this.firstAsiento) _this.createElementInList();
                                    _this.passSectionVentas(asientoSel.Tipo, asientoSel.PrecioNormal, asientoSel.Nivel, asientoSel.PrecioMinimo, asientoSel.PrecioMaximo);
                                    _this.firstAsiento = false;
                                }

                                this.list.ventas[this.indexVenta].OldNroAsiento = this.list.ventas[this.indexVenta].NroAsiento;

                                // SignalR
                                ClientSignalR.NroViaje = _this.filtro.NroViaje;
                                ClientSignalR.FechaViaje = _this.filtro.Fecha;
                                ClientSignalR.NroAsiento = asientoSel.Tipo;
                                ClientSignalR.Owner = true;
                                if (ClientSignalR.NroViaje && ClientSignalR.FechaViaje && ClientSignalR.NroAsiento) document.getElementById('btnHiddenBloquearBus').click();

                                // Acción según 'pickedBusVenta'
                                switch (_this.pickedBusVenta) {
                                    case 'V': // Venta
                                        _this.list.ventas[_this.indexVenta].FlagVenta = '';
                                        break;
                                    case '7': // Pase de cortesía
                                        appController.showPaseCortesia();
                                        break;
                                    case 'PO': // Postergarción
                                        appController.showPostergacion();
                                        break;
                                    case 'FA': // Fecha Abierta
                                        this.sendToFechaAbierta(asientoSel);
                                        break;
                                }
                            }
                            else {
                                if (!res.data.Estado)
                                    APP.msg.error(res.data.Mensaje);
                            }
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                fillDataAsientoVendido: async function (asientoSel) {
                    var _this = this;
                    var _fillData = false;

                    // Before
                    switch (asientoSel.FlagVenta) {
                        case 'V': // Venta
                        case '7': // Pase de cortesía
                            {
                                switch (_this.pickedBusVenta) {
                                    case 'FA': // Fecha abierta
                                        _this.sendToFechaAbierta(asientoSel);
                                        _fillData = true;
                                        break;
                                    case 'AN': // Anulación
                                        _this.sendToAnularVenta(asientoSel);
                                        _fillData = true;
                                        break;
                                }
                            };
                            break;
                        case 'VI': // Venta intermedia
                            {
                                var auxDestinoPas = _this.list.destinosPas.find(x => parseInt(x.id) === asientoSel.CodiOrigen);
                                if (auxDestinoPas) {
                                    if (asientoSel.NumeAsiento !== parseInt(_this.list.ventas[_this.indexVenta].NroAsiento))
                                        APP.msg.warning("Solo puede vender o reservar hasta " + auxDestinoPas.label);
                                }
                                else
                                    APP.msg.error("Solo puede vender o reservar hasta " + 'No encontrado');
                            };
                            break;
                    }
                    
                    if (_this.list.ventas.length > 1 || (!_this.list.ventas[_this.indexVenta].FlagVenta && _this.list.ventas[_this.indexVenta].NroAsiento)) {
                        _fillData = await APP.msg.confirm('Confirmar Acción', 'Se perderán los asientos bloqueados sin vender, ¿Desea continuar?');
                        if (_fillData)
                            await _this.cancelarBoletos();
                    }
                    else {
                        if (_this.list.ventas[_this.indexVenta].FlagVenta) {
                            if (_this.list.ventas[_this.indexVenta].NroAsiento === String(asientoSel.NumeAsiento).padStart(2, '0'))
                                _this.limpiarVenta();
                            else
                                _fillData = true;
                        }
                        else {
                            if (_this.list.ventas[_this.indexVenta].NroAsiento)
                                await _this.cancelarBoletos();

                            _fillData = true;
                        }
                    }
                    
                    // After
                    switch (asientoSel.FlagVenta) {
                        case 'VI': // Venta intermedia
                            {
                                if (asientoSel.IdVenta === '0') {
                                    _fillData = false;
                                    _this.limpiarVenta();
                                }
                            };
                            break;
                        case 'AB': // Venta pero como bloqueado (Tb_AsientosBloqueados)
                        case 'X': // Bloqueo solo desde el Cliente/Servidor
                            _fillData = false;
                            _this.limpiarVenta();
                            break;
                    }

                    // Solo cuando '_fillData' es 'true':
                    if (_fillData) {
                        // Animación 'ScrollTop'
                        animateScrollTop(800);

                        _this.limpiarVenta();
                        _this.list.ventas[_this.indexVenta].NroAsiento = String(asientoSel.NumeAsiento).padStart(2, '0');
                        _this.list.ventas[_this.indexVenta].CodiTipoDoc = _.find(_this.list.tiposDoc, { 'id': asientoSel.TipoDocumento }) || null;
                        _this.list.ventas[_this.indexVenta].Documento = asientoSel.NumeroDocumento;
                        _this.list.ventas[_this.indexVenta].Nombres = asientoSel.Nombres;
                        _this.list.ventas[_this.indexVenta].ApellidoPaterno = asientoSel.ApellidoPaterno;
                        _this.list.ventas[_this.indexVenta].ApellidoMaterno = asientoSel.ApellidoMaterno;
                        _this.list.ventas[_this.indexVenta].FechaNac = asientoSel.FechaNacimiento;
                        _this.list.ventas[_this.indexVenta].Edad = asientoSel.Edad;
                        _this.list.ventas[_this.indexVenta].Sexo = _.find(_this.list.sexos, { 'id': asientoSel.Sexo }) || null;
                        _this.list.ventas[_this.indexVenta].Telefono = asientoSel.Telefono;
                        _this.list.ventas[_this.indexVenta].Recoger = asientoSel.RecogeEn;
                        _this.list.ventas[_this.indexVenta].Ruc = asientoSel.RucContacto;
                        _this.list.ventas[_this.indexVenta].Nacionalidad = asientoSel.Nacionalidad;
                        _this.list.ventas[_this.indexVenta].Precio = asientoSel.PrecioVenta;
                        _this.list.ventas[_this.indexVenta].FlagVenta = asientoSel.FlagVenta;
                        _this.list.ventas[_this.indexVenta].RazonSocial = asientoSel.RazonSocial;
                        _this.list.ventas[_this.indexVenta].Direccion = asientoSel.Direccion;
                        _this.list.ventas[_this.indexVenta].NroVenta = (asientoSel.TipoBoleto === 'M' ? '0' : asientoSel.TipoBoleto) + asientoSel.Boleto;
                        _this.list.ventas[_this.indexVenta].IdVenta = asientoSel.IdVenta;
                        _this.list.ventas[_this.indexVenta].FechaVen = asientoSel.FechaVenta;

                        if (asientoSel.ObjAcompaniante) {
                            _this.list.ventas[_this.indexVenta].ObjAcompaniante = asientoSel.ObjAcompaniante;
                            appController.chargeInfante(_this.list.ventas[_this.indexVenta].ObjAcompaniante);
                            // Checked opción 'RegistrarNino'
                            if (asientoSel.ObjAcompaniante.CodiTipoDoc && asientoSel.ObjAcompaniante.Documento)
                                _this.checkRegistrarNino = true;
                        }
                    }
                },
                createElementInList: function () {
                    this.indexVenta = this.list.ventas.length - 1;
                    this.indexVenta++;
                    this.list.ventas.push({
                        IdCliente: 0,
                        CodiTipoDoc: null,
                        Documento: '',
                        Nombres: '',
                        ApellidoPaterno: '',
                        ApellidoMaterno: '',
                        FechaNac: '',
                        Edad: '',
                        Sexo: null,
                        Telefono: '',
                        Ruc: '',
                        RazonSocial: '',
                        Direccion: '',
                        Recoger: '',
                        Reintegro: '',
                        Observacion: '',
                        Precio: '',
                        PrecioNormal: '',
                        PrecioMin: '',
                        PrecioMax: '',
                        NroAsiento: '',
                        NivelAsiento: 0,
                        NroVenta: '',
                        NroSolicitud: '',
                        FechaVen: moment(new Date, 'DD/MM/YYYY').format("DD/MM/YYYY"),
                        Nacionalidad: '',
                        OldNroAsiento: '',
                        FlagVenta: '',
                        ObjAcompaniante: null,
                        CodiGerente: '',
                        CodiSocio: '',
                        Concepto: '',
                        FechaAbierta: false,
                        IdVenta: 0
                    });
                },
                liberarAsiento: async function (asientoSel, auxBool_Click_Key) { // Click: True | Key: False
                    var _this = this;
                    var auxResponse = false;

                    await APP.rq.axios2.post(APP.base + '/itinerarios/liberarAsiento', { IDS: asientoSel.IDS })
                        .then(res => {
                            if (res.data.EsCorrecto) {
                                asientoSel.IDS = 0;
                                asientoSel.NumeAsiento = 0;

                                var nameCookie = 'asientoBloqueado_' + (_this.filtro.CodiProgramacion > 0 ? _this.filtro.CodiProgramacion : _this.filtro.NroViaje) + '_' + _this.filtro.Fecha + '_' + asientoSel.Tipo;
                                APP.util.deleteCookie(nameCookie);

                                if (auxBool_Click_Key) {
                                    if (_this.list.ventas.length === 1) {
                                        _this.limpiarVenta();
                                        _this.firstAsiento = true;
                                    }
                                    else {
                                        var auxIndex = appVueVenta.list.ventas.findIndex(x => x.NroAsiento === asientoSel.Tipo)
                                        _this.list.ventas.splice(auxIndex, 1);
                                        _this.indexVenta = auxIndex > 0 ? auxIndex - 1 : 0;
                                    }
                                }

                                // SignalR
                                ClientSignalR.NroViaje = _this.filtro.NroViaje;
                                ClientSignalR.FechaViaje = _this.filtro.Fecha;
                                ClientSignalR.NroAsiento = asientoSel.Tipo;
                                ClientSignalR.Owner = true;
                                if (ClientSignalR.NroViaje && ClientSignalR.FechaViaje && ClientSignalR.NroAsiento) document.getElementById('btnHiddenLiberarBus').click();

                                auxResponse = true;
                            }
                            else {
                                if (!res.data.Estado)
                                    APP.msg.error(res.data.Mensaje);
                            }
                        })
                        .catch(APP.rq.axios_handler_error_alert);

                    return auxResponse;
                },
                limpiarAsientosBloqueados: async function () {
                    var _this = this;
                    var auxResponse = true;

                    var partNameCookie = 'asientoBloqueado_' + (_this.filtro.CodiProgramacion > 0 ? _this.filtro.CodiProgramacion : _this.filtro.NroViaje) + '_' + _this.filtro.Fecha + '_';

                    // Solo cuando exista 'CodiProgramacion', buscar también por 'NroViaje' para un limpiado completo.
                    if (_this.filtro.CodiProgramacion > 0)
                        var partNameCookie2 = 'asientoBloqueado_' + _this.filtro.NroViaje + '_' + _this.filtro.Fecha + '_';

                    for (var objAsiento of _this.list.tempList) {
                        if (!isNaN(objAsiento.Tipo)) {

                            var valueCookie = APP.util.readCookie(partNameCookie + objAsiento.Tipo);
                            if (valueCookie) {
                                objAsiento.IDS = valueCookie;

                                await APP.rq.axios2.post(APP.base + '/itinerarios/liberarAsiento', { IDS: valueCookie })
                                    .then(res => {
                                        if (res.data.EsCorrecto) {
                                            objAsiento.IDS = 0;
                                            objAsiento.NumeAsiento = 0;

                                            APP.util.deleteCookie(partNameCookie + objAsiento.Tipo);

                                            // SignalR
                                            ClientSignalR.NroViaje = _this.filtro.NroViaje;
                                            ClientSignalR.FechaViaje = _this.filtro.Fecha;
                                            ClientSignalR.NroAsiento = objAsiento.Tipo;
                                            ClientSignalR.Owner = true;
                                            if (ClientSignalR.NroViaje && ClientSignalR.FechaViaje && ClientSignalR.NroAsiento) document.getElementById('btnHiddenLiberarBus').click();
                                        }
                                        else {
                                            if (!res.data.Estado)
                                                APP.msg.error(res.data.Mensaje);

                                            return auxResponse = false;
                                        }
                                    })
                                    .catch(APP.rq.axios_handler_error_alert);
                            }
                            else {
                                // Solo cuando exista 'CodiProgramacion', buscar también por 'NroViaje' para un limpiado completo.
                                if (_this.filtro.CodiProgramacion > 0) {
                                    var valueCookie = APP.util.readCookie(partNameCookie2 + objAsiento.Tipo);
                                    if (valueCookie) {
                                        objAsiento.IDS = valueCookie;

                                        await APP.rq.axios2.post(APP.base + '/itinerarios/liberarAsiento', { IDS: valueCookie })
                                            .then(res => {
                                                if (res.data.EsCorrecto) {
                                                    objAsiento.IDS = 0;
                                                    objAsiento.NumeAsiento = 0;

                                                    APP.util.deleteCookie(partNameCookie2 + objAsiento.Tipo);

                                                    // SignalR
                                                    ClientSignalR.NroViaje = _this.filtro.NroViaje;
                                                    ClientSignalR.FechaViaje = _this.filtro.Fecha;
                                                    ClientSignalR.NroAsiento = objAsiento.Tipo;
                                                    ClientSignalR.Owner = true;
                                                    if (ClientSignalR.NroViaje && ClientSignalR.FechaViaje && ClientSignalR.NroAsiento) document.getElementById('btnHiddenLiberarBus').click();
                                                }
                                                else {
                                                    if (!res.data.Estado)
                                                        APP.msg.error(res.data.Mensaje);

                                                    return auxResponse = false;
                                                }
                                            })
                                            .catch(APP.rq.axios_handler_error_alert);
                                    }
                                }
                            }
                        }
                    }

                    return auxResponse;
                },
                limpiarAsientosBloqueados_Out: async function () {
                    var _this = this;
                    var arregloIDS = [];
                    var arregloCookie = [];

                    var partNameCookie = 'asientoBloqueado_' + (_this.filtro.CodiProgramacion > 0 ? _this.filtro.CodiProgramacion : _this.filtro.NroViaje) + '_' + _this.filtro.Fecha + '_';

                    for (var objAsiento of _this.list.tempList) {
                        if (!isNaN(objAsiento.Tipo)) {
                            var valueCookie = APP.util.readCookie(partNameCookie + objAsiento.Tipo);
                            if (valueCookie) {
                                objAsiento.IDS = valueCookie;

                                arregloIDS.push(valueCookie);
                                arregloCookie.push(partNameCookie + objAsiento.Tipo);
                            }
                        }
                    }

                    if (arregloIDS.length > 0) {
                        await APP.rq.axios2.post(APP.base + '/itinerarios/liberarArregloAsientos', arregloIDS)
                            .then(res => {
                                if (res.data.Estado)
                                    _.forEach(arregloCookie, function (value) { APP.util.deleteCookie(value) });
                                else
                                    APP.msg.error(res.data.Mensaje);
                            })
                            .catch(APP.rq.axios_handler_error_alert);
                    }
                },
                recorridoSectionFilter: function () {
                    var _this = this;
                    if (!_this.filtro.CodiEmpresa) {
                        $('#cboEmpresa input[type=search]').focus();
                    }
                    else if (!_this.filtro.CodiSucursal) {
                        $('#cboSucursal input[type=search]').focus();
                    }
                    else if (!_this.filtro.CodiOrigenBus) {
                        $('#cboOrigenBus input[type=search]').focus();
                    }
                    else if (!_this.filtro.CodiPVOrigenBus) {
                        $('#cboPVOrigenBus input[type=search]').focus();
                    }
                    else if (!_this.filtro.CodiDestinoBus) {
                        $('#cboDestinoBus_2 input[type=search]').focus();
                    }
                    else if (!_this.filtro.CodiServicio) {
                        $('#cboServicio input[type=search]').focus();
                    }
                    else if (!_this.filtro.CodiDestinoPas) {
                        $('#cboDestinoPas_2 input[type=search]').focus();
                    }
                    else if (!_this.filtro.Turno) {
                        $('#txtTurno').focus();
                    }
                    else if (!_this.filtro.Fecha) {
                        $('#txtFecha_2').focus();
                    }
                    else {
                        appController.chargeTurnos();
                    }
                },
                recorridoSectionVentas: function () {
                    var _this = this;
                    _this.$nextTick(() => {
                        if (!_this.list.ventas[_this.indexVenta].CodiTipoDoc) {
                            $('#cboTipoDoc input[type=search]').focus();
                        }
                        else if (!_this.list.ventas[_this.indexVenta].Documento) {
                            $('#txtDocumento').focus();
                        }
                        else if (!_this.list.ventas[_this.indexVenta].Nombres) {
                            $('#txtNombres').focus();
                        }
                        else if (!_this.list.ventas[_this.indexVenta].ApellidoPaterno) {
                            $('#txtApellidoPaterno').focus();
                        }
                        else if (!_this.list.ventas[_this.indexVenta].ApellidoMaterno) {
                            $('#txtApellidoMaterno').focus();
                        }
                        else if (!_this.list.ventas[_this.indexVenta].FechaNac) {
                            $('#txtFechaNac').focus();
                        }
                        else if (!_this.list.ventas[_this.indexVenta].Sexo) {
                            $('#cboSexo input[type=search]').focus();
                        }
                        else if (!_this.list.ventas[_this.indexVenta].Nacionalidad) {
                            $('#txtNacionalidad').focus();
                        }
                        else if (!_this.list.ventas[_this.indexVenta].NroAsiento) {
                            $('#txtNroAsientoVenta').focus();
                        }
                        else if (_this.list.ventas.length > 0 && _this.indexVenta === _this.list.ventas.length - 1) {
                            $('#btnTipoPago').focus();
                        } else {
                            _this.rightSlider();
                            $("#cboTipoDoc input[type=search]").focus();
                        }
                    });
                },
                searchUser: function () {
                    var _this = this;
                    if (_this.list.ventas[_this.indexVenta].CodiTipoDoc
                        && _this.list.ventas[_this.indexVenta].CodiTipoDoc.id === '1'
                        && _this.list.ventas[_this.indexVenta].Documento
                        && _this.list.ventas[_this.indexVenta].Documento.length === 8) {

                        APP.rq.axios.get(APP.base + '/itinerarios/consultar-usuario' + APP.util.getQueryParamByObject({
                            tipoDoc: _this.list.ventas[_this.indexVenta].CodiTipoDoc.id,
                            numeroDoc: _this.list.ventas[_this.indexVenta].Documento
                        }), { timeout: 10000 })
                            .then(res => {
                                if (res.data.Estado) {
                                    if (res.data.Valor.IdCliente > 0) {
                                        _this.list.ventas[_this.indexVenta].IdCliente = res.data.Valor.IdCliente;
                                        _this.list.ventas[_this.indexVenta].Nombres = res.data.Valor.NombreCliente;
                                        _this.list.ventas[_this.indexVenta].ApellidoPaterno = res.data.Valor.ApellidoPaterno;
                                        _this.list.ventas[_this.indexVenta].ApellidoMaterno = res.data.Valor.ApellidoMaterno;
                                        _this.list.ventas[_this.indexVenta].FechaNac = res.data.Valor.FechaNacimiento;
                                        _this.list.ventas[_this.indexVenta].Edad = res.data.Valor.Edad;
                                        _this.list.ventas[_this.indexVenta].Sexo = _this.list.sexos.find(x => x.id === res.data.Valor.Sexo);
                                        _this.list.ventas[_this.indexVenta].Telefono = res.data.Valor.Telefono;
                                        _this.list.ventas[_this.indexVenta].Ruc = res.data.Valor.RucContacto;
                                        _this.list.ventas[_this.indexVenta].Direccion = res.data.Valor.Direccion;
                                        _this.list.ventas[_this.indexVenta].RazonSocial = res.data.Valor.RazonSocial;
                                    }
                                    else {
                                        if (res.data.Valor.NombreCliente && res.data.Valor.ApellidoPaterno && res.data.Valor.ApellidoPaterno) {
                                            _this.list.ventas[_this.indexVenta].Nombres = res.data.Valor.NombreCliente;
                                            _this.list.ventas[_this.indexVenta].ApellidoPaterno = res.data.Valor.ApellidoPaterno;
                                            _this.list.ventas[_this.indexVenta].ApellidoMaterno = res.data.Valor.ApellidoMaterno;
                                        } else {
                                            _this.list.ventas[_this.indexVenta].Nombres = '';
                                            _this.list.ventas[_this.indexVenta].ApellidoPaterno = '';
                                            _this.list.ventas[_this.indexVenta].ApellidoMaterno = '';
                                        }
                                        _this.list.ventas[_this.indexVenta].IdCliente = 0;
                                        _this.list.ventas[_this.indexVenta].FechaNac = '';
                                        $('#txtFechaNac').data("DateTimePicker").clear();
                                        _this.list.ventas[_this.indexVenta].Edad = '';
                                        _this.list.ventas[_this.indexVenta].Sexo = null;
                                        _this.list.ventas[_this.indexVenta].Telefono = '';
                                        _this.list.ventas[_this.indexVenta].Ruc = '';
                                        _this.list.ventas[_this.indexVenta].Direccion = '';
                                        _this.list.ventas[_this.indexVenta].RazonSocial = '';
                                    }

                                    if (!res.data.EsCorrecto) APP.msg.warning(res.data.Mensaje);
                                }
                                else
                                    APP.msg.error(res.data.Mensaje);

                                _this.$nextTick(() => {
                                    _this.$validator.validate('Edad');

                                    if (!_this.list.ventas[_this.indexVenta].Nombres ||
                                        !_this.list.ventas[_this.indexVenta].ApellidoPaterno ||
                                        !_this.list.ventas[_this.indexVenta].ApellidoMaterno ||
                                        !_this.list.ventas[_this.indexVenta].FechaNac ||
                                        !_this.list.ventas[_this.indexVenta].Sexo) {

                                        _this.recorridoSectionVentas();
                                    }
                                    else {
                                        if (!_this.list.ventas[_this.indexVenta].Telefono)
                                            _this.$refs.refTelefono.focus();
                                        else
                                            _this.$refs.refRecoger.focus();
                                    }
                                });
                            })
                            .catch(err => {
                                if (err.code === "ECONNABORTED") {
                                    APP.msg.warning('No se pudo cargar los datos del pasajero.');
                                    _this.$refs.refNombres.focus();
                                }
                                else
                                    APP.rq.axios_handler_error_alert;
                            });
                    }
                    if (_this.list.ventas[_this.indexVenta].CodiTipoDoc
                        && _this.list.ventas[_this.indexVenta].CodiTipoDoc.id !== '1'
                        && _this.list.ventas[_this.indexVenta].Documento) {

                        _this.list.ventas[_this.indexVenta].IdCliente = 0;
                        _this.list.ventas[_this.indexVenta].Nombres = '';
                        _this.list.ventas[_this.indexVenta].ApellidoPaterno = '';
                        _this.list.ventas[_this.indexVenta].ApellidoMaterno = '';
                        _this.list.ventas[_this.indexVenta].FechaNac = '';
                        _this.list.ventas[_this.indexVenta].Edad = '';
                        _this.list.ventas[_this.indexVenta].Sexo = null;
                        _this.list.ventas[_this.indexVenta].Telefono = '';
                        _this.list.ventas[_this.indexVenta].Ruc = '';
                        _this.$nextTick(() => {
                            _this.recorridoSectionVentas();
                        });
                    }
                },
                searchEmpresa: function () {
                    var _this = this;
                    if (_this.list.ventas[_this.indexVenta].Ruc
                        && _this.list.ventas[_this.indexVenta].Ruc.length === 11) {

                        APP.rq.axios.get(APP.base + '/itinerarios/consultar-empresa' + APP.util.getQueryParamByObject({
                            rucContacto: _this.list.ventas[_this.indexVenta].Ruc
                        }), { timeout: 10000 })
                            .then(res => {
                                if (res.data.Estado) {
                                    _this.list.ventas[_this.indexVenta].RazonSocial = res.data.Valor.RazonSocial;
                                    _this.list.ventas[_this.indexVenta].Direccion = res.data.Valor.Direccion;

                                    if (!res.data.EsCorrecto) APP.msg.warning(res.data.Mensaje);
                                }
                                else
                                    APP.msg.error(res.data.Mensaje);

                                if (!_this.list.ventas[_this.indexVenta].RazonSocial) {
                                    _this.$refs.refRazonSocial.focus();
                                }
                                else if (!_this.list.ventas[_this.indexVenta].Direccion) {
                                    _this.$refs.refDireccion.focus();
                                }
                                else {
                                    _this.$refs.refNacionalidad.focus();
                                }
                            })
                            .catch(err => {
                                if (err.code === "ECONNABORTED") {
                                    APP.msg.warning('No se pudo cargar los datos de la empresa.');
                                    _this.$refs.refRazonSocial.focus();
                                }
                                else
                                    APP.rq.axios_handler_error_alert;
                            });
                    }
                    else {
                        _this.list.ventas[_this.indexVenta].RazonSocial = '';
                        _this.list.ventas[_this.indexVenta].Direccion = '';
                        _this.$refs.refNacionalidad.focus();
                    }
                },
                consultaReniec: function () {
                    var _this = this;
                    if (_this.list.ventas[_this.indexVenta].Documento
                        && _this.list.ventas[_this.indexVenta].Documento.length === 8) {

                        APP.rq.axios.get(APP.base + '/itinerarios/consulta-reniec' + APP.util.getQueryParamByObject({
                            numeroDoc: _this.list.ventas[_this.indexVenta].Documento
                        }), { timeout: 10000 })
                            .then(res => {
                                if (res.data.Estado) {
                                    _this.list.ventas[_this.indexVenta].Nombres = res.data.Valor.Nombres;
                                    _this.list.ventas[_this.indexVenta].ApellidoPaterno = res.data.Valor.ApellidoPaterno;
                                    _this.list.ventas[_this.indexVenta].ApellidoMaterno = res.data.Valor.ApellidoMaterno;
                                }
                                else
                                    APP.msg.error(res.data.Mensaje);
                            })
                            .catch(err => {
                                if (err.code === "ECONNABORTED") {
                                    APP.msg.warning('No se pudo consultar a la RENIEC');
                                    _this.$refs.refNombres.focus();
                                }
                                else
                                    APP.rq.axios_handler_error_alert;
                            });
                    }
                },
                consultaSunat: function () {
                    var _this = this;
                    if (_this.list.ventas[_this.indexVenta].Ruc
                        && _this.list.ventas[_this.indexVenta].Ruc.length === 11) {

                        APP.rq.axios.get(APP.base + '/itinerarios/consulta-sunat' + APP.util.getQueryParamByObject({
                            rucContacto: _this.list.ventas[_this.indexVenta].Ruc
                        }), { timeout: 10000 })
                            .then(res => {
                                if (res.data.Estado) {
                                    _this.list.ventas[_this.indexVenta].RazonSocial = res.data.Valor.RazonSocial;
                                    _this.list.ventas[_this.indexVenta].Direccion = res.data.Valor.Direccion;
                                }
                                else
                                    APP.msg.error(res.data.Mensaje);
                            })
                            .catch(err => {
                                if (err.code === "ECONNABORTED") {
                                    APP.msg.warning('No se pudo consultar a la SUNAT');
                                    _this.$refs.refRazonSocial.focus();
                                }
                                else
                                    APP.rq.axios_handler_error_alert;
                            });
                    }
                    else {
                        _this.list.ventas[_this.indexVenta].RazonSocial = '';
                        _this.list.ventas[_this.indexVenta].Direccion = '';
                        _this.$refs.refNacionalidad.focus();
                    }
                },
                passSectionVentas: function (_nroAsiento, _precioNormal, _nivelAsiento, _precioMin, _precioMax) {
                    this.list.ventas[this.indexVenta].Precio = _precioNormal;
                    this.list.ventas[this.indexVenta].PrecioNormal = _precioNormal;
                    this.list.ventas[this.indexVenta].PrecioMin = _precioMin;
                    this.list.ventas[this.indexVenta].PrecioMax = _precioMax;
                    this.list.ventas[this.indexVenta].NroAsiento = _nroAsiento;
                    this.list.ventas[this.indexVenta].NivelAsiento = _nivelAsiento;
                    this.list.ventas[this.indexVenta].NroVenta = this.Correlativo;
                    this.$nextTick(() => {
                        switch (this.pickedBusVenta) {
                            case 'V': // Venta
                            case 'R': // Reserva
                                this.recorridoSectionVentas();
                                break;
                        }
                    });
                },
                getCorrelativo: async function (_CodiEmpresa, _CodiDocumento, _FlagVenta) {
                    var auxNroVenta = '';
                    var input = {};
                    input.CodiEmpresa = _CodiEmpresa;
                    input.CodiDocumento = _CodiDocumento;
                    await APP.rq.axios2.post(APP.base + '/itinerarios/busca-correlativo', input)
                        .then(res => {
                            if (res.data.Estado)
                                auxNroVenta = res.data.Valor;
                            else {
                                // Mensaje solo para 'Boleta'
                                if (_CodiDocumento === CodiCorrelativoVentaBoleta)
                                    APP.msg.error(res.data.Mensaje);
                            }
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                    return auxNroVenta;
                },
                saveUser: function () {
                    var _this = this;
                    var listado = [];

                    for (const objVenta of _this.list.ventas) {
                        var input = {};
                        input.IdCliente = objVenta.IdCliente;
                        input.TipoDoc = objVenta.CodiTipoDoc.id;
                        input.NumeroDoc = objVenta.Documento;
                        input.NombreCliente = objVenta.Nombres;
                        input.ApellidoPaterno = objVenta.ApellidoPaterno;
                        input.ApellidoMaterno = objVenta.ApellidoMaterno;
                        input.FechaNacimiento = objVenta.FechaNac;
                        input.Edad = objVenta.Edad;
                        input.Direccion = objVenta.Direccion;
                        input.Telefono = objVenta.Telefono;
                        input.Email = '';
                        input.Sexo = objVenta.Sexo.id;
                        input.RucContacto = objVenta.Ruc;
                        input.RazonSocial = objVenta.RazonSocial;

                        listado.push(input);
                    };

                    APP.rq.axios2.post(APP.base + '/itinerarios/grabar-pasajero', listado)
                        .then(res => {
                            if (!res.data.Estado)
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                bgcVentaBus: function (FechaVenta, Color, NumeAsiento, IDS, FlagVenta) {
                    if (FechaVenta) {
                        if (FlagVenta === 'R') // Reserva
                            return { 'background-color': `${APP.ventas.colorReserva}` };
                        else
                            return { 'background-color': `${Color}` };
                    }
                    else {
                        if (NumeAsiento > 0) {
                            if (IDS === 0)
                                return { 'background-color': `${APP.ventas.colorBloqueoExterno}` };
                            else
                                return { 'background-color': `${APP.ventas.colorBloqueoInterno}` };
                        }
                        else {
                            return { 'background-color': `${Color}` };
                        }
                    }
                },
                iconVentaBus: function (Sexo, Edad) {
                    if (Edad < 18)
                        return Sexo === 'F' ? '/wwwroot/plugins/images/users/MUJER.png' : '/wwwroot/plugins/images/users/NINO.png';
                    else
                        return Sexo === 'F' ? '/wwwroot/plugins/images/users/MUJER.png' : '/wwwroot/plugins/images/users/HOMBRE.png';
                },
                showNombrePasajero: function (FechaVenta, Nombres, ApellidoPaterno, ApellidoMaterno) {
                    if (FechaVenta)
                        return `${Nombres} ${ApellidoPaterno} ${ApellidoMaterno}`;
                },
                nextStep: function (code) {
                    this.showPlano = false;
                    switch (code) {
                        case 1: if (!$("#panelWrapperV").hasClass("in")) $('#btnDesplegar').click(); $('#cboSucursal input[type=search]').focus(); break;
                        case 2: $('#cboOrigenBus input[type=search]').focus(); break;
                        case 3: this.$nextTick(() => { $('#cboPVOrigenBus input[type=search]').focus(); }); break;
                        case 4: $('#cboDestinoBus_2 input[type=search]').focus(); break;
                        case 5: $('#cboServicio input[type=search]').focus(); break;
                        case 6: $('#cboDestinoPas_2 input[type=search]').focus(); break;
                        case 7: $('#txtTurno').focus(); break;
                        case 8: this.filtro.Turno = $('#txtTurno').val(); $('#txtFecha_2').focus(); break;
                        case 9: this.filtro.Fecha = $('#txtFecha_2').val(); $('#btnActualizar').focus(); this.nextStep(10); break;
                        default: this.recorridoSectionFilter(); $('#btnActualizar').blur();
                    }
                },
                showTipoPago: function () {
                    var _this = this;
                    if (!_this.errorsInTicketsVenta()) {
                        document.getElementById('btnTipoPago').disabled = true;
                        _this.saveUser();

                        var input = {};
                        input.CodiEmpresa = _this.filtro.CodiEmpresa.id;
                        input.CodiOrigen = _this.filtro.CodiSucursal.id;
                        input.CodiDestino = _this.filtro.CodiDestinoPas.id;
                        input.CodiProgramacion = _this.filtro.CodiProgramacion;
                        input.FlagVenta = _this.pickedBusVenta;
                        input.FechaViaje = _this.filtro.Fecha;
                        input.HoraViaje = _this.filtro.Turno;
                        input.CodiServicio = _this.filtro.CodiServicio.id;
                        input.NomDestino = _this.filtro.CodiDestinoPas.label;
                        input.NomServicio = _this.filtro.CodiServicio.label;
                        input.NomOrigen = _this.filtro.CodiSucursal.label;
                        input.NroViaje = _this.filtro.NroViaje;
                        input.FechaProgramacion = _this.objTurno.FechaProgramacion;
                        input.HoraProgramacion = _this.objTurno.HoraProgramacion;
                        input.CodiBus = _this.objPlano.CodiBus;
                        input.CodiSucursal = _this.filtro.CodiOrigenBus.id;
                        input.CodiRuta = _this.filtro.CodiDestinoBus.id;

                        appController.showTipoPago(_this.list.embarques, _this.list.arribos, input, _this.list.ventas);
                    }
                },
                errorsInTicketsVenta: function () {
                    var _this = this;
                    var _indexOfTipoDoc = -1;
                    var _indexOfDocumento = -1;
                    var _indexOfNombres = -1;
                    var _indexOfApellidoPaterno = -1;
                    var _indexOfApellidoMaterno = -1;
                    var _indexOfEdad = -1;
                    var _indexOfSexo = -1;
                    var _indexOfRuc = -1;
                    var _indexOfRazSoc = -1;
                    var _indexOfNacionalidad = -1;
                    //Tipo de documento
                    _indexOfTipoDoc = _.findIndex(_this.list.ventas, o => { return o.CodiTipoDoc === null });
                    if (_indexOfTipoDoc !== -1) {
                        _this.indexVenta = _indexOfTipoDoc;
                        _this.$nextTick(() => { $('#cboTipoDoc input[type=search]').focus(); });
                        APP.msg.warning('Debe seleccionar un tipo de documento');
                        return true;
                    }
                    //número de documento, caso DNI
                    _indexOfDocumento = _.findIndex(_this.list.ventas, o => { return o.CodiTipoDoc.id === '1' && o.Documento.length < 8; });
                    if (_indexOfDocumento !== -1) {
                        _this.indexVenta = _indexOfDocumento;
                        _this.$nextTick(() => { $('#txtDocumento').focus(); });
                        APP.msg.warning('El DNI no puede tener menos de 8 caracteres');
                        return true;
                    }
                    //Nombre(s)
                    _indexOfNombres = _.findIndex(_this.list.ventas, o => { return o.Nombres === '' });
                    if (_indexOfNombres !== -1) {
                        _this.indexVenta = _indexOfNombres;
                        _this.$nextTick(() => { $('#txtNombres').focus(); });
                        APP.msg.warning('Debe rellenar nombre');
                        return true;
                    }
                    //Apellido paterno
                    _indexOfApellidoPaterno = _.findIndex(_this.list.ventas, o => { return o.ApellidoPaterno === '' });
                    if (_indexOfApellidoPaterno !== -1) {
                        _this.indexVenta = _indexOfApellidoPaterno;
                        _this.$nextTick(() => { $('#txtApellidoPaterno').focus(); });
                        APP.msg.warning('Debe rellenar apellido paterno');
                        return true;
                    }
                    //Apellido materno
                    _indexOfApellidoMaterno = _.findIndex(_this.list.ventas, o => { return o.ApellidoMaterno === '' });
                    if (_indexOfApellidoMaterno !== -1) {
                        _this.indexVenta = _indexOfApellidoMaterno;
                        APP.msg.warning('Debe rellenar apellido materno');
                        _this.$nextTick(() => {
                            $('#txtApellidoMaterno').focus();
                        });
                        return true;
                    }
                    //Edad
                    _indexOfEdad = _.findIndex(_this.list.ventas, o => { return parseInt(o.Edad) === 0 });
                    if (_indexOfEdad !== -1) {
                        _this.indexVenta = _indexOfEdad;
                        APP.msg.warning('Debe seleccionar una fecha válida, la edad no puede ser 0');
                        _this.$nextTick(() => {
                            $('#txtFechaNac').focus();
                        });
                        return true;
                    }
                    //Tipo de sexo
                    _indexOfSexo = _.findIndex(_this.list.ventas, o => { return o.Sexo === null });
                    if (_indexOfSexo !== -1) {
                        _this.indexVenta = _indexOfSexo;
                        _this.$nextTick(() => { $('#cboSexo input[type=search]').focus(); });
                        APP.msg.warning('Debe seleccionar un sexo');
                        return true;
                    }
                    //Número de ruc
                    _indexOfRuc = _.findIndex(_this.list.ventas, o => { return o.Ruc !== '' && o.Ruc.length !== 11 });
                    if (_indexOfRuc !== -1) {
                        _this.indexVenta = _indexOfRuc;
                        APP.msg.warning('El número de ruc debe ser de 11 dígitos');
                        _this.$nextTick(() => {
                            $('#txtRuc').focus();
                            _this.$validator.validate('ruc');
                        });
                        return true;
                    }
                    //Razón social
                    _indexOfRazSoc = _.findIndex(_this.list.ventas, o => { return o.Ruc.length === 11 && o.RazonSocial.length < 4; });
                    if (_indexOfRazSoc !== -1) {
                        _this.indexVenta = _indexOfRazSoc;
                        APP.msg.warning('El campo Razón Social no puede tener menos de 3 caracteres');
                        _this.$nextTick(() => {
                            $('#txtRazonSocial').focus();
                            _this.$validator.validate('razon_social');
                        });
                        return true;
                    }
                    //Nacionalidad
                    _indexOfNacionalidad = _.findIndex(_this.list.ventas, o => { return o.Nacionalidad === '' });
                    if (_indexOfNacionalidad !== -1) {
                        _this.indexVenta = _indexOfNacionalidad;
                        APP.msg.warning('Debe rellenar nacionalidad');
                        _this.$nextTick(() => {
                            $('#txtNacionalidad').focus();
                        });
                        return true;
                    }
                    return false;
                },
                clearUser: function () {
                    var _this = this;
                    _this.list.ventas[_this.indexVenta].Nombres = '';
                    _this.list.ventas[_this.indexVenta].ApellidoPaterno = '';
                    _this.list.ventas[_this.indexVenta].ApellidoMaterno = '';
                    _this.list.ventas[_this.indexVenta].FechaNac = '';
                    _this.list.ventas[_this.indexVenta].Edad = '';
                    _this.list.ventas[_this.indexVenta].Sexo = '';
                    _this.list.ventas[_this.indexVenta].Telefono = '';
                    _this.list.ventas[_this.indexVenta].Ruc = '';
                    _this.list.ventas[_this.indexVenta].RazonSocial = '';
                    _this.list.ventas[_this.indexVenta].Direccion = '';
                },
                clearRazSoc: function () {
                    var _this = this;
                    _this.list.ventas[_this.indexVenta].RazonSocial = '';
                    _this.list.ventas[_this.indexVenta].Direccion = '';
                },
                showRegistrarParentesco: function () {
                    var _this = this;
                    appController.showRegistrarInfante(_this.list.tiposDoc, _this.list.sexos);
                },
                leftSlider: function () {
                    if (this.indexVenta > 0)
                        this.indexVenta--;
                    $('#bannerVentas').removeClass().addClass('col-md-10 slideOutLeft animated').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function () {
                        $(this).removeClass().addClass('col-md-10');
                    });
                },
                rightSlider: function () {
                    if (this.indexVenta < this.list.ventas.length - 1)
                        this.indexVenta++;
                    $('#bannerVentas').removeClass().addClass('col-md-10 slideOutRight animated').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function () {
                        $(this).removeClass().addClass('col-md-10');
                    });
                },
                setDateAndCalcYears: function (dateString) {
                    if (dateString) {
                        this.list.ventas[this.indexVenta].FechaNac = dateString;
                        var auxFechaNac = moment(dateString, 'DD/MM/YYYY');
                        this.list.ventas[this.indexVenta].Edad = '' + moment().diff(auxFechaNac, 'years');
                        this.$nextTick(() => {
                            this.$validator.validate('Edad');
                            if (!this.list.ventas[this.indexVenta].Sexo)
                                this.recorridoSectionVentas();
                            else
                                this.$refs.refTelefono.focus();
                        });
                    }
                    else
                        this.list.ventas[this.indexVenta].Edad = '';
                },
                limpiarVenta: function () {
                    var _this = this;
                    _this.indexVenta = 0;
                    _this.list.ventas.length = 1;
                    _this.list.ventas[_this.indexVenta].IdCliente = 0;
                    _this.list.ventas[_this.indexVenta].CodiTipoDoc = null;
                    _this.list.ventas[_this.indexVenta].Documento = '';
                    _this.list.ventas[_this.indexVenta].Nombres = '';
                    _this.list.ventas[_this.indexVenta].ApellidoPaterno = '';
                    _this.list.ventas[_this.indexVenta].ApellidoMaterno = '';
                    _this.list.ventas[_this.indexVenta].FechaNac = '';
                    _this.list.ventas[_this.indexVenta].Edad = '';
                    _this.list.ventas[_this.indexVenta].Sexo = null;
                    _this.list.ventas[_this.indexVenta].Telefono = '';
                    _this.list.ventas[_this.indexVenta].Ruc = '';
                    _this.list.ventas[_this.indexVenta].RazonSocial = '';
                    _this.list.ventas[_this.indexVenta].Direccion = '';
                    _this.list.ventas[_this.indexVenta].Recoger = '';
                    _this.list.ventas[_this.indexVenta].Reintegro = '';
                    _this.list.ventas[_this.indexVenta].Observacion = '';
                    _this.list.ventas[_this.indexVenta].Precio = '';
                    _this.list.ventas[_this.indexVenta].PrecioNormal = '';
                    _this.list.ventas[_this.indexVenta].PrecioMin = '';
                    _this.list.ventas[_this.indexVenta].PrecioMax = '';
                    _this.list.ventas[_this.indexVenta].NroAsiento = '';
                    _this.list.ventas[_this.indexVenta].NivelAsiento = 0;
                    _this.list.ventas[_this.indexVenta].NroVenta = '';
                    _this.list.ventas[_this.indexVenta].NroSolicitud = '';
                    _this.list.ventas[_this.indexVenta].FechaVen = moment(new Date, 'DD/MM/YYYY').format("DD/MM/YYYY");
                    _this.list.ventas[_this.indexVenta].Nacionalidad = '';
                    _this.list.ventas[_this.indexVenta].OldNroAsiento = '';
                    _this.list.ventas[_this.indexVenta].FlagVenta = '';
                    _this.list.ventas[_this.indexVenta].ObjAcompaniante = null;
                    _this.list.ventas[_this.indexVenta].CodiGerente = '';
                    _this.list.ventas[_this.indexVenta].CodiSocio = '';
                    _this.list.ventas[_this.indexVenta].Concepto = '';
                    _this.list.ventas[_this.indexVenta].FechaAbierta = false;
                    _this.list.ventas[_this.indexVenta].IdVenta = 0;
                    _this.errors.clear();
                    _this.checkRegistrarNino = false;

                    appRegistrarInfante.limpiarCampos();
                },
                focusPrecio: function (event) {
                    this.$nextTick(() => {
                        event.target.select();
                        this.auxFocus.precio = true;
                    });
                },
                validateRangePrice: function (event) {
                    var _this = this;
                    var normal = _this.list.ventas[_this.indexVenta].PrecioNormal;
                    var actual = _this.list.ventas[_this.indexVenta].Precio;
                    var max = parseInt(_this.list.ventas[_this.indexVenta].PrecioMax);
                    var min = parseInt(_this.list.ventas[_this.indexVenta].PrecioMin);

                    if (actual > max) {
                        APP.msg.warning('El precio no puede ser mayor a ' + max);
                        _this.list.ventas[_this.indexVenta].Precio = normal;
                        _this.focusPrecio(event);

                    }
                    else if (actual < min) {
                        APP.msg.warning('El precio no puede ser menor a ' + min);
                        _this.list.ventas[_this.indexVenta].Precio = normal;
                        _this.focusPrecio(event);
                    }

                    this.auxFocus.precio = false;
                },
                focusAsiento: function (event) {
                    event.target.select();
                    this.auxFocus.asiento = true;
                },
                validateTxtNroAsientoVenta: async function (e) {
                    if (this.list.ventas[this.indexVenta] && this.list.ventas[this.indexVenta].NroAsiento && !this.list.ventas[this.indexVenta].NroVenta) {
                        this.list.ventas[this.indexVenta].NroAsiento = formatToChar2(this.list.ventas[this.indexVenta].NroAsiento);

                        var auxObj = this.findObjectAsiento(this.list.ventas[this.indexVenta].NroAsiento);
                        if (!auxObj) {
                            this.auxFocus.asiento = false;
                            APP.msg.warning('Asiento ' + _NroAsiento + ' no encontrado');
                            return;
                        }

                        if (!auxObj.FechaVenta && auxObj.NumeAsiento === 0) {
                            await this.bloquearAsiento(auxObj, true);
                            this.auxFocus.asiento = false;
                        }
                        else APP.msg.warning('Asiento ' + this.list.ventas[this.indexVenta].NroAsiento + ' ocupado');
                    }
                    else if (this.list.ventas[this.indexVenta].NroVenta) {
                        this.list.ventas[this.indexVenta].NroAsiento = formatToChar2(this.list.ventas[this.indexVenta].NroAsiento);
                        if (this.list.ventas[this.indexVenta].NroAsiento !== this.list.ventas[this.indexVenta].OldNroAsiento) {
                            var auxObj = this.findObjectAsiento(this.list.ventas[this.indexVenta].NroAsiento);
                            if (!auxObj) {
                                this.auxFocus.asiento = false;
                                APP.msg.warning('Asiento ' + this.list.ventas[this.indexVenta].NroAsiento + ' no encontrado');
                                this.list.ventas[this.indexVenta].NroAsiento = this.list.ventas[this.indexVenta].OldNroAsiento;
                                return;
                            }

                            if (!auxObj.FechaVenta && auxObj.NumeAsiento === 0) {
                                var auxObjOld = this.findObjectAsiento(this.list.ventas[this.indexVenta].OldNroAsiento);
                                if (!auxObjOld) {
                                    this.auxFocus.asiento = false;
                                    APP.msg.warning('Asiento Old ' + this.list.ventas[this.indexVenta].OldNroAsiento + ' no encontrado');
                                    return;
                                }

                                await this.liberarAsiento(auxObjOld, false);
                                await this.bloquearAsiento(auxObj, false);

                                if (this.camposObligatorios())
                                    this.$refs.refPrecio.focus();
                                else
                                    this.recorridoSectionVentas();

                                this.auxFocus.asiento = false;
                            }
                            else APP.msg.warning('Asiento ' + this.list.ventas[this.indexVenta].NroAsiento + ' ocupado');
                        }
                        else {
                            if (this.camposObligatorios())
                                this.$refs.refPrecio.focus();
                            else
                                this.recorridoSectionVentas();
                        }
                    }
                    else {
                        if (e && e.keyCode !== 13) this.auxFocus.asiento = false;
                    }
                },
                camposObligatorios: function () {
                    return (this.list.ventas[this.indexVenta].NroAsiento &&
                        this.list.ventas[this.indexVenta].CodiTipoDoc &&
                        this.list.ventas[this.indexVenta].Documento &&
                        this.list.ventas[this.indexVenta].Nombres &&
                        this.list.ventas[this.indexVenta].ApellidoPaterno &&
                        this.list.ventas[this.indexVenta].ApellidoMaterno &&
                        this.list.ventas[this.indexVenta].FechaNac &&
                        this.list.ventas[this.indexVenta].Sexo &&
                        this.list.ventas[this.indexVenta].Nacionalidad &&
                        this.list.ventas[this.indexVenta].Precio);
                },
                findObjectAsiento: function (_NroAsiento) {
                    var auxObj = {};

                    auxObj = _.find(this.list.plano1, { 'Tipo': _NroAsiento });
                    if (!auxObj) {
                        auxObj = _.find(this.list.plano2, { 'Tipo': _NroAsiento });
                        if (!auxObj) {
                            auxObj = _.find(this.list.plano3, { 'Tipo': _NroAsiento });
                            if (!auxObj) {
                                auxObj = _.find(this.list.plano4, { 'Tipo': _NroAsiento });
                                if (!auxObj) {
                                    auxObj = _.find(this.list.plano5, { 'Tipo': _NroAsiento });
                                    if (!auxObj) {
                                        return null;
                                    }
                                }
                            }
                        }
                    }

                    return auxObj;
                },
                passNumDocToDocumento: function () {
                    var _this = this;
                    var codiTipoDoc = _this.list.ventas[_this.indexVenta].CodiTipoDoc;
                    if (codiTipoDoc) {
                        id = codiTipoDoc.id;
                        if (id === "1") { //DNI
                            _this.mask.documento = "#".repeat(8);
                            _this.list.ventas[_this.indexVenta].Nacionalidad = 'PERUANA';
                        }
                        else if (id === "4") { //PASAPORTE
                            _this.mask.documento = "N".repeat(15);
                            _this.list.ventas[_this.indexVenta].Nacionalidad = '';
                        }
                        else if (id === "7") { //CARNET EXTRANJERIA
                            _this.mask.documento = "N".repeat(15);
                            _this.list.ventas[_this.indexVenta].Nacionalidad = '';
                        }
                    }
                    this.recorridoSectionVentas();
                },
                passSinceRegistrarNino: function () {
                    var _this = this;
                    if (_this.list.ventas[_this.indexVenta].NroAsiento)
                        _this.$refs.refPrecio.focus();
                    else
                        _this.$refs.refNroAsientoVenta.focus();
                },
                cancelarBoletos: async function () {
                    var auxResponse = true;
                    this.disabledAsiento = true;

                    for (i = 0; i < this.list.ventas.length; i++) {
                        if (this.list.ventas[i].NroAsiento && !this.list.ventas[i].FlagVenta) {
                            var auxObj = this.findObjectAsiento(this.list.ventas[i].NroAsiento);
                            var auxResponse2 = await this.liberarAsiento(auxObj, true);
                            if (auxResponse2)
                                i--;
                            else {
                                APP.msg.warning('No se pudo limpiar los asientos bloqueados.');
                                this.$nextTick(() => {
                                    this.disabledAsiento = false;
                                });
                                return auxResponse = false;
                            }
                        }
                        else
                            this.limpiarVenta();
                    }

                    this.$nextTick(() => {
                        this.disabledAsiento = false;
                        this.$refs.refNroAsientoVenta.focus();
                    });
                    return auxResponse;
                },
                cancelarReserva: async function () {
                    if (await APP.msg.confirm("Confirmar la cancelación", "Se cancelará la reserva. ¿Desea continuar?")) {
                        APP.rq.axios2.post(APP.base + '/itinerarios/cancelar-reserva', { IdVenta: this.list.ventas[this.indexVenta].IdVenta })
                            .then(res => {
                                if (res.data.Estado)
                                    appController.chargeTurnos();
                                else
                                    APP.msg.error(res.data.Mensaje);
                            })
                            .catch(APP.rq.axios_handler_error_alert);
                    }
                    else
                        this.limpiarVenta();
                },
                changePickedBusVenta: async function (value) {
                    var _this = this;
                    // Si es el mismo valor, retornar.
                    if (_this.pickedBusVenta === value) return;

                    // Valida si se limpiará los 'AsientosBloqueados' del Picked anterior.
                    switch (value) {
                        case 'V': // Venta
                        case '7': // Pase de cortesía
                        case 'R': // Reserva
                        case 'AN': // Anulación
                        case 'FA': // Fecha abierta
                        case 'PO': // Postergación
                            {
                                if (_this.list.ventas.length > 1) {
                                    if (await APP.msg.confirm('Confirmar Cambio', 'Se perderán los asientos bloqueados sin vender, ¿Desea continuar?')) {
                                        await _this.cancelarBoletos();
                                        _this.pickedBusVenta = value;
                                        _this.limpiarVenta();
                                    }
                                    else {
                                        _this.$nextTick(() => {
                                            _this.recorridoSectionVentas();
                                        });
                                    }
                                }
                                else if (_this.list.ventas[_this.indexVenta].NroAsiento) {
                                    if (_this.list.ventas[_this.indexVenta].FlagVenta) {
                                        _this.pickedBusVenta = value;
                                        _this.limpiarVenta();
                                    }
                                    else {
                                        if (await APP.msg.confirm('Confirmar Cambio', 'Se perderán los asientos bloqueados sin vender, ¿Desea continuar?')) {
                                            await _this.cancelarBoletos();
                                            _this.pickedBusVenta = value;
                                            _this.limpiarVenta();
                                        }
                                        else {
                                            _this.$nextTick(() => {
                                                _this.recorridoSectionVentas();
                                            });
                                        }
                                    }
                                }
                                else {
                                    _this.pickedBusVenta = value;
                                    _this.limpiarVenta();
                                }
                            };
                            break;
                    }
                },
                setPaseCortesia: function (_beneficiario) {
                    var _this = this;
                    var nomBen = (_beneficiario.NombreBeneficiario) ? _beneficiario.NombreBeneficiario.split(',') : [];
                    _this.list.ventas[_this.indexVenta].CodiTipoDoc = _.find(_this.list.tiposDoc, { 'id': _beneficiario.TipoDocumento.replace(/0/g, '') }) || null;
                    _this.list.ventas[_this.indexVenta].Documento = _beneficiario.NumeroDocumento;
                    _this.list.ventas[_this.indexVenta].Nombres = nomBen[2];
                    _this.list.ventas[_this.indexVenta].ApellidoPaterno = nomBen[0];
                    _this.list.ventas[_this.indexVenta].ApellidoMaterno = nomBen[1];
                    _this.list.ventas[_this.indexVenta].Sexo = _.find(_this.list.sexos, { 'id': _beneficiario.Sexo.replace(/0/g, '') }) || null;
                    // Agregamos nuevos valores (No están en la lista inicial).
                    _this.list.ventas[_this.indexVenta].CodiGerente = appVuePaseCortesia.gerente ? appVuePaseCortesia.gerente.id : '';
                    _this.list.ventas[_this.indexVenta].CodiSocio = appVuePaseCortesia.solicitante ? appVuePaseCortesia.solicitante.id : '';
                    _this.list.ventas[_this.indexVenta].Concepto = appVuePaseCortesia.concepto;
                    _this.list.ventas[_this.indexVenta].FechaAbierta = appVuePaseCortesia.fechaAbierta;
                },
                sendToFechaAbierta: async function (asientoSel) {
                    var _this = this;
                    if (parseInt(asientoSel.IdVenta)) {
                        if (await APP.msg.confirm("Confirmar Fecha Abierta", "Se cambiará a Fecha Abierta. ¿Desea continuar?")) {
                            APP.rq.axios.post(APP.base + '/itinerarios/modificar-venta-a-fecha-abierta' + APP.util.getQueryParamByObject({
                                IdVenta: asientoSel.IdVenta,
                                CodiServicio: _this.filtro.CodiServicio.id,
                                CodiRuta: _this.filtro.CodiDestinoBus.id
                            }))
                                .then(async function (res) {
                                    if (res.data.Estado) {
                                        await appController.chargeTurnos();

                                        _this.$nextTick(() => {
                                            APP.msg.info(res.data.Mensaje);
                                        });
                                    }
                                    else
                                        APP.msg.error(res.data.Mensaje);
                                })
                                .catch(APP.rq.axios_handler_error_alert);
                        }
                        else
                            _this.limpiarVenta();
                    }
                    else
                        appController.showPostergacion();
                },
                sendToAnularVenta: async function (asientoSel) {
                    var _this = this;
                    if (await APP.msg.confirm("Confirmar la anulación", "Se anulará la venta. ¿Desea continuar?")) {
                        if (asientoSel.IdVenta && asientoSel.Tipo) {
                            APP.rq.axios2.post(await APP.base + '/itinerarios/anular-venta' + APP.util.getQueryParamByObject({
                                IdVenta: asientoSel.IdVenta,
                                Tipo: asientoSel.TipoBoleto
                            }))
                                .then(async function (res) {
                                    if (res.data.Estado) {
                                        await appController.chargeTurnos();
                                        _this.$nextTick(() => {
                                            APP.msg.info(res.data.Mensaje)
                                        });
                                    }
                                    else
                                        APP.msg.error(res.data.Mensaje);
                                })
                                .catch(APP.rq.axios_handler_error_alert);
                        }
                    }
                    else {
                        _this.limpiarVenta();
                    }
                },
                configEventKeyF5: function (e) {
                    if (e.keyCode === 116) {
                        if (this.showVentas) {
                            e.preventDefault();
                            appController.chargeTurnos();
                        }
                    }
                },
                beforeClosePage: function () {
                    this.limpiarAsientosBloqueados();
                },
                setDocumento: function (e) {
                    this.list.ventas[this.indexVenta].Documento = e.target.value.toUpperCase();
                    this.$validator.validate('Tipo', this.list.ventas[this.indexVenta].CodiTipoDoc);
                }
            },
            computed: {
                setCadenaEmbarques: function () {
                    var _this = this;
                    var cadenaEmbarques = '';
                    for (i = 0; i < _this.list.embarques.length; i++) {
                        if (i !== _this.list.embarques.length - 1)
                            cadenaEmbarques += _this.list.embarques[i].Lugar + ', ' + _this.list.embarques[i].Hora + ' - ';
                        else
                            cadenaEmbarques += _this.list.embarques[i].Lugar + ', ' + _this.list.embarques[i].Hora;
                    }
                    return cadenaEmbarques;
                },
                bloquearPagoPorCampos: function () {
                    var _this = this;
                    return (
                        _this.list.ventas[_this.indexVenta].CodiTipoDoc &&
                        _this.list.ventas[_this.indexVenta].Documento.length > 0 &&
                        _this.list.ventas[_this.indexVenta].Nombres &&
                        _this.list.ventas[_this.indexVenta].ApellidoPaterno &&
                        _this.list.ventas[_this.indexVenta].ApellidoMaterno &&
                        _this.list.ventas[_this.indexVenta].FechaNac.length === 10 &&
                        _this.list.ventas[_this.indexVenta].Edad > 0 &&
                        _this.list.ventas[_this.indexVenta].Sexo &&
                        _this.list.ventas[_this.indexVenta].NroAsiento &&
                        parseInt(_this.list.ventas[_this.indexVenta].Precio) > 0
                    );
                },
                bloquearPagoPorFlagVenta: function () {
                    switch (this.list.ventas[this.indexVenta].FlagVenta) {
                        case 'R': // Reserva
                        case '':
                            return false;
                        default:
                            return true;
                    }
                },
                checkedRegistrarNino: {
                    get: function () {
                        return this.checkRegistrarNino;
                    },
                    set: function (value) {
                        if (value) {
                            this.showRegistrarParentesco();
                            this.checkRegistrarNino = value;
                        }
                        else {
                            if (this.list.ventas[this.indexVenta].ObjAcompaniante) {
                                this.showRegistrarParentesco();
                                this.checkRegistrarNino = !value;
                            }
                            else
                                this.checkRegistrarNino = value;
                        }
                    }
                },
                listVentasCampoRuc: function () {
                    return this.list.ventas[this.indexVenta].Ruc;
                }
            },
            watch: {
                'filtro.CodiEmpresa': function (newVal, oldVal) {
                    if (this.filtro.CodiEmpresa)
                        this.$refs.refEmpresa._data.typeAheadPointer = _.findIndex(this.list.empresas, { 'id': this.filtro.CodiEmpresa.id, 'label': this.filtro.CodiEmpresa.label });
                },
                'filtro.CodiSucursal': function (newVal, oldVal) {
                    if (this.filtro.CodiSucursal)
                        this.$refs.refSucursal._data.typeAheadPointer = _.findIndex(this.list.sucursales, { 'id': this.filtro.CodiSucursal.id, 'label': this.filtro.CodiSucursal.label });
                },
                'filtro.CodiOrigenBus': function (newVal, oldVal) {
                    // Evita doble consulta cuando 'sendRow'
                    if (!oldVal) return;

                    if (newVal) {
                        if (String(newVal.id).replace(/\s/g, '').length > 0 && typeof oldVal !== 'string') {
                            this.getPVOrigenesBus(newVal.id);
                            this.filtro.CodiPVOrigenBus = null;
                        }
                    }
                    else {
                        this.list.pvOrigenesBus = [];
                        this.filtro.CodiPVOrigenBus = null;
                    }

                    if (this.filtro.CodiOrigenBus)
                        this.$refs.refOrigenBus._data.typeAheadPointer = this.$nextTick(() => { _.findIndex(this.list.origenesBus, { 'id': this.filtro.CodiOrigenBus.id, 'label': this.filtro.CodiOrigenBus.label }); });
                },
                'filtro.CodiPVOrigenBus': function (newVal, oldVal) {
                    if (this.filtro.CodiPVOrigenBus)
                        this.$refs.refPVOrigenBus._data.typeAheadPointer = this.$nextTick(() => { _.findIndex(this.list.pvOrigenesBus, { 'id': this.filtro.CodiPVOrigenBus.id, 'label': this.filtro.CodiPVOrigenBus.label }); });
                },
                'filtro.CodiDestinoBus': function (newVal, oldVal) {
                    if (this.filtro.CodiDestinoBus)
                        this.$refs.refDestinoBus_2._data.typeAheadPointer = this.$nextTick(() => { _.findIndex(this.list.destinosBus, { 'id': this.filtro.CodiDestinoBus.id, 'label': this.filtro.CodiDestinoBus.label }); });
                },
                'filtro.CodiServicio': function (newVal, oldVal) {
                    if (this.filtro.CodiServicio)
                        this.$refs.refServicio._data.typeAheadPointer = this.$nextTick(() => { _.findIndex(this.list.servicios, { 'id': this.filtro.CodiServicio.id, 'label': this.filtro.CodiServicio.label }); });
                },
                'filtro.CodiDestinoPas': function (newVal, oldVal) {
                    if (this.filtro.CodiDestinoPas)
                        this.$refs.refDestinoPas_2._data.typeAheadPointer = this.$nextTick(() => { _.findIndex(this.list.destinosPas, { 'id': this.filtro.CodiDestinoPas.id, 'label': this.filtro.CodiDestinoPas.label }); });
                },
                'filtro.Fecha': function (newVal, oldVal) {
                    if (newVal) {
                        if (String(newVal.id).replace(/\s/g, '').length > 0) {
                            var _nombreDia = moment(newVal, 'DD/MM/YYYY').format('dddd') || '';
                            document.getElementById('lblNameDay_Fecha').innerHTML = 'DÍA: ' + _nombreDia.toUpperCase();
                        }
                    } else {
                        document.getElementById('lblNameDay_Fecha').innerHTML = 'DÍA:';
                    }
                },
                'list.ventas': {
                    handler: function (after, before) {
                        this.slider = this.list.ventas.length;
                    },
                    deep: true,
                },
                listVentasCampoRuc: function (newVal, oldVal) {
                    if (this.pickedBusVenta !== 'R') {
                        if (newVal.length === 11)
                            this.Correlativo = _.cloneDeep(this.CorrelativoVentaFactura);
                        else {
                            if (newVal.length === 0)
                                this.Correlativo = _.cloneDeep(this.CorrelativoVentaBoleta);
                        }
                    }
                }
            }
        });

        var appVueTipoPago = new Vue({
            el: '#appVueTipoPago',
            data: {
                tipoPago: '',
                tarjeta: null,
                numeroTarjeta: '',
                distrito: null,
                direccion: '',
                observacion: '',
                embarque: null,
                arribo: null,
                list: {
                    tiposPago: [],
                    distritos: [],
                    tarjetas: [],
                    embarques: [],
                    arribos: [],
                    ventas: []
                },
                ticketVenta: null,
                sumaTotal: 0,
                efectivo: '',
                tarjetaCant: '',
                cantAsientos: 0,
                importePagado: '',
                vuelto: '',
                disabledTipoPago: false,
                processing: false,
                pickedBusVenta: 'V',
                validImpPagar: ''
            },
            mounted: function () {
                this.getTipoPago();
                this.getTarjetasCredito();
                this.getCuidades();
            },
            methods: {
                show: function (embarques, arribos, ticketVenta, listaVentas) {
                    window.addEventListener('keyup', this.esc);
                    var _this = this;
                    _this.limpiarCampos();
                    _this.pickedBusVenta = appVueVenta.pickedBusVenta;
                    _this.list.embarques = embarques;
                    _this.list.arribos = arribos;
                    _this.ticketVenta = ticketVenta;
                    _this.list.ventas = listaVentas;
                    switch (_this.pickedBusVenta) {
                        case 'R': // Reserva
                            {
                                if (!appVueVenta.list.ventas[appVueVenta.indexVenta].FlagVenta) {
                                    _this.saveVenta();
                                    return;
                                }
                            }
                            break;
                    }
                    _this.sumaTotal = _.sumBy(_this.list.ventas, o => { return parseFloat(o.Precio); });
                    _this.cantAsientos = _this.list.ventas.length;
                    $('#appVueTipoPago').modal('show');
                },
                getTipoPago: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-tipoPago')
                        .then(res => {
                            if (res.data.Estado)
                                _this.list.tiposPago = _.cloneDeep(res.data.Valor);
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                getTarjetasCredito: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-tarjetasCredito')
                        .then(res => {
                            if (res.data.Estado)
                                _this.list.tarjetas = _.cloneDeep(res.data.Valor);
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                getCuidades: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-cuidades')
                        .then(res => {
                            if (res.data.Estado)
                                _this.list.distritos = _.cloneDeep(res.data.Valor);
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                saveVenta: async function () {
                    var _this = this;
                    _this.processing = true;

                    $("#appVueTipoPago").modal('hide');

                    var listado = [];
                    for (const objVenta of _this.list.ventas) {
                        var input = {};
                        input.CodiEmpresa = _this.ticketVenta.CodiEmpresa;
                        input.CodiOrigen = _this.ticketVenta.CodiOrigen;
                        input.CodiDestino = _this.ticketVenta.CodiDestino;
                        input.CodiProgramacion = _this.ticketVenta.CodiProgramacion;
                        input.RucCliente = objVenta.Ruc;
                        input.NomEmpresaRuc = objVenta.RazonSocial;
                        input.DirEmpresaRuc = objVenta.Direccion;
                        input.NumeAsiento = objVenta.NroAsiento;
                        input.FlagVenta = _this.ticketVenta.FlagVenta;
                        input.PrecioVenta = objVenta.Precio;
                        input.Nombre = (objVenta.Nombres + ',' + objVenta.ApellidoPaterno + ',' + objVenta.ApellidoMaterno);
                        input.Edad = objVenta.Edad;
                        input.Telefono = objVenta.Telefono;
                        input.Dni = objVenta.Documento;
                        input.TipoDocumento = formatToChar2(objVenta.CodiTipoDoc.id);
                        input.Sexo = objVenta.Sexo.id;
                        input.TipoPago = _this.tipoPago;
                        input.FechaViaje = _this.ticketVenta.FechaViaje;
                        input.HoraViaje = _this.ticketVenta.HoraViaje;
                        input.CodiServicio = _this.ticketVenta.CodiServicio;
                        input.CodiEmbarque = (_this.embarque ? _this.embarque.CodiPuntoVenta : 0);
                        input.CodiArribo = (_this.arribo ? _this.arribo.CodiPuntoVenta : 0);
                        input.Hora_Embarque = (_this.embarque ? _this.embarque.Hora : '');
                        input.NivelAsiento = objVenta.NivelAsiento;
                        input.NomDestino = _this.ticketVenta.NomDestino;
                        input.NomServicio = _this.ticketVenta.NomServicio;
                        input.NomOrigen = _this.ticketVenta.NomOrigen;
                        input.Nacionalidad = objVenta.Nacionalidad;
                        input.NroViaje = _this.ticketVenta.NroViaje;
                        input.FechaProgramacion = _this.ticketVenta.FechaProgramacion;
                        input.HoraProgramacion = _this.ticketVenta.HoraProgramacion;
                        input.CodiBus = _this.ticketVenta.CodiBus;
                        input.CodiSucursal = _this.ticketVenta.CodiSucursal;
                        input.CodiRuta = _this.ticketVenta.CodiRuta;
                        input.CodiTarjetaCredito = (_this.tarjeta ? _this.tarjeta.id : '');
                        input.NumeTarjetaCredito = _this.numeroTarjeta;
                        input.CodiZona = (_this.distrito ? _this.distrito.id : '');
                        input.Direccion = _this.direccion;
                        input.Observacion = _this.observacion;
                        input.Credito = (parseFloat(_this.tarjetaCant ? 0 : _this.tarjetaCant) / parseFloat(_this.cantAsientos));
                        input.ObjAcompaniante = objVenta.ObjAcompaniante;
                        input.Concepto = objVenta.Recoger;

                        // TIPOS DE VENTA
                        var auxNameMethod = '';
                        switch (_this.pickedBusVenta) {
                            case '7': // PASE DE CORTESÍA
                                input.CodiGerente = objVenta.CodiGerente;
                                input.CodiSocio = objVenta.CodiSocio;
                                input.Concepto = objVenta.Concepto;
                                input.FechaAbierta = objVenta.FechaAbierta;
                                break;
                        }
                        switch (appVueVenta.list.ventas[appVueVenta.indexVenta].FlagVenta) {
                            case 'R':
                                input.IdVenta = objVenta.IdVenta;
                                _this.pickedBusVenta = 'V';
                                // Este valor sale del 'pickedBusVenta', pero como es una 'Reserva' tiene que ir con su 'FlagVenta' correspondiente.
                                input.FlagVenta = 'R';
                                break;
                        }
                        // --------------

                        listado.push(input);
                    };
                    
                    // Limpiar 'AsientosBloqueados'
                    var auxResponse = await appVueVenta.cancelarBoletos();
                    if (!auxResponse) {
                        APP.msg.error('No se pudo limpiar los asientos bloqueados para realizar la venta.');
                        return;
                    }
                    
                    await APP.rq.axios.post(APP.base + '/itinerarios/grabar-venta' + auxNameMethod, {
                        Listado: listado,
                        FlagVenta: _this.pickedBusVenta
                    })
                        .then(async function (res) {
                            if (res.data.Estado)
                                appController.showBoletosVendidos(res.data.Valor);
                            else {
                                await appController.chargeTurnos();
                                _this.$nextTick(() => {
                                    APP.msg.error(res.data.Mensaje);
                                });
                            }

                            _this.processing = false;
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                limpiarCampos: function () {
                    this.tipoPago = '';
                    this.tarjeta = null;
                    this.numeroTarjeta = '';
                    this.distrito = null;
                    this.direccion = '';
                    this.observacion = '';
                    this.embarque = null;
                    this.arribo = null;
                    this.ticketVenta = null;
                    this.sumaTotal = 0;
                    this.efectivo = '';
                    this.tarjetaCant = '';
                    this.cantAsientos = 0;
                    this.importePagado = '';
                    this.vuelto = '';
                    this.disabledTipoPago = false;
                    this.processing = false;
                    this.pickedBusVenta = 'V';
                },
                recorridoSectionTipoPagos: function () {
                    var _this = this;
                    if (!_this.computedTipoPago) {
                        $('#cboTipoPagoTP input[type=search]').focus();
                    }
                    else if (_this.tipoPago === '01') {
                        if (!_this.importePagado) {
                            $('#txtImportePagadoC').focus();
                        }
                        else if (!_this.embarque) {
                            $('#cboEmbarqueTP input[type=search]').focus();
                        }
                        else if (!_this.arribo) {
                            $('#cboArriboTP input[type=search]').focus();
                        }
                    }
                    else if (_this.tipoPago === '02') {
                        if (!_this.tarjeta) {
                            $('#cboTipoTargetaTP input[type=search]').focus();
                        }
                        else if (!_this.numeroTarjeta) {
                            $('#txtNumeroTP').focus();
                        }
                        else if (!_this.tarjetaCant) {
                            $('#txtTtarjetaCantTP').focus();
                        }
                        else if (!_this.efectivo) {
                            $('#txtEfectivoTP').focus();
                        }
                        else if (!_this.importePagado) {
                            $('#txtImportePagdoTP').focus();
                        }
                        else if (!_this.arribo) {
                            $('#cboArriboTP input[type=search]').focus();
                        }
                    }
                    else if (_this.tipoPago === '03') {
                        if (!_this.tarjeta) {
                            $('#cboTipoTP input[type=search]').focus();
                        }
                        else if (!_this.numeroTarjeta) {
                            $('#txtNumeroTP').focus();
                        }
                        else if (!_this.embarque) {
                            $('#cboEmbarqueTP input[type=search]').focus();
                        }
                        else if (!_this.arribo) {
                            $('#cboArriboTP input[type=search]').focus();
                        }
                    }
                    else if (_this.tipoPago === '04') {
                        if (!_this.distrito) {
                            $('#cboDistritoTP input[type=search]').focus();
                        }
                        else if (!_this.direccion) {
                            $('#txtDireccionTP').focus();
                        }
                        else if (!_this.observacion) {
                            $('#txtObservTP').focus();
                        }
                        else if (!_this.embarque) {
                            $('#cboEmbarqueTP input[type=search]').focus();
                        }
                        else if (!_this.arribo) {
                            $('#cboArriboTP input[type=search]').focus();
                        }
                    }
                },
                nextInput: function (input) {
                    if (input === 'ARRIBOS') {
                        $('#btnSaveVentaTipoPago').focus();
                    } else if (input === 'NUMERO') {
                        $('#cboEmbarqueTP input[type=search]').focus();
                    } else if (input === "EMBARQUE") {
                        $('#cboArriboTP input[type=search]').focus();
                    }
                },
                getLabelEmbarqueArribo: function (option) {
                    return `${option.Lugar} - ${option.Hora}`
                },
                calcMontos: function (tipo) {
                    var _this = this;
                    var sumaTotal = parseFloat(_this.sumaTotal);
                    var efectivo = parseFloat(_this.efectivo);
                    var tarjetaCant = parseFloat(_this.tarjetaCant);
                    var importePagado = parseFloat(_this.importePagado);

                    if (tipo === 'IPC') {
                        if (importePagado >= sumaTotal) {
                            _this.vuelto = parseFloat(importePagado - sumaTotal).toFixed(2);
                        } else {
                            _this.vuelto = '';
                        }
                    }else if (tipo === 'T') {
                        if (sumaTotal >= tarjetaCant) {
                            _this.efectivo = parseFloat(sumaTotal - tarjetaCant).toFixed(2);
                        } else {
                            _this.efectivo = '';
                        }
                    } else if (tipo === 'E') {
                        if (sumaTotal >= efectivo) {
                            _this.tarjetaCant = parseFloat(sumaTotal - efectivo).toFixed(2);
                        } else {
                            _this.tarjetaCant = '';
                        }
                    } else if (tipo === 'IP') {
                        if (importePagado > sumaTotal) {
                            _this.vuelto = parseFloat(importePagado - sumaTotal).toFixed(2);
                        } else {
                            if (importePagado >= efectivo) {
                                _this.vuelto = parseFloat(importePagado - efectivo).toFixed(2);
                            }
                            else {
                                if (importePagado === NaN) {
                                    _this.vuelto = '';
                                }
                                else if (importePagado < (tarjetaCant + efectivo) || importePagado > sumaTotal) {
                                    _this.vuelto = '';
                                }
                            }
                        }
                    }
                },
                esc: function (event) {
                    if (event.keyCode === 27) this.close();
                },
                close: function () {
                    window.removeEventListener('keyup', this.esc);
                    document.getElementById('btnTipoPago').disabled = false;
                    $('#appVueTipoPago').modal('hide');
                }
            },
            computed: {
                computedTipoPago: {
                    get: function () {
                        if (this.list.tiposPago.length > 0 && this.list.tiposPago.find(x => x.id === this.tipoPago))
                            return this.list.tiposPago.find(x => x.id === this.tipoPago)
                    },
                    set: function (value) {
                        if (value) {
                            if (this.list.tiposPago.find(x => x.id === value.id)) {
                                this.tipoPago = value.id;
                            }
                        }
                        else {
                            this.tipoPago = '';
                        }
                    }
                },
                filledCampos: function () {
                    var _this = this;
                    switch (this.tipoPago) {
                        case '01': return _this.embarque && parseFloat(_this.importePagado) >= parseFloat(_this.sumaTotal) /*&& _this.arribo*/;
                        case '02': return _this.tarjeta && _this.tarjetaCant && parseFloat(_this.importePagado) >= parseFloat(_this.efectivo) && _this.embarque /*&& _this.arribo*/;
                        case '03': return _this.tarjeta && _this.numeroTarjeta && _this.embarque && _this.numeroTarjeta.length === 19 /*&& _this.arribo*/;
                        case '04': return _this.distrito && _this.direccion && _this.observacion && _this.embarque /*&& _this.arribo*/;
                        default: return false;
                    }
                }
            },
            watch: {
                pickedBusVenta: function (newVal, oldVal) {
                    if (newVal) {
                        switch (newVal) {
                            case 'V': // Venta
                                this.disabledTipoPago = false;
                                break;
                            case '7': // Pase de cortesía
                                this.disabledTipoPago = true;
                                break;
                        }
                    }
                }
            }
        });

        var appRegistrarInfante = new Vue({
            el: '#appRegistrarInfante ',
            data: {
                CodiTipoDoc: null,
                Documento: '',
                Nombres: '',
                ApellidoPaterno: '',
                ApellidoMaterno: '',
                FechaNac : '',
                Edad: '',
                Sexo: null,
                Parentesco: null,
                list: {
                    tipoDoc: [],
                    parentesco: [],
                    sexos: []
                },
                mask: {
                    documento: ''
                },
                disabledBotones: false,
                enableSaveWithClaveAutorizacion: false,
                password: '',
                validateMinNumero: '0'
            },
            mounted: function () {
                this.getParentesco();
            },
            methods: {
                show: function (_TipoDoc, _listSexos) {
                    window.addEventListener('keyup', this.esc);
                    if (this.Edad < 5)
                        this.enableSaveWithClaveAutorizacion = false;
                    if (!appVueVenta.list.ventas[appVueVenta.indexVenta].ObjAcompaniante)
                        this.limpiarCampos();
                    this.list.tipoDoc = _TipoDoc;
                    this.list.sexos = _listSexos;
                    $('#appRegistrarInfante').modal('show');
                },
                getParentesco: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-parentesco')
                        .then(res => {
                            if (res.data.Estado)
                                _this.list.parentesco = _.cloneDeep(res.data.Valor);
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                limpiarCampos: function () {
                    this.CodiTipoDoc = null;
                    this.Documento = '';
                    this.Nombres = '';
                    this.ApellidoPaterno = '';
                    this.ApellidoMaterno = '';
                    this.FechaNac = '';
                    this.Edad = '';
                    this.Sexo = ''; // null
                    this.Parentesco = ''; // null
                    this.disabledBotones = false;
                    this.validateMinNumero = '0';
                },
                setDateAndCalcYears: function (dateString) {
                    this.$nextTick(() => {
                        if (dateString) {
                            this.FechaNac = dateString;
                            var auxFechaNac = moment(dateString, 'DD/MM/YYYY');
                            this.Edad = '' + moment().diff(auxFechaNac, 'years');
                            this.recorridoSectionParentesco();
                        }
                        else
                            this.Edad = '';
                    });
                },
                recorridoSectionParentesco: function () {
                    var _this = this;
                    if (!_this.CodiTipoDoc) {
                        $('#cboTipoDocRA input[type=search]').focus();
                    }
                    else if (!_this.Documento) {
                        $('#txtDocumentoRA').focus();
                    }
                    else if (!_this.Nombres) {
                        $('#txtNombresRA').focus();
                    }
                    else if (!_this.ApellidoPaterno) {
                        $('#txtApellidoPaternoRA').focus();
                    }
                    else if (!_this.ApellidoMaterno) {
                        $('#txtApellidoMaternoRA').focus();
                    }
                    else if (!_this.FechaNac) {
                        $('#txtFechaNacRA').focus();
                    }
                    else if (!_this.Sexo) {
                        $('#cboSexoRA input[type=search]').focus();
                    }
                    else if (!_this.Parentesco) {
                        $('#cboParentescoRA input[type=search]').focus();
                    }
                    else {
                        _this.$nextTick(function () {
                            if (_this.Edad > 5)
                                $('#btnIngresarConClave').focus();
                            else
                                $('#btnRegistrarAconpaniante').focus(); 
                        });
                    }
                },
                saveAcompaniante: function () {
                    var ObjAcompaniante = {};
                    ObjAcompaniante.CodiTipoDoc = !this.CodiTipoDoc ? '' : this.CodiTipoDoc.id;
                    ObjAcompaniante.Documento = this.Documento;
                    ObjAcompaniante.NombreCompleto = this.Nombres + ',' + this.ApellidoPaterno + ',' + this.ApellidoMaterno;
                    ObjAcompaniante.FechaNac = this.FechaNac;
                    ObjAcompaniante.Edad = this.Edad;
                    ObjAcompaniante.Sexo = !this.Sexo ? '' : this.Sexo.id;
                    ObjAcompaniante.Parentesco = !this.Parentesco ? '' : this.Parentesco.id;
                    appVueVenta.list.ventas[appVueVenta.indexVenta].ObjAcompaniante = ObjAcompaniante;

                    this.close();
                },
                eliminarAcompaniante: function () {
                    appVueVenta.list.ventas[appVueVenta.indexVenta].ObjAcompaniante = null;
                    this.close();
                },
                setMostrarInfante: function (_ObjAcompaniante) {
                    this.CodiTipoDoc = _.find(appVueVenta.list.tiposDoc, { 'id': _ObjAcompaniante.CodiTipoDoc }) || null;
                    this.Documento = _ObjAcompaniante.Documento;
                    this.FechaNac = _ObjAcompaniante.FechaNac;
                    this.Edad = _ObjAcompaniante.Edad;
                    this.Sexo = _.find(appVueVenta.list.sexos, { 'id': _ObjAcompaniante.Sexo }) || null;
                    this.Parentesco = _.find(this.list.parentesco, { 'id': _ObjAcompaniante.Parentesco }) || null;
                    if (_ObjAcompaniante.NombreCompleto) {
                        var arrayDeNombres = _ObjAcompaniante.NombreCompleto.split(',');
                        this.Nombres = arrayDeNombres[0];
                        this.ApellidoPaterno = arrayDeNombres[1];
                        this.ApellidoMaterno = arrayDeNombres[2];
                    }

                    // Desactiva botones 'Eliminar' y 'Aceptar'.
                    if (appVueVenta.list.ventas[appVueVenta.indexVenta].FlagVenta) {
                        if (appVueVenta.list.ventas[appVueVenta.indexVenta].FlagVenta !== 'R')
                            this.disabledBotones = true;
                    }
                },
                showRegistrarWithClave: function () {
                    appController.showRegistrarWithClave();
                },
                sendClaveAutorizacion: function (_password) {
                    var _this = this;
                    APP.rq.axios2.post(APP.base + '/itinerarios/clave-autorizacion' + APP.util.getQueryParamByObject({ password: _password }))
                        .then(res => {
                            if (res.data.Estado) {
                                _this.enableSaveWithClaveAutorizacion = true;
                                $('#appClaveAutorizacion').modal('hide');

                                _this.$nextTick(function () {
                                    document.getElementById('btnRegistrarAconpaniante').focus();
                                });

                                APP.msg.info(res.data.Mensaje);
                            }
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                esc: function (event) {
                    if (event.keyCode === 27) this.close();
                },
                close: function () {
                    window.removeEventListener('keyup', this.esc);
                    $('#appRegistrarInfante').modal('hide');
                },
                passNumDocToDocumento: function () {
                    var _this = this;
                    var codiTipoDoc = _this.list.ventas[_this.indexVenta].CodiTipoDoc;
                    if (codiTipoDoc) {
                        id = codiTipoDoc.id;
                        if (id === "1") { //DNI
                            _this.mask.documento = "#".repeat(8);
                            _this.list.ventas[_this.indexVenta].Nacionalidad = 'PERUANA';
                        }
                        else if (id === "4") { //PASAPORTE
                            _this.mask.documento = "N".repeat(15);
                            _this.list.ventas[_this.indexVenta].Nacionalidad = '';
                        }
                        else if (id === "7") { //CARNET EXTRANJERIA
                            _this.mask.documento = "N".repeat(15);
                            _this.list.ventas[_this.indexVenta].Nacionalidad = '';
                        }
                    }
                    this.recorridoSectionVentas();
                },
            },
            computed: {
                filledCampos: function () {
                    var _this = this;
                    if (_this.enableSaveWithClaveAutorizacion === true)
                        return true;
                    else {
                        return (
                            _this.CodiTipoDoc &&
                            _this.Documento.length >= 8 &&
                            _this.Nombres &&
                            _this.ApellidoPaterno &&
                            _this.ApellidoMaterno &&
                            _this.FechaNac &&
                            _this.Edad < 5 &&
                            _this.Sexo &&
                            _this.Parentesco
                        )
                    }
                }
            },
            watch: {
                'CodiTipoDoc': function (newValue) {
                    var _this = this;
                    if (newValue) {
                        var id = newValue.id;
                        if (id === "1") {
                            //DNI
                            _this.mask.documento = "#".repeat(8);
                            _this.validateMinNumero = '8';
                        }
                        else if (id === "4") {
                            //PASAPORTE
                            _this.mask.documento = "N".repeat(15);
                            _this.validateMinNumero = '15';
                        }
                        else if (id === "7") {
                            //CARNET EXTRANJERIA
                            _this.mask.documento = "N".repeat(15);
                            _this.validateMinNumero = '15';
                        }
                    }
                }
            }
        });

        var appVuePaseCortesia = new Vue({
            el: "#appVuePaseCortesia",
            data: {
                gerente: null,
                solicitante: null,
                concepto: '',
                beneficiario: '',
                list: {
                    gerentes: [],
                    solicitantes: [],
                    beneficiarios: [],
                    filterBeneficiarios: []
                },
                paginate: ['items'],
                boletosLibres: '',
                boletosByPrecio: '',
                totalBoletos: '',
                selectBen: false,
                fechaAbierta: false,
                searchInTable: ''
            },
            mounted: function () {},
            methods: {
                show: function () {
                    window.addEventListener('keyup', this.esc);//HMSV
                    this.getGerentes();
                    this.getSocios();
                    this.limpiarPaseCortesia();
                    $('#appVuePaseCortesia').modal('show');
                },
                getGerentes() {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-gerentes')
                        .then(res => {
                            if (res.data.Estado)
                                _this.list.gerentes = _.cloneDeep(res.data.Valor);
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                getSocios() {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-socios')
                        .then(res => {
                            if (res.data.Estado)
                                _this.list.solicitantes = _.cloneDeep(res.data.Valor);
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                recorridoPaseCortesia: function () {
                    var _this = this;
                    if (!_this.gerente)
                        $('#cboGerentePC input[type=search]').focus();
                    else if (!_this.solicitante)
                        $('#cboSolicitantePC input[type=search]').focus();
                    else if (!_this.concepto)
                        $('#txtConceptoPC').focus();
                    else if (!_this.beneficiario)
                        $('#txtBeneficiarioPC').focus();
                    else
                        $('#btnAsignaPC').focus();
                },
                fillBeneficiario: function (solicitante) {
                    this.listaBeneficiarios(solicitante.id);
                    this.recorridoPaseCortesia();
                },
                listaBeneficiarios: function (codSocio) {
                    var _this = this;
                    APP.rq.axios2.post(APP.base + '/itinerarios/listaBeneficiarioPase', { CodiSocio: codSocio })
                        .then(res => {
                            if (res.data.Estado) {
                                _this.boletosLibres = res.data.Valor.BoletoLibre;
                                _this.boletosByPrecio = res.data.Valor.BoletoPrecio;
                                _this.totalBoletos = res.data.Valor.BoletoTotal;
                                _this.list.beneficiarios = res.data.Valor.ListaBeneficiarios;
                                _this.list.filterBeneficiarios = _.cloneDeep(_this.list.beneficiarios);
                            }
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                esc: function (event) {
                    if (event.keyCode === 27)
                        this.cancelarPaseCortesia();
                },
                cancelarPaseCortesia: function () {
                    window.removeEventListener('keyup', this.esc);
                    $('#appVuePaseCortesia').modal('hide');
                    this.limpiarPaseCortesia();
                    appController.liberarAsientoActual();
                },
                limpiarPaseCortesia: function () {
                    var _this = this;
                    _this.gerente = null;
                    _this.solicitante = null;
                    _this.concepto = '';
                    _this.beneficiario = '';
                    _this.fechaAbierta = false;
                    _this.list.beneficiarios = [];
                    _this.list.filterBeneficiarios = [];
                },
                validateSend: function () {
                    var _this = this;
                    return (
                        _this.gerente &&
                        _this.solicitante &&
                        _this.concepto &&
                        _this.beneficiario &&
                        parseFloat(_this.efectivo) + parseFloat(_this.tarjetaCant) === _this.sumaTotal
                    )
                },
                sendRow: async function (item) {
                    var _this = this;
                    if (_this.validateSend) {
                        // SweetAlert para 'fechaAbierta'
                        if (await APP.msg.confirm('Mensaje', '¿Desea enviar el pase a Fecha Abierta?'))
                            _this.fechaAbierta = true;

                        appController.sendPaseCortesia(item);
                        $('#appVuePaseCortesia').modal('hide');
                    }
                    _this.$nextTick(function () {
                        appVueVenta.passNumDocToDocumento();
                    });
                }
            },
            computed: {
                filledCampos: function () {
                    var _this = this;
                    return (
                        _this.gerente &&
                        _this.solicitante &&
                        _this.concepto &&
                        _this.beneficiario &&
                        parseFloat(_this.efectivo) + parseFloat(_this.tarjetaCant) === _this.sumaTotal
                    )
                }
            },
            watch: {
                searchInTable: function (newVal) {
                    var _this = this;
                    if (String(newVal).replace(/\s/g, '').length > 0) {
                        _this.list.filterBeneficiarios = _.filter(_this.list.beneficiarios, obj => {
                            var coincidence = obj.NombreBeneficiario.toUpperCase().indexOf(newVal.toUpperCase()) !== -1;
                            return coincidence;
                        });
                    } else {
                         _this.list.filterBeneficiarios = _this.list.beneficiarios;
                    }
                }
            }
        });

        var appBoletosVendidos = new Vue({
            el: "#appBoletosVendidos",
            data: {
                boletos: []
            },
            methods: {
                show: function (_boletosVendidos) {
                    var _this = this;
                    _this.boletos = _boletosVendidos.split(',');
                    _this.boletos.pop();
                    window.addEventListener('keyup', _this.esc);
                    $('#appBoletosVendidos').modal('show');
                },
                esc: function (event) {
                    if (event.keyCode === 27) this.cerrarVenta();
                },
                cerrarVenta: function () {
                    window.removeEventListener('keyup', this.esc);
                    $('#appBoletosVendidos').modal('hide');
                }
            }
        });

        var appVuePostergacion = new Vue({
            el: '#appVuePostergacion',
            data: {
                filtro: {
                    empresa: null,
                    serie: '',
                    documento: ''
                },
                list: {
                    empresas: []
                },
                showBeneficiario: false,
                objBeneficiario: {}
            },
            mounted: function () {
                var _this = this;
                APP.rq.axios2.get(APP.base + '/base/get-empresas')
                    .then(res => {
                        if (res.data.Estado)
                            _this.list.empresas = _.cloneDeep(res.data.Valor);
                        else
                            APP.msg.error(res.data.Mensaje);
                    })
                    .catch(APP.rq.axios_handler_error_alert);
            },
            methods: {
                show: function () {
                    window.addEventListener('keyup', this.esc);
                    this.limpiarCampos();
                    this.showBeneficiario = false;
                    $('#appVuePostergacion').modal('show');
                },
                esc: function (event) {
                    if (event.keyCode === 27)
                        this.close();
                },
                close: async function () {
                    window.removeEventListener('keyup', this.esc);
                    $('#appVuePostergacion').modal('hide');
                    await appController.liberarAsientoActual();
                },
                recorrido: function () {
                    var _this = this;
                    if (!_this.filtro.empresa)
                        $('#cboEmpresaPos input[type=search]').focus();
                    else if (!_this.filtro.serie)
                        $('#txtSeriePos').focus();
                    else if (!_this.filtro.documento)
                        $('#txtNumeroPos').focus();
                    else
                        $('#btnBuscarPos').focus();
                },
                blurSerie: function () {
                    var _serie = _.cloneDeep(this.filtro.serie);
                    if (!isNaN(this.filtro.serie))
                        this.filtro.serie = parseInt(_serie) > 0 ? _.padStart(_serie, 4, '0').toUpperCase() : '';
                    else {
                        if (_serie.substring(0, 1).toUpperCase() === 'B')
                            this.filtro.serie = 'B' + _.padStart(_serie.substring(1, 4), 3, '0');
                        else if (_serie.substring(0, 1).toUpperCase() === 'F')
                            this.filtro.serie = 'F' + _.padStart(_serie.substring(1, 4), 3, '0');
                        else
                            this.filtro.serie = '';
                    }
                },
                blurNumero: function () {
                    var _documento = _.cloneDeep(this.filtro.documento);
                    return this.filtro.documento = parseInt(_documento) > 0 ? _.padStart(_documento, 7, '0') : '';
                },
                limpiarCampos: function () {
                    this.filtro.empresa = null;
                    this.filtro.serie = '';
                    this.filtro.documento = '';
                    this.objBeneficiario = {};
                },
                searchPasajero: function () {
                    var _this = this;
                    _this.showBeneficiario = false;

                    var _tipo = _this.filtro.serie.substring(0, 1) === '0' ? 'M' : _this.filtro.serie.substring(0, 1);
                    var _serie = isNaN(_this.filtro.serie) ? parseInt(_this.filtro.serie.substring(1, 4)) : parseInt(_this.filtro.serie);

                    APP.rq.axios.get(APP.base + '/itinerarios/buscar-venta-x-boleto' + APP.util.getQueryParamByObject({
                        Tipo: _tipo,
                        Serie: _serie,
                        Numero: parseInt(_this.filtro.documento),
                        CodiEmpresa: _this.filtro.empresa.id
                    }))
                        .then(res => {
                            if (res.data.Estado) {
                                _this.showBeneficiario = true;
                                _this.objBeneficiario = _.cloneDeep(res.data.Valor);
                                var nombresSplit = _this.objBeneficiario.NombresConcat.split(',');
                                _this.objBeneficiario.Nombre = nombresSplit[0];
                                _this.objBeneficiario.ApellidoPaterno = nombresSplit[1];
                                _this.objBeneficiario.ApellidoMaterno = nombresSplit[2];
                                $('#btnAsignarPos').focus();
                            }
                            else {
                                _this.objBeneficiario = {};
                                APP.msg.error(res.data.Mensaje);
                            }
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                asignBeneficiario: async function () {
                    var _this = this;

                    var _origen = String(appVueVenta.filtro.CodiSucursal.id);
                    var _destino = String(appVueVenta.filtro.CodiDestinoPas.id);

                    if (_origen === String(_this.objBeneficiario.CodiOrigen) && _destino === String(_this.objBeneficiario.CodiDestino)) {
                        var input = {};
                        input.IdVenta = _this.objBeneficiario.IdVenta;
                        input.CodiProgramacion = appVueVenta.filtro.CodiProgramacion;
                        input.NumeAsiento = appVueVenta.list.ventas[appVueVenta.indexVenta].NroAsiento;
                        input.CodiServicio = appVueVenta.filtro.CodiServicio.id;
                        input.FechaViaje = appVueVenta.filtro.Fecha;
                        input.HoraViaje = appVueVenta.filtro.Turno;
                        input.NroViaje = appVueVenta.filtro.NroViaje;
                        input.FechaProgramacion = appVueVenta.objTurno.FechaProgramacion;
                        input.CodiEmpresa = appVueVenta.filtro.CodiEmpresa.id;
                        input.CodiSucursal = appVueVenta.filtro.CodiOrigenBus.id;
                        input.CodiRuta = appVueVenta.filtro.CodiDestinoBus.id;
                        input.CodiBus = appVueVenta.objPlano.CodiBus;
                        input.HoraProgramacion = appVueVenta.objTurno.HoraProgramacion;

                        // Limpiar 'AsientosBloqueados'
                        var auxResponse = await appVueVenta.cancelarBoletos();
                        if (!auxResponse) {
                            APP.msg.error('No se pudo limpiar los asientos bloqueados para realizar la venta.');
                            return;
                        }

                        await APP.rq.axios.post(APP.base + '/itinerarios/postergar-venta', input)
                            .then(async function (res) {
                                await _this.close();
                                await appController.chargeTurnos();
                                if (!res.data.Estado) {
                                    _this.$nextTick(() => {
                                        APP.msg.error(res.data.Mensaje)
                                    });
                                }
                            })
                            .catch(APP.rq.axios_handler_error_alert);
                    }
                    else
                        APP.msg.warning("El origen y el destino del pasajero son distintos al del bus");
                }
            },
            computed: {
                filledCampos: function () {
                    if (this.filtro.empresa)
                        return this.filtro.empresa.id && this.filtro.serie && this.filtro.documento;
                    else
                        return false;
                }
            }
        });

        var appClaveAutorizacion = new Vue({
            el: "#appClaveAutorizacion",
            data: {
                password: ''
            },
            methods: {
                show: function () {
                    this.limpiarClaveAutorizacion();
                    $('#appClaveAutorizacion').modal('show');
                },
                sendClaveAutorizacion: function () {
                    var _this = this;
                    appController.sendClaveAutorizacion(_this.password);
                },
                limpiarClaveAutorizacion: function () {
                    var _this = this;
                    _this.password = '';
                },
                cerrarClaveAutorizacion: function () {
                    var _this = this;
                    $('#appClaveAutorizacion').modal('hide');
                    _this.password = '';
                }
            }
        });

        var appVueConfirmFechaAbierta = new Vue({

        });

    </script>
}
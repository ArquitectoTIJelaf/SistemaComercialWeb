@using SisComWeb.Aplication.Helpers

@{
    ViewBag.Title = "Ventas";
    var usuario = DataSession.UsuarioLogueado;
}

@Html.Partial("_Filtros")
@Html.Partial("_Table")
@Html.Partial("_Venta")
@Html.Partial("_RegistrarInfante")
@Html.Partial("_TipoPago")

@section styles{
    <style type="text/css">
        .panel-default .panel-heading {
            height: auto;
        }

        .input-group-addon {
            border-radius: 4px;
            border: 1px solid rgb(228, 231, 234);
            color: #2a97f4;
            background-color: white;
        }

        ul.pagination {
            display: inline-block;
            padding: 0;
            margin: 0;
            background-color: white;
            padding: 5px;
            border-radius: 8px;
            cursor: pointer;
        }

            ul.pagination li {
                display: inline;
            }

                ul.pagination li a {
                    color: black;
                    float: left;
                    padding: 8px 16px;
                    text-decoration: none;
                    transition: background-color .3s;
                    border: 1px solid #ddd;
                    margin: 0 4px;
                    border-radius: 50%;
                }

                    ul.pagination li a.active {
                        background-color: #4CAF50;
                        color: white;
                        border: 1px solid #4CAF50;
                    }

                    ul.pagination li a:hover:not(.active) {
                        background-color: #ddd;
                    }

        .pagination > li:first-child > a {
            border-top-left-radius: 50%;
            border-bottom-left-radius: 50%
        }

        .pagination > li:last-child > a {
            border-bottom-right-radius: 50%;
            border-top-right-radius: 50%;
        }

        .table-responsive > ul {
            display: none;
        }

        .btn-inverse:focus {
            background-color: #A1ABB7 !important;
            border: 1px solid #A1ABB7 !important;
        }

        .container-bus {
            display: inline-block;
            width: 100%;
            padding: 15px;
        }

        .img-bus {
            float: left;
        }

        .form-bus {
            background-color: #616e7e;
            width: calc(100% - 108px);
            border: 2px solid #4b4a4b;
            border-radius: 0 8px 8px 0;
            margin-bottom: 0;
        }

        .table-bus {
            cursor: default;
            background-color: white;
            height: 252px;
        }

        .LI {
            border-left: 2px solid #4b4a4b;
            margin-left: 5px;
            margin-right: 3px;
            height: 100%;
            display: block;
        }

        .PU {
            background: url("/wwwroot/plugins/images/users/puerta.png") no-repeat center center;
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .VA {
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .CU {
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .BA {
            background: url("/wwwroot/plugins/images/users/baño.png") no-repeat center center;
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .TV {
            background: url("/wwwroot/plugins/images/users/TV.png") no-repeat center center;
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .EE {
            background: url("/wwwroot/plugins/images/users/ESCALERA.png") no-repeat center center;
            background-color: #B2B2B2;
            border-radius: 4px;
            display: block;
            height: 95%;
            min-width: 40px;
        }

        .bus-td {
            padding: 0 !important;
            height: 50px;
            border-color: transparent !important;
            vertical-align: middle !important;
            align-items: center;
            text-align: center;
        }

        .btn-bus {
            padding: 5px;
            height: 95% !important;
            width: 95% !important;
            font-weight: 900;
            background-color: #f7fafc;
            border: 1px solid #5b5b5c !important;
            color: #333;
        }

        .number-of-seat {
            display: block;
            font-size: 14px;
        }

        .icons-of-seat {
            display: block;
        }

        .ios-left {
            position: relative;
            left: -10%;
            height: 95%;
            min-width: 8px;
        }

        .ios-right {
            position: relative;
            right: -10%;
        }

        .check-with-label:checked + .label-for-check {
        }

        .active-chck {
            color: #2A97F4;
            font-weight: 500 !important;
        }

        @@-webkit-keyframes pulseColor {
            0% {
                color: #2A97F4;
            }

            50% {
                color: #198DF3;
            }

            51% {
                color: #0A67B8;
            }

            100% {
                color: #064072;
            }
        }

        #btnActualizar:focus {
            color: #2A97F4;
            font-weight: 500 !important;
            font-size: 16px;
            -webkit-animation-name: pulseColor;
            -webkit-animation-iteration-count: infinite;
            -webkit-animation-duration: 1s;
        }

        .animated {
            -webkit-animation-duration: 400ms;
            animation-duration: 400ms;
        }

        .align-radio {
            float: left;
            margin-right: 5px !important;
            margin-top: 2px !important;
        }

        .align-label-radio {
            margin-bottom: 4px;
        }

        #appVueTable {
            /*height: calc(100vh - 265px);
            display: flex;*/
            /*align-items: center;*/
        }

        .content {
            /*text-align: center;
            width: 100%;*/
        }
    </style>
}

@section scripts{
    <script>

        $(document).ready(function () {
            //#region RECORRIDO ITINERARIOS
            $(document).on('focus active', 'input[type=checkbox]', function () {
                $('label[for=' + $(this).attr('id') + ']').addClass('active-chck');
            });
            $(document).on('blur', 'input[type=checkbox]', function () {
                $('label[for=' + $(this).attr('id') + ']').removeClass('active-chck');
            });
            //#endregion

            $('#txtPrecio').on('keypress', function (e) {
                // backspace = 8, enter = 13, ’0′ = 48, ’9′ = 57, ‘.’ = 46
                var field = $(this);
                key = e.keycode ? e.keycode : e.which;

                if (key == 8) return true;
                if (key > 47 && key < 58) {
                    if (field.val() === "") return true;
                    var existepto = (/[.]/).test(field.val());
                    if (existepto === false) {
                        regexp = /.[0-9]{10}$/; //parte entera 10
                    }
                    else {
                        regexp = /.[0-9]{2}$/; //parte decimal2
                    }
                    return !(regexp.test(field.val()));
                }
                if (key == 46) {
                    if (field.val() === "") return false;
                    regexp = /^[0-9]+$/;

                    return regexp.test(field.val());
                }
                return false;
            });

            $('#txtTtarjetaCantTP').on('keypress', function (e) {
                // backspace = 8, enter = 13, ’0′ = 48, ’9′ = 57, ‘.’ = 46
                var field = $(this);
                key = e.keycode ? e.keycode : e.which;

                if (key == 8) return true;
                if (key > 47 && key < 58) {
                    if (field.val() === "") return true;
                    var existepto = (/[.]/).test(field.val());
                    if (existepto === false) {
                        regexp = /.[0-9]{10}$/; //parte entera 10
                    }
                    else {
                        regexp = /.[0-9]{2}$/; //parte decimal2
                    }
                    return !(regexp.test(field.val()));
                }
                if (key == 46) {
                    if (field.val() === "") return false;
                    regexp = /^[0-9]+$/;

                    return regexp.test(field.val());
                }
                return false;
            });

            $('#txtEfectivoTP').on('keypress', function (e) {
                // backspace = 8, enter = 13, ’0′ = 48, ’9′ = 57, ‘.’ = 46
                var field = $(this);
                key = e.keycode ? e.keycode : e.which;

                if (key == 8) return true;
                if (key > 47 && key < 58) {
                    if (field.val() === "") return true;
                    var existepto = (/[.]/).test(field.val());
                    if (existepto === false) {
                        regexp = /.[0-9]{10}$/; //parte entera 10
                    }
                    else {
                        regexp = /.[0-9]{2}$/; //parte decimal2
                    }
                    return !(regexp.test(field.val()));
                }
                if (key == 46) {
                    if (field.val() === "") return false;
                    regexp = /^[0-9]+$/;

                    return regexp.test(field.val());
                }
                return false;
            });

            function validateFloatKeyPress(el, evt) {
                var charCode = (evt.which) ? evt.which : event.keyCode;
                var number = el.value.split('.');
                if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
                    return false;
                }
                //just one dot
                if (number.length > 1 && charCode == 46) {
                    return false;
                }
                //get the carat position
                var caratPos = getSelectionStart(el);
                var dotPos = el.value.indexOf(".");
                if (caratPos > dotPos && dotPos > -1 && (number[1].length > 1)) {
                    return false;
                }
                return true;
            }

            function getSelectionStart(o) {
                if (o.createTextRange) {
                    var r = document.selection.createRange().duplicate()
                    r.moveEnd('character', o.value.length)
                    if (r.text == '') return o.value.length
                    return o.value.lastIndexOf(r.text)
                } else return o.selectionStart
            }

            function keyPress(field, evt) {

            }
        });

        var selectAll = {
            id: 0,
            label: 'TODOS'
        }

        var CodiSucursal = '@usuario.CodiSucursal'

        var appController = (function () {
            return {
                loadTable: function (_list) {
                    appVueTable.loadTable(_list)
                },
                showVentas: function (_item, _turnos) {
                    appVueFilter.showVentas = true;
                    appVueTable.showVentas = true;
                    appVueVenta.showVentas = true;
                    var _fechaViaje = appVueFilter.filtro.FechaViaje
                    appVueVenta.chargeVentas(_item, _fechaViaje, _turnos);
                },
                hideVentas: function () {
                    appVueFilter.showVentas = false;
                    appVueTable.showVentas = false;
                    appVueVenta.showVentas = false;
                },
                chargeItinerarios: function () {
                    appVueFilter.search();
                },
                chargeTurnos: function () {
                    var item = {};
                    appVueVenta.firstCharge = false;
                    item.CodiEmpresa = appVueVenta.filtro.CodiEmpresa.id;
                    item.CodiOrigen = appVueVenta.filtro.CodiSucursal.id;
                    item.CodiSucursal = appVueVenta.filtro.CodiOrigenBus.id;
                    item.CodiPuntoVenta = appVueVenta.filtro.CodiPVOrigenBus.id;
                    item.CodiRuta = appVueVenta.filtro.CodiDestinoBus.id;
                    item.CodiServicio = appVueVenta.filtro.CodiServicio.id;
                    item.CodiDestino = appVueVenta.filtro.CodiDestinoPas.id;
                    item.HoraPartida = appVueVenta.filtro.Turno.replace(" ", "");
                    item.FechaViaje = appVueVenta.filtro.Fecha;
                    appVueVenta.getTurno(item, item.FechaViaje);
                },
                showTipoPago: function (_embarque, _arribos, _ticketVenta, _listaVenta) {
                    appVueTipoPago.show(_embarque, _arribos, _ticketVenta, _listaVenta);
                },
                showRegistrarInfante: function (_TipoDoc, _ListSexos) {
                    appRegistrarInfante.show(_TipoDoc, _ListSexos);
                }
            };
        })();

        var appVueFilter = new Vue({
            el: '#appVueFilter',
            data: {
                filtro: {
                    CodiOrigen: null,
                    CodiDestino: null,
                    CodiRuta: null,
                    FechaViaje: '',
                    Hora: '',
                    TodosTurnos: false,
                    SoloProgramados: false
                },
                list: {
                    origenesPas: [],
                    destinosPas: [],
                    destinosBus: []
                },
                showVentas: false,
                processing: false
            },
            mounted: function () {
                $(".preloader").fadeIn();
                this.getSucursales();
                this.$nextTick(() => {
                    $('#cboDestinoPas input[type=search]').focus();
                    $(".preloader").fadeOut();
                });
            },
            methods: {
                getLabel(option) {
                    return `${option.id} - ${option.label}`
                },
                getSucursales() {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-oficinas')
                        .then(res => {
                            _this.list.origenesPas = _.cloneDeep(res.data);
                            _this.filtro.CodiOrigen = _this.list.origenesPas.find(x => x.id === CodiSucursal);
                            _this.list.destinosPas = _.cloneDeep(res.data);
                            _this.list.destinosPas.unshift(selectAll);
                            _this.list.destinosBus = _.cloneDeep(res.data);
                            _this.list.destinosBus.unshift(selectAll);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                search() {
                    this.processing = true;
                    var _this = this;
                    var input = {};
                    input.CodiOrigen = _this.filtro.CodiOrigen.id;
                    input.CodiDestino = _this.filtro.CodiDestino.id;
                    input.CodiRuta = (_this.filtro.CodiRuta) ? _this.filtro.CodiRuta.id : 0;
                    input.FechaViaje = _this.filtro.FechaViaje;
                    input.Hora = _this.filtro.Hora;
                    input.TodosTurnos = _this.filtro.TodosTurnos;
                    input.SoloProgramados = _this.filtro.SoloProgramados;
                    APP.rq.axios.post(APP.base + '/itinerarios/lista-itinerarios', input)
                        .then(res => {
                            appController.loadTable(res.data);
                            this.processing = false;
                        }).catch(err => {
                            this.processing = false;
                            APP.rq.axios_handler_error_alert;
                        });
                },
                recorrido: function () {
                    var _this = this;
                    if (_this.filtro.CodiOrigen === null) {
                        $('#cboOrigenPas input[type=search]').focus();
                    } else if (_this.filtro.CodiDestino === null) {
                        $('#cboDestinoPas input[type=search]').focus();
                    } else if (_this.filtro.CodiRuta === null) {
                        $('#cboDestinoBus input[type=search]').focus();
                    } else if (_this.filtro.FechaViaje === '') {
                        $('#txtFecha').focus();
                    } else if (_this.filtro.Hora === '') {
                        $('#txtHora').focus();
                    } else {
                        this.search();
                    }
                },
                nextStep: function (code) {
                    switch (code) {
                        case 1: $('#cboDestinoPas input[type=search]').focus(); break;
                        case 2: $('#cboDestinoBus input[type=search]').focus(); break;
                        case 3: $('#txtFecha').focus(); break;
                        case 4: this.filtro.FechaViaje = $('#txtFecha').val(); $('#txtHora').focus(); break;
                        case 5: this.filtro.Hora = $('#txtHora').val(); $('#chckTodos:first').focus(); break;
                        case 6: $('#chckProgramados:first').focus(); break;
                        case 7: $('#buscar').focus(); break;
                        default: this.recorrido();
                    }
                }
            },
            computed: {
            },
            watch: {
                'filtro.CodiOrigen': function (newVal, oldVal) {
                    this.nextStep(1);
                },
                'filtro.CodiDestino': function (newVal, oldVal) {
                    this.nextStep(2);
                },
                'filtro.CodiRuta': function (newVal, oldVal) {
                    this.nextStep(3);
                }
            }
        });

        var appVueTable = new Vue({
            el: '#appVueTable',
            data: {
                list: {
                    itinerarios: []
                },
                paginate: ['items'],
                showVentas: false
            },
            mounted: function () {
            },
            methods: {
                loadTable: function (list) {
                    this.list.itinerarios = list;
                    this.$nextTick(() => {
                        this.shown = true
                    });
                },
                sendRow: function (item) {
                    var turnos = this.list.itinerarios.reduce(function (filtered, option) {
                        if (option.CodiDestino === item.CodiDestino) {
                            var someNewValue =
                            {
                                NomServicio: option.NomServicio,
                                HoraPartida: option.HoraPartida,
                                CodiServicio: option.CodiServicio,
                                CodiRuta: option.CodiRuta,
                                //TODO Parámetros innecesarios
                                PlanoBus: option.PlanoBus,
                                CodiProgramacion: option.CodiProgramacion,
                                CodiOrigen: option.CodiOrigen,
                                CodiDestino: option.CodiDestino,
                                CodiBus: option.CodiBus,
                                HoraViaje: option.HoraViaje,
                                FechaViaje: appVueFilter.filtro.FechaViaje,
                                CodiEmpresa: option.CodiEmpresa,
                                FechaProgramacion: option.FechaProgramacion,
                                NroViaje: option.NroViaje,
                                CodiPuntoVenta: option.CodiPuntoVenta,
                                CodiSucursal: option.CodiSucursal
                            }
                            filtered.push(someNewValue);
                        }
                        return filtered;
                    }, []);
                    appController.showVentas(item, turnos);
                }
            },
            computed: {
            },
            watch: {
            }
        });

        var appVueVenta = new Vue({
            el: '#appVueVenta',
            data: {
                filtro: {
                    CodiEmpresa: null,
                    CodiSucursal: null,
                    CodiOrigenBus: null,
                    CodiPVOrigenBus: null,
                    CodiDestinoBus: null,
                    CodiServicio: null,
                    CodiDestinoPas: null,
                    Turno: '',
                    Fecha: '',
                    NroViaje: '',
                    CodiProgramacion: ''
                },
                list: {
                    empresas: [],
                    sucursales: [],
                    origenesBus: [],
                    pvOrigenesBus: [],
                    destinosBus: [],
                    servicios: [],
                    destinosPas: [],
                    plano1: [],
                    plano2: [],
                    plano3: [],
                    plano4: [],
                    plano5: [],
                    tiposDoc: [],
                    turnos: [],
                    destinosRuta: [],
                    embarques: [],
                    ventas: [{
                        IdCliente: 0,
                        CodiTipoDoc: null,
                        Documento: '',
                        Nombres: '',
                        ApellidoPaterno: '',
                        ApellidoMaterno: '',
                        FechaNac: '',
                        Edad: '',
                        Sexo: null,
                        Telefono: '',
                        Ruc: '',
                        Recoger: '',
                        Reintegro: '',
                        Observacion: '',
                        Precio: '',
                        PrecioNormal: '',
                        PrecioMin: '',
                        PrecioMax: '',
                        NroAsiento: '',
                        NivelAsiento: 0,
                        NroVenta: '',
                        NroSolicitud: '',
                        FechaVen: moment(new Date, 'DD/MM/YYYY').format("DD/MM/YYYY"),
                        RazonSocial: '',
                        Direccion: '',
                        Nacionalidad: '',
                        IsDisabled: false
                    }],
                    sexos: [
                        { 'id': 'M', 'label': 'MASCULINO' },
                        { 'id': 'F', 'label': 'FEMENINO' }
                    ],
                    tempList: []
                },
                objPlano: {
                    CodiBus: '',
                    PlacaBus: '',
                    PlanoBus: '',
                    CodiChofer: '',
                    NombreChofer: '',
                    CodiCopiloto: '',
                    NombreCopiloto: ''
                },
                showVentas: false,
                showPlano: false,
                showTextTurnos: false,
                firstCharge: true,
                indexVenta: 0,
                oldPeople: [],
                firstAsiento: true,
                pickedBusVenta: 'V',
                mask: {
                    documento: ''
                },
                objTurno: {
                    FechaProgramacion: '',
                    HoraProgramacion: ''
                },
                Correlativo: ''
            },
            mounted: function () {
                this.getEmpresas();
                this.getSucursales();
                this.getServicios();
                this.getTiposDoc();
                //this.$refs.select.open = true
            },
            methods: {
                chargeVentas: function (item, fechaViaje, turnos) {
                    this.firstCharge = true;
                    this.list.turnos = turnos;
                    this.objTurno.FechaProgramacion = item.FechaProgramacion;
                    this.objTurno.HoraProgramacion = item.HoraProgramacion;
                    this.getTurno(item, fechaViaje);
                },
                getTurno: async function (item, fechaViaje) {
                    var _this = this;
                    var input = {};
                    input.CodiEmpresa = item.CodiEmpresa;
                    input.CodiOrigen = item.CodiOrigen;
                    input.CodiDestino = item.CodiDestino;
                    input.CodiSucursal = item.CodiSucursal;
                    input.CodiRuta = item.CodiRuta;
                    input.CodiPuntoVenta = item.CodiPuntoVenta;
                    input.CodiServicio = item.CodiServicio;
                    input.HoraViaje = item.HoraPartida;
                    input.FechaViaje = fechaViaje;
                    _this.Correlativo = await _this.getCorrelativo(item.CodiEmpresa);
                    // Cuando no obtiene 'Correlativo'
                    if (_this.Correlativo === '0-0') {
                        _this.showPlano = false;
                        APP.msg.error('No se cargó resultados');
                        return;
                    }
                    APP.rq.axios.post(APP.base + '/itinerarios/turnos', input)
                        .then(async function (res) {
                            if (res.data.NroViaje) {
                                _this.filtro.CodiEmpresa = _this.list.empresas.find(x => x.id === String(res.data.CodiEmpresa));
                                _this.filtro.CodiSucursal = _this.list.sucursales.find(x => x.id === String(res.data.CodiOrigen));
                                _this.filtro.CodiOrigenBus = _this.list.origenesBus.find(x => x.id === String(res.data.CodiSucursal));
                                _this.filtro.CodiDestinoBus = _this.list.destinosBus.find(x => x.id === String(res.data.CodiRuta));
                                _this.filtro.CodiServicio = _this.list.servicios.find(x => x.id === String(res.data.CodiServicio));
                                _this.filtro.CodiDestinoPas = _this.list.destinosPas.find(x => x.id === String(res.data.CodiDestino));
                                _this.filtro.Turno = res.data.HoraPartida;
                                _this.filtro.Fecha = fechaViaje;
                                _this.filtro.NroViaje = res.data.NroViaje;
                                _this.filtro.CodiProgramacion = res.data.CodiProgramacion;
                                await _this.getPVOrigenesBus(_this.filtro.CodiOrigenBus.id);
                                _this.filtro.CodiPVOrigenBus = _this.list.pvOrigenesBus.find(x => x.id === String(res.data.CodiPuntoVenta));
                                _this.objPlano.CodiBus = res.data.CodiBus;
                                _this.objPlano.PlacaBus = res.data.PlacaBus;
                                _this.objPlano.PlanoBus = res.data.PlanoBus;
                                _this.objPlano.CodiChofer = res.data.CodiChofer;
                                _this.objPlano.NombreChofer = res.data.NombreChofer;
                                _this.objPlano.CodiCopiloto = res.data.CodiCopiloto;
                                _this.objPlano.NombreCopiloto = res.data.NombreCopiloto;
                                _this.list.destinosRuta = res.data.ListaDestinosRuta;
                                _this.list.embarques = res.data.ListaEmbarques;
                                _this.objTurno.FechaProgramacion = res.data.FechaProgramacion;
                                _this.objTurno.HoraProgramacion = res.data.HoraProgramacion;
                                _this.list.tempList = _.cloneDeep(res.data.ListaPlanoBus);

                                var limpiarAB = await _this.limpiarAsientosBloqueados(_this.list.tempList);
                                if (_this.list.tempList.length > 0 && limpiarAB) {
                                    _this.list.plano5 = _this.list.tempList.filter(x => x.Indice === Math.ceil(x.Indice / 5) * 5);
                                    _this.list.plano4 = _this.list.tempList.filter(x => x.Indice + 1 === Math.ceil(x.Indice / 5) * 5);
                                    _this.list.plano3 = _this.list.tempList.filter(x => x.Indice + 2 === Math.ceil(x.Indice / 5) * 5);
                                    _this.list.plano2 = _this.list.tempList.filter(x => x.Indice + 3 === Math.ceil(x.Indice / 5) * 5);
                                    _this.list.plano1 = _this.list.tempList.filter(x => x.Indice + 4 === Math.ceil(x.Indice / 5) * 5);
                                    _this.$nextTick(() => {
                                        if (!_this.firstCharge) {
                                            if ($("#panelWrapperV").hasClass("in"))
                                                $('#btnDesplegar').click();
                                        } else {
                                            _this.firstCharge = false;
                                        }
                                        _this.showPlano = true;
                                    });
                                    _this.firstAsiento = true;
                                } else {
                                    _this.list.plano5 = [];
                                    _this.list.plano4 = [];
                                    _this.list.plano3 = [];
                                    _this.list.plano2 = [];
                                    _this.list.plano1 = [];
                                    _this.$nextTick(() => {
                                        _this.showPlano = false;
                                        APP.msg.error('No se pudo cargar el plano');
                                    });
                                }
                                _this.indexVenta = 0;
                                _this.limpiarVenta();
                            } else {
                                _this.showPlano = false;
                                APP.msg.error('No se cargó resultados');
                            }
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                getEmpresas: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-empresas')
                        .then(res => {
                            _this.list.empresas = _.cloneDeep(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                getSucursales: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-oficinas')
                        .then(res => {
                            _this.list.sucursales = _.cloneDeep(res.data);
                            _this.list.origenesBus = _.cloneDeep(res.data);
                            _this.list.destinosBus = _.cloneDeep(res.data);
                            _this.list.destinosPas = _.cloneDeep(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                getPVOrigenesBus: async function (Codi_OrigenBus) {
                    var _this = this;
                    await APP.rq.axios2.get(APP.base + '/base/get-puntosventa', { params: { CodiSucursal: Codi_OrigenBus } })
                        .then(res => {
                            _this.list.pvOrigenesBus = _.cloneDeep(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                getServicios: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-servicios')
                        .then(res => {
                            _this.list.servicios = _.cloneDeep(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                getTiposDoc() {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-tiposDoc')
                        .then(res => {
                            _this.list.tiposDoc = _.cloneDeep(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                hideVentas: function () {
                    this.showPlano = false;
                    appController.hideVentas();
                },
                changeTurno: function (item) {
                    this.showPlano = false;
                    this.getTurno(item, item.FechaViaje);
                },
                clear: function () {
                    var _this = this;
                    _this.firstCharge = false; //TODO
                    _this.filtro.CodiEmpresa = null;
                    _this.filtro.CodiSucursal = null;
                    _this.filtro.CodiOrigenBus = null;
                    _this.filtro.CodiPVOrigenBus = null;
                    _this.filtro.CodiDestinoBus = null;
                    _this.filtro.CodiServicio = null;
                    _this.filtro.CodiDestinoPas = null;
                    $('#txtTurno').data("DateTimePicker").clear();
                    $('#txtFecha_2').data("DateTimePicker").clear();
                    _this.filtro.Turno = '';
                    _this.filtro.Fecha = '';
                },
                getLabel: function (option) {
                    return `${option.id} - ${option.label}`
                },
                bloquearAsiento: async function (asientoSel) {
                    var _this = this;
                    // TODO: Validación 'liberarAsiento'
                    if (asientoSel.IDS !== 0) {
                        await _this.liberarAsiento(asientoSel);
                        return;
                    }
                    var input = {};
                    input.CodiProgramacion = _this.filtro.CodiProgramacion;
                    input.NroViaje = _this.filtro.NroViaje;
                    input.CodiOrigen = _this.filtro.CodiSucursal.id;
                    input.CodiDestino = _this.filtro.CodiDestinoPas.id;
                    input.NumeAsiento = asientoSel.Tipo;
                    input.FechaProgramacion = _this.filtro.Fecha;
                    input.Precio = asientoSel.PrecioVenta;
                    APP.rq.axios2.post(APP.base + '/itinerarios/bloquearAsiento', input)
                        .then(res => {
                            if (res.statusText === "OK") {
                                if (res.data !== 0) {
                                    asientoSel.IDS = res.data;
                                    asientoSel.NumeAsiento = parseFloat(asientoSel.Tipo);

                                    APP.msg.info('Asiento bloqueado');

                                    var nameCookie = 'asientoBloqueado_' + (_this.filtro.CodiProgramacion !== 0 ? _this.filtro.CodiProgramacion : _this.filtro.NroViaje) + '_' + _this.filtro.Fecha + '_' + asientoSel.Tipo;
                                    APP.util.createCookie(nameCookie, asientoSel.IDS, 7);

                                    if (!_this.firstAsiento)
                                        _this.createElementInList();
                                    _this.passSectionVentas(asientoSel.Tipo, asientoSel.PrecioNormal, asientoSel.Nivel, asientoSel.PrecioMinimo, asientoSel.PrecioMaximo);
                                    _this.firstAsiento = false;

                                    _this.list.ventas[_this.indexVenta].IsDisabled = true;

                                    $("html, body").animate({ scrollTop: $(document).height() - 770 }, 800);
                                }
                            } else {
                                APP.msg.error('No se pudo bloquear el asiento');
                            }
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                createElementInList: function () {
                    this.indexVenta = this.list.ventas.length - 1;
                    this.indexVenta++;
                    this.list.ventas.push({
                        IdCliente: 0,
                        CodiTipoDoc: null,
                        Documento: '',
                        Nombres: '',
                        ApellidoPaterno: '',
                        ApellidoMaterno: '',
                        FechaNac: '',
                        Edad: '',
                        Sexo: null,
                        Telefono: '',
                        Ruc: '',
                        RazonSocial: '',
                        Direccion: '',
                        Recoger: '',
                        Reintegro: '',
                        Observacion: '',
                        Precio: '',
                        PrecioNormal: '',
                        PrecioMin: '',
                        PrecioMax: '',
                        NroAsiento: '',
                        NivelAsiento: 0,
                        NroVenta: '',
                        NroSolicitud: '',
                        FechaVen: moment(new Date, 'DD/MM/YYYY').format("DD/MM/YYYY"),
                        Nacionalidad: '',
                        IsDisabled: false
                    });
                },
                liberarAsiento: async function (asientoSel) {
                    var _this = this;
                    await APP.rq.axios2.post(APP.base + '/itinerarios/liberarAsiento', { IDS: asientoSel.IDS })
                        .then(res => {
                            if (res.statusText === "OK") {
                                if (res.data) {
                                    asientoSel.IDS = 0;
                                    asientoSel.NumeAsiento = 0;
                                    APP.msg.info('Asiento liberado');

                                    var nameCookie = 'asientoBloqueado_' + (_this.filtro.CodiProgramacion !== 0 ? _this.filtro.CodiProgramacion : _this.filtro.NroViaje) + '_' + _this.filtro.Fecha + '_' + asientoSel.Tipo;
                                    APP.util.deleteCookie(nameCookie);

                                    if (_this.list.ventas.length === 1) {
                                        _this.indexVenta = 0;
                                        _this.list.ventas[_this.indexVenta].IdCliente = 0;
                                        _this.list.ventas[_this.indexVenta].CodiTipoDoc = null;
                                        _this.list.ventas[_this.indexVenta].Documento = '';
                                        _this.list.ventas[_this.indexVenta].Nombres = '';
                                        _this.list.ventas[_this.indexVenta].ApellidoPaterno = '';
                                        _this.list.ventas[_this.indexVenta].ApellidoMaterno = '';
                                        _this.list.ventas[_this.indexVenta].FechaNac = '';
                                        _this.list.ventas[_this.indexVenta].Edad = '';
                                        _this.list.ventas[_this.indexVenta].Sexo = null;
                                        _this.list.ventas[_this.indexVenta].Telefono = '';
                                        _this.list.ventas[_this.indexVenta].Ruc = '';
                                        _this.list.ventas[_this.indexVenta].RazonSocial = '';
                                        _this.list.ventas[_this.indexVenta].Direccion = '';
                                        _this.list.ventas[_this.indexVenta].Recoger = '';
                                        _this.list.ventas[_this.indexVenta].Reintegro = '';
                                        _this.list.ventas[_this.indexVenta].Observacion = '';
                                        _this.list.ventas[_this.indexVenta].Precio = '';
                                        _this.list.ventas[_this.indexVenta].PrecioNormal = '';
                                        _this.list.ventas[_this.indexVenta].PrecioMinimo = '';
                                        _this.list.ventas[_this.indexVenta].PrecioMaximo = '';
                                        _this.list.ventas[_this.indexVenta].NroAsiento = '';
                                        _this.list.ventas[_this.indexVenta].NivelAsiento = 0;
                                        _this.list.ventas[_this.indexVenta].NroVenta = '';
                                        _this.list.ventas[_this.indexVenta].NroSolicitud = '';
                                        _this.list.ventas[_this.indexVenta].FechaVen = moment(new Date, 'DD/MM/YYYY').format("DD/MM/YYYY");
                                        _this.list.ventas[_this.indexVenta].Nacionalidad = '';
                                        _this.list.ventas[_this.indexVenta].IsDisabled = false;
                                        _this.firstAsiento = true;
                                    } else {
                                        var auxIndex = appVueVenta.list.ventas.findIndex(x => x.NroAsiento === asientoSel.Tipo)
                                        _this.list.ventas.splice(auxIndex, 1);
                                        _this.indexVenta = auxIndex > 0 ? auxIndex - 1 : 0;
                                    }
                                }
                            } else {
                                APP.msg.error('No se pudo liberar el asiento');
                            }
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                limpiarAsientosBloqueados: async function () {
                    var _this = this;
                    var respuesta = true;
                    var partNameCookie = 'asientoBloqueado_' + (_this.filtro.CodiProgramacion !== 0 ? _this.filtro.CodiProgramacion : _this.filtro.NroViaje) + '_' + _this.filtro.Fecha + '_';

                    _this.list.tempList.forEach(async function (e) {
                        if (!isNaN(e.Tipo)) {
                            var valueCookie = APP.util.readCookie(partNameCookie + e.Tipo);
                            if (valueCookie !== null) {
                                APP.util.deleteCookie(partNameCookie + e.Tipo);
                                await APP.rq.axios2.post(APP.base + '/itinerarios/liberarAsiento', { IDS: valueCookie })
                                    .then(res => {
                                        if (res.statusText === "OK")
                                            e.NumeAsiento = 0;
                                        else
                                            return false;
                                    }).catch(APP.rq.axios_handler_error_alert);
                            }
                        }
                    });

                    return respuesta;
                },
                recorridoSectionFilter: function () {
                    var _this = this;
                    if (!_this.filtro.CodiEmpresa) {
                        $('#cboEmpresa input[type=search]').focus();
                    } else if (!_this.filtro.CodiSucursal) {
                        $('#cboSucursal input[type=search]').focus();
                    } else if (!_this.filtro.CodiOrigenBus) {
                        $('#cboOrigenBus input[type=search]').focus();
                    } else if (!_this.filtro.CodiPVOrigenBus) {
                        $('#cboPVOrigenBus input[type=search]').focus();
                    } else if (!_this.filtro.CodiDestinoBus) {
                        $('#cboDestinoBus_2 input[type=search]').focus();
                    } else if (!_this.filtro.CodiServicio) {
                        $('#cboServicio input[type=search]').focus();
                    } else if (!_this.filtro.CodiDestinoPas) {
                        $('#cboDestinoPas_2 input[type=search]').focus();
                    } else if (_this.filtro.Turno === '') {
                        $('#txtTurno').focus();
                    } else if (_this.filtro.Fecha === '') {
                        $('#txtFecha_2').focus();
                    } else {
                        appController.chargeTurnos();
                    }
                },
                recorridoSectionVentas: function () {
                    debugger;
                    var _this = this;
                    if (!_this.list.ventas[_this.indexVenta].CodiTipoDoc) {
                        $('#cboTipoDoc input[type=search]').focus();
                    }
                    else if (_this.list.ventas[_this.indexVenta].Documento === '') {
                        $('#txtDocumento').focus();
                    }
                    else if (_this.list.ventas[_this.indexVenta].Nombres === '') {
                        $('#txtNombres').focus();
                    }
                    else if (_this.list.ventas[_this.indexVenta].ApellidoPaterno === '') {
                        $('#txtApellidoPaterno').focus();
                    }
                    else if (_this.list.ventas[_this.indexVenta].ApellidoMaterno === '') {
                        $('#txtApellidoMaterno').focus();
                    }
                    else if (_this.list.ventas[_this.indexVenta].FechaNac === '') {
                        $('#txtFechaNac').focus();
                    }
                    else if (!_this.list.ventas[_this.indexVenta].Sexo) {
                        $('#cboSexo input[type=search]').focus();
                    }
                    //else if (_this.list.ventas[_this.indexVenta].Telefono === '') {
                    //    $('#txtTelefono').focus();
                    //}
                    else if (_this.list.ventas[_this.indexVenta].Recoger === '') {
                        $('#txtRecoger').focus();
                    }
                    //else if (_this.list.ventas[_this.indexVenta].Reintegro === '') {
                    //    $('#txtReintegro').focus();
                    //}
                    else if (_this.list.ventas[_this.indexVenta].NroSolicitud === '') {
                        $('#txtNroSolicitud').focus();
                    }
                    //else if (_this.list.ventas[_this.indexVenta].Ruc === '') {
                    //    $('#txtRuc').focus();
                    //}
                    //else if (_this.list.ventas[_this.indexVenta].RazonSocial === '') {
                    //    $('#txtRazonSocial').focus();
                    //}
                    //else if (_this.list.ventas[_this.indexVenta].Direccion === '') {
                    //    $('#txtDireccion').focus();
                    //}
                    //else if (_this.list.ventas[_this.indexVenta].FechaVen === '') {
                    //    $('#txtFechaVen').focus();
                    //}

                    else if (_this.list.ventas[_this.indexVenta].Nacionalidad === '') {
                        $('#txtNacionalidad').focus();
                    }
                    else if (_this.list.ventas[_this.indexVenta].Precio === '') {
                        $('#txtPrecio').focus();
                    }
                    else if (_this.list.ventas[_this.indexVenta].NroAsiento === '') {
                        $('#txtNroAsientoVenta').focus();
                    }
                    //else if (_this.list.ventas[_this.indexVenta].Observacion === '') {
                    //    $('#txtObservacion').focus();
                    //}
                    else {
                        $('#btnTipoPago').focus();
                    }
                },
                searchUser: function () {
                    var _this = this;
                    if (_this.list.ventas[_this.indexVenta].CodiTipoDoc !== null
                        && _this.list.ventas[_this.indexVenta].CodiTipoDoc.id === '1'
                        && _this.list.ventas[_this.indexVenta].Documento !== '') {
                        APP.rq.axios2.get(APP.base + '/itinerarios/consultar-usuario' + APP.util.getQueryParamByObject({
                            tipoDoc: _this.list.ventas[_this.indexVenta].CodiTipoDoc.id,
                            numeroDoc: _this.list.ventas[_this.indexVenta].Documento
                        }))
                            .then(res => {
                                if (res.data.IdCliente !== 0) {
                                    _this.list.ventas[_this.indexVenta].IdCliente = res.data.IdCliente;
                                    _this.list.ventas[_this.indexVenta].Nombres = res.data.NombreCliente;
                                    _this.list.ventas[_this.indexVenta].ApellidoPaterno = res.data.ApellidoPaterno;
                                    _this.list.ventas[_this.indexVenta].ApellidoMaterno = res.data.ApellidoMaterno;
                                    _this.list.ventas[_this.indexVenta].FechaNac = res.data.FechaNacimiento;
                                    _this.list.ventas[_this.indexVenta].Edad = res.data.Edad;
                                    _this.list.ventas[_this.indexVenta].Sexo = _this.list.sexos.find(x => x.id === res.data.Sexo);
                                    _this.list.ventas[_this.indexVenta].Telefono = res.data.Telefono;
                                    _this.list.ventas[_this.indexVenta].Ruc = res.data.RucContacto;
                                } else {
                                    if (res.data.NombreCliente && res.data.ApellidoPaterno && res.data.ApellidoPaterno) {
                                        _this.list.ventas[_this.indexVenta].Nombres = res.data.NombreCliente;
                                        _this.list.ventas[_this.indexVenta].ApellidoPaterno = res.data.ApellidoPaterno;
                                        _this.list.ventas[_this.indexVenta].ApellidoMaterno = res.data.ApellidoMaterno;
                                    } else {
                                        _this.list.ventas[_this.indexVenta].Nombres = '';
                                        _this.list.ventas[_this.indexVenta].ApellidoPaterno = '';
                                        _this.list.ventas[_this.indexVenta].ApellidoMaterno = '';
                                    }
                                    _this.list.ventas[_this.indexVenta].IdCliente = 0;
                                    _this.list.ventas[_this.indexVenta].FechaNac = '';
                                    $('#txtFechaNac').data("DateTimePicker").clear();
                                    _this.list.ventas[_this.indexVenta].Edad = '';
                                    _this.list.ventas[_this.indexVenta].Sexo = null;
                                    _this.list.ventas[_this.indexVenta].Telefono = '';
                                    _this.list.ventas[_this.indexVenta].Ruc = '';
                                }
                                _this.recorridoSectionVentas();
                            }).catch(APP.rq.axios_handler_error_alert);
                    }
                },
                searchEmpresa: function () {
                    var _this = this;
                    if (_this.list.ventas[_this.indexVenta].Ruc !== '') {
                        APP.rq.axios2.get(APP.base + '/itinerarios/consultar-empresa' + APP.util.getQueryParamByObject({
                            rucContacto: _this.list.ventas[_this.indexVenta].Ruc
                        }))
                            .then(res => {
                                if (res.data.RucCliente) {
                                    _this.list.ventas[_this.indexVenta].RazonSocial = res.data.RazonSocial;
                                    _this.list.ventas[_this.indexVenta].Direccion = res.data.Direccion;
                                }
                                else {
                                    if (res.data.RazonSocial)
                                        _this.list.ventas[_this.indexVenta].RazonSocial = res.data.RazonSocial;
                                    else
                                        _this.list.ventas[_this.indexVenta].RazonSocial = '';

                                    _this.list.ventas[_this.indexVenta].Direccion = '';
                                }
                                _this.recorridoSectionVentas();
                            }).catch(APP.rq.axios_handler_error_alert);
                    }
                },
                passSectionVentas: async function (_nroAsiento, _precioNormal, _nivelAsiento, _precioMin, _precioMax) {
                    this.list.ventas[this.indexVenta].Precio = _precioNormal;
                    this.list.ventas[this.indexVenta].PrecioNormal = _precioNormal;
                    this.list.ventas[this.indexVenta].PrecioMin = _precioMin;
                    this.list.ventas[this.indexVenta].PrecioMax = _precioMax;
                    this.list.ventas[this.indexVenta].NroAsiento = _nroAsiento;
                    this.list.ventas[this.indexVenta].NivelAsiento = _nivelAsiento;
                    this.list.ventas[this.indexVenta].NroVenta = 'N° ' + this.Correlativo;
                    this.recorridoSectionVentas();
                },
                clearSectionVentas: function () {
                    this.list.ventas[this.indexVenta].NroAsiento = '';
                    this.list.ventas[this.indexVenta].NroVenta = '';
                },
                getCorrelativo: async function (_CodiEmpresa) {
                    var axuNroVenta = '';
                    var input = {};
                    input.CodiEmpresa = _CodiEmpresa;
                    await APP.rq.axios2.post(APP.base + '/itinerarios/busca-correlativo', input)
                        .then(res => {
                             axuNroVenta = String(res.data.SerieBoleto) + '-' + String(res.data.NumeBoleto);
                        }).catch(APP.rq.axios_handler_error_alert);
                    return axuNroVenta;
                },
                saveUser: function () {
                    var _this = this;
                    var listado = [];

                    _this.list.ventas.forEach(function (obj) {
                        var input = {};
                        input.IdCliente = obj.IdCliente;
                        input.TipoDoc = obj.CodiTipoDoc.id;
                        input.NumeroDoc = obj.Documento;
                        input.NombreCliente = obj.Nombres;
                        input.ApellidoPaterno = obj.ApellidoPaterno;
                        input.ApellidoMaterno = obj.ApellidoMaterno;
                        input.FechaNacimiento = obj.FechaNac;
                        input.Edad = obj.Edad;
                        input.Direccion = obj.Direccion;
                        input.Telefono = obj.Telefono;
                        input.Email = ''; //TODO
                        input.RucContacto = obj.Ruc;
                        input.Sexo = obj.Sexo.id;

                        listado.push(input);
                    });

                    APP.rq.axios2.post(APP.base + '/itinerarios/grabar-pasajero', listado)
                        .then(res => {
                            //APP.msg.info(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                bgcVentaBus: function (FechaVenta, Color, NumeAsiento) {
                    if (FechaVenta) {
                        return { 'background-color': Color };
                    } else {
                        if (NumeAsiento !== 0) return { 'background-color': '#ffc36d' };
                    }
                },
                iconVentaBus: function (Sexo, Edad) {
                    if (Edad < 0 && Edad <= 18)
                        return Sexo === 'F' ? '/wwwroot/plugins/images/users/MUJER.png' : '/wwwroot/plugins/images/users/NINO.png';
                    else
                        return Sexo === 'F' ? '/wwwroot/plugins/images/users/MUJER.png' : '/wwwroot/plugins/images/users/HOMBRE.png';
                },
                showNombrePasajero: function (FechaVenta, Nombres, ApellidoPaterno, ApellidoMaterno) {
                    if (FechaVenta) {
                        return `${Nombres} ${ApellidoPaterno} ${ApellidoMaterno}`
                    }
                },
                nextStep: function (code) {
                    switch (code) {
                        case 1: if (!$("#panelWrapperV").hasClass("in")) $('#btnDesplegar').click(); $('#cboSucursal input[type=search]').focus(); break;
                        case 2: $('#cboOrigenBus input[type=search]').focus(); break;
                        case 3: this.$nextTick(() => { $('#cboPVOrigenBus input[type=search]').focus(); }); break;
                        case 4: $('#cboDestinoBus_2 input[type=search]').focus(); break;
                        case 5: $('#cboServicio input[type=search]').focus(); break;
                        case 6: $('#cboDestinoPas_2 input[type=search]').focus(); break;
                        case 7: $('#txtTurno').focus(); break;
                        case 8: this.filtro.Turno = $('#txtTurno').val(); $('#txtFecha_2').focus(); break;
                        case 9: this.filtro.Fecha = $('#txtFecha_2').val(); $('#btnActualizar').focus(); this.nextStep(10); break;
                        default: this.recorridoSectionFilter();
                    }
                },
                showTipoPago: function () {
                    var _this = this;
                    var input = {};
                    input.CodiEmpresa = _this.filtro.CodiEmpresa.id;
                    input.CodiOrigen = _this.filtro.CodiOrigenBus.id;
                    input.CodiDestino = _this.filtro.CodiDestinoPas.id;
                    input.CodiProgramacion = _this.filtro.CodiProgramacion;
                    input.FlagVenta = _this.pickedBusVenta;
                    input.FechaViaje = _this.filtro.Fecha;
                    input.HoraViaje = _this.filtro.Turno;
                    input.CodiServicio = _this.filtro.CodiServicio.id;
                    input.NomDestino = _this.filtro.CodiDestinoPas.label;
                    input.NomServicio = _this.filtro.CodiServicio.label;
                    input.NomOrigen = _this.filtro.CodiSucursal.label;
                    input.NroViaje = _this.filtro.NroViaje;
                    input.FechaProgramacion = _this.objTurno.FechaProgramacion;
                    input.HoraProgramacion = _this.objTurno.HoraProgramacion;
                    input.CodiBus = _this.objPlano.CodiBus;
                    input.CodiSucursal = _this.filtro.CodiOrigenBus.id;
                    input.CodiRuta = _this.filtro.CodiDestinoBus.id;

                    _this.saveUser();

                    appController.showTipoPago(_this.list.embarques, _this.list.arribos, input, _this.list.ventas);
                },
                showRegistrarParentesco: function () {
                    var _this = this;
                    appController.showRegistrarInfante(_this.list.tiposDoc, _this.list.sexos);
                },
                leftSlider: function () {
                    if (this.indexVenta > 0)
                        this.indexVenta--;
                    $('#bannerVentas').removeClass().addClass('col-md-10 slideOutLeft animated').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function () {
                        $(this).removeClass().addClass('col-md-10');
                    });
                },
                rightSlider: function () {
                    if (this.indexVenta < this.list.ventas.length - 1)
                        this.indexVenta++;
                    $('#bannerVentas').removeClass().addClass('col-md-10 slideOutRight animated').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function () {
                        $(this).removeClass().addClass('col-md-10');
                    });
                },
                setDateAndCalcYears: function (dateString) {
                    if (dateString) {
                        this.list.ventas[this.indexVenta].FechaNac = dateString;
                        var auxFechaNac = moment(dateString, 'DD/MM/YYYY');
                        this.list.ventas[this.indexVenta].Edad = '' + moment().diff(auxFechaNac, 'years');
                        this.recorridoSectionVentas();
                    }
                    else
                        this.list.ventas[this.indexVenta].Edad = '';
                },
                limpiarVenta: function () {
                    var _this = this;
                    _this.list.ventas = [];
                    this.list.ventas.push({
                        IdCliente: 0,
                        CodiTipoDoc: null,
                        Documento: '',
                        Nombres: '',
                        ApellidoPaterno: '',
                        ApellidoMaterno: '',
                        FechaNac: '',
                        Edad: '',
                        Sexo: null,
                        Telefono: '',
                        Ruc: '',
                        RazonSocial: '',
                        Direccion: '',
                        Recoger: '',
                        Reintegro: '',
                        Observacion: '',
                        Precio: '',
                        PrecioNormal: '',
                        PrecioMin: '',
                        PrecioMax: '',
                        NroAsiento: '',
                        NivelAsiento: 0,
                        NroVenta: '',
                        NroSolicitud: '',
                        FechaVen: moment(new Date, 'DD/MM/YYYY').format("DD/MM/YYYY"),
                        Nacionalidad: '',
                        IsDisabled: false
                    });
                },
                validateRangePrice: function () {
                 var _this = this;
                    var normal = _this.list.ventas[_this.indexVenta].PrecioNormal;
                    var actual = _this.list.ventas[_this.indexVenta].Precio;
                    var max = parseInt(_this.list.ventas[_this.indexVenta].PrecioMax);
                    var min = parseInt(_this.list.ventas[_this.indexVenta].PrecioMin);

                    if (actual > max) {
                        APP.msg.info('EL PRECIO NO PUEDE EXEDER A ' + max);
                        _this.list.ventas[_this.indexVenta].Precio = normal;
                    } else if (actual < min) {
                        APP.msg.info('EL PRECIO NO PUEDE SER MENOR A ' + min);
                        _this.list.ventas[_this.indexVenta].Precio = normal;
                    }
                },
                validateTxtNroAsientoVenta: function () {
                    var auxResponse = false;

                    if (this.list.ventas[this.indexVenta].NroAsiento) {
                        // Dar formato al 'NroAsiento'
                        this.list.ventas[this.indexVenta].NroAsiento = formatToChar2(this.list.ventas[this.indexVenta].NroAsiento);

                        for (const obj of this.list.tempList) {
                            if (!isNaN(obj.Tipo) && !obj.FechaVenta && obj.NumeAsiento === 0) {
                                if (this.list.ventas[this.indexVenta].NroAsiento === obj.Tipo) {
                                    auxResponse = true;
                                    document.getElementById('btnAsiento_' + obj.Tipo).click();
                                    break;
                                }
                            }
                        }

                    }
                    
                    if (auxResponse)
                        $('#cboTipoDoc input[type=search]').focus();
                    else {
                        if (!this.list.ventas[this.indexVenta].NroAsiento)
                            document.getElementById('txtNroAsientoVenta').blur();
                        else
                            document.getElementById('txtNroAsientoVenta').focus();
                    }
                }
            },
            computed: {
                setCadenaEmbarques: function () {
                    var _this = this;
                    var cadenaEmbarques = '';
                    for (i = 0; i < _this.list.embarques.length; i++) {
                        if (i !== _this.list.embarques.length - 1)
                            cadenaEmbarques += _this.list.embarques[i].Lugar + ', ' + _this.list.embarques[i].Hora + ' - ';
                        else
                            cadenaEmbarques += _this.list.embarques[i].Lugar + ', ' + _this.list.embarques[i].Hora;
                    }
                    return cadenaEmbarques;
                },
                bloquearPago: function () {
                    var _this = this;
                    return (
                        _this.list.ventas[_this.indexVenta].CodiTipoDoc !== null &&
                        _this.list.ventas[_this.indexVenta].Documento.length >=8 &&
                        _this.list.ventas[_this.indexVenta].Nombres !== '' &&
                        _this.list.ventas[_this.indexVenta].ApellidoPaterno !== '' &&
                        _this.list.ventas[_this.indexVenta].ApellidoMaterno !== '' &&
                        _this.list.ventas[_this.indexVenta].FechaNac.length === 10 &&
                        _this.list.ventas[_this.indexVenta].Edad > 0 &&
                        _this.list.ventas[_this.indexVenta].Sexo !== null &&
                        _this.list.ventas[_this.indexVenta].NroAsiento !== ''
                    );
                }
            },
            watch: {
                'filtro.CodiEmpresa': function (newVal, oldVal) {
                    if (!this.firstCharge)
                        this.nextStep(1);
                },
                'filtro.CodiSucursal': function (newVal, oldVal) {
                    if (!this.firstCharge)
                        this.nextStep(2);
                },
                'filtro.CodiOrigenBus': function (newVal, oldVal) {
                    if (newVal) {
                        if (String(newVal.id).replace(/\s/g, '').length > 0 && typeof oldVal !== 'string') {
                            this.getPVOrigenesBus(newVal.id);
                            this.filtro.CodiPVOrigenBus = null;
                        }
                    } else {
                        this.list.pvOrigenesBus = [];
                        this.filtro.CodiPVOrigenBus = null;
                    }
                    if (!this.firstCharge)
                        this.nextStep(3);
                },
                'filtro.CodiDestinoBus': function (newVal, oldVal) {
                    if (!this.firstCharge)
                        this.nextStep(5);
                },
                'filtro.CodiServicio': function (newVal, oldVal) {
                    if (!this.firstCharge)
                        this.nextStep(6);
                },
                'filtro.CodiDestinoPas': function (newVal, oldVal) {
                    if (!this.firstCharge)
                        this.nextStep(7);
                },
                'filtro.Fecha': function (newVal, oldVal) {
                    if (newVal) {
                        if (String(newVal.id).replace(/\s/g, '').length > 0) {
                            var _nombreDia = moment(newVal, 'DD/MM/YYYY').format('dddd');
                            document.getElementById('lblNameDay_Fecha').innerHTML = 'DÍA: ' + _nombreDia.toUpperCase();
                        }
                    } else {
                        document.getElementById('lblNameDay_Fecha').innerHTML = 'DÍA:';
                    }
                },
                'list.ventas': {
                    handler: function (after, before) {
                        var _this = this;
                        var codiTipoDoc = after[_this.indexVenta].CodiTipoDoc;
                        var Sexo = after[_this.indexVenta].Sexo;
                        if (codiTipoDoc) {
                            id = codiTipoDoc.id;
                            if (id === "1") {
                                //DNI
                                _this.mask.documento = "#".repeat(8);
                                _this.list.ventas[_this.indexVenta].Nacionalidad = 'PERUANA';
                                //_this.recorridoSectionVentas();
                            }
                            else if (id === "4") {
                                //PASAPORTE
                                _this.mask.documento = "#".repeat(9);
                                _this.list.ventas[_this.indexVenta].Nacionalidad = '';
                                //_this.recorridoSectionVentas();
                            }
                            else if (id === "7") {
                                //CARNET EXTRANJERIA
                                _this.mask.documento = "N".repeat(12);
                                _this.list.ventas[_this.indexVenta].Nacionalidad = '';
                                //_this.recorridoSectionVentas();
                            }
                        }

                        //if (Sexo) {
                        //    _this.$refs.refTelefono.focus();
                        //}

                        this.slider = this.list.ventas.length;
                    },
                    deep: true,
                }
            }
        });

        var appVueTipoPago = new Vue({
            el: '#appVueTipoPago',
            data: {
                tipoPago: '',
                tarjeta: null,
                numeroTarjeta: '',
                distrito: null,
                direccion: '',
                observacion: '',
                embarque: null,
                arribo: null,
                list: {
                    tiposPago: [],
                    distritos: [],
                    tarjetas: [],
                    embarques: [],
                    arribos: [],
                    ventas: []
                },
                ticketVenta: {},
                sumaTotal: 0,
                efectivo: '',
                tarjetaCant: '',
                cantAsientos: 0
            },
            mounted: function () {
                this.getTipoPago();
                this.getTarjetasCredito();
                this.getCuidades();
            },
            methods: {
                show: function (embarques, arribos, ticketVenta, listaVentas) {
                    this.limpiarCampos();
                    this.list.embarques = embarques;
                    this.list.arribos = embarques; //Test >= Modificar con arribos
                    this.ticketVenta = ticketVenta;
                    this.list.ventas = listaVentas;
                    this.sumaTotal = _.sumBy(this.list.ventas, 'Precio');
                    this.cantAsientos = this.list.ventas.length;
                    $('#appVueTipoPago').modal('show');
                    this.$refs.select.$el.focus();
                },
                getTipoPago: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-tipoPago')
                        .then(res => {
                            _this.list.tiposPago = _.cloneDeep(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                getTarjetasCredito: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-tarjetasCredito')
                        .then(res => {
                            _this.list.tarjetas = _.cloneDeep(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                getCuidades: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-cuidades')
                        .then(res => {
                            _this.list.distritos = _.cloneDeep(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                saveVenta: async function () {
                    debugger;
                    var _this = this;
                    // Limpiar 'AsientosBloqueados'
                    var limpiarAB = await appVueVenta.limpiarAsientosBloqueados(appVueVenta.list.tempList);
                    if (!limpiarAB) return;

                    var boletos = '';
                    var listado = [];
                    for (const objVenta of _this.list.ventas) { //Todo
                        var input = {};
                        input.CodiEmpresa = _this.ticketVenta.CodiEmpresa;
                        input.CodiOrigen = _this.ticketVenta.CodiOrigen;
                        input.CodiDestino = _this.ticketVenta.CodiDestino;
                        input.CodiProgramacion = _this.ticketVenta.CodiProgramacion;
                        input.RucCliente = objVenta.Ruc;
                        input.NomEmpresaRuc = objVenta.RazonSocial;
                        input.DirEmpresaRuc = objVenta.Direccion;
                        input.NumeAsiento = objVenta.NroAsiento;
                        input.FlagVenta = _this.ticketVenta.FlagVenta;
                        input.PrecioVenta = objVenta.Precio;
                        input.Nombre = objVenta.Nombres + ',' + objVenta.ApellidoPaterno + ',' + objVenta.ApellidoMaterno;
                        input.Edad = objVenta.Edad;
                        input.Telefono = objVenta.Telefono;
                        input.Dni = objVenta.Documento;
                        input.TipoDocumento = formatToChar2(objVenta.CodiTipoDoc.id);
                        input.Sexo = objVenta.Sexo.id;
                        input.TipoPago = _this.tipoPago;//To Do
                        input.FechaViaje = _this.ticketVenta.FechaViaje;
                        input.HoraViaje = _this.ticketVenta.HoraViaje;
                        input.CodiServicio = _this.ticketVenta.CodiServicio;
                        input.CodiEmbarque = _this.embarque.CodiPuntoVenta;//
                        input.CodiArribo = _this.arribo.CodiPuntoVenta;//To Do
                        input.Hora_Embarque = _this.embarque.Hora;//To Do
                        input.NivelAsiento = objVenta.NivelAsiento;
                        input.NomDestino = _this.ticketVenta.NomDestino;
                        input.NomServicio = _this.ticketVenta.NomServicio;
                        input.NomOrigen = _this.ticketVenta.NomOrigen;
                        input.Nacionalidad = objVenta.Nacionalidad;
                        input.NroViaje = _this.ticketVenta.NroViaje;
                        input.FechaProgramacion = _this.ticketVenta.FechaProgramacion;
                        input.HoraProgramacion = _this.ticketVenta.HoraProgramacion;
                        input.CodiBus = _this.ticketVenta.CodiBus;
                        input.CodiSucursal = _this.ticketVenta.CodiSucursal;
                        input.CodiRuta = _this.ticketVenta.CodiRuta;
                        input.CodiTarjetaCredito = (_this.tarjeta !==null) ? _this.tarjeta.id : '';
                        input.NumeTarjetaCredito = _this.numeroTarjeta;
                        input.CodiZona = (_this.distrito !== null) ? _this.distrito : '';
                        input.Direccion = (_this.direccion !== '') ? _this.direccion : '';
                        input.Observacion = (_this.observacion !== '') ? _this.observacion : '';
                        input.Credito = (parseFloat(_this.tarjetaCant === '' ? 0 : _this.tarjetaCant) / parseFloat(_this.cantAsientos));

                        listado.push(input);
                    };
                    await APP.rq.axios.post(APP.base + '/itinerarios/grabar-venta', listado)
                        .then(async res => {
                            boletos = res.data;

                            if (await APP.msg.ShowSaveAfterSale('BOLETOS VENDIDOS:', boletos)) {
                                $("#appVueTipoPago").modal('hide');
                                appController.chargeTurnos();
                            }

                        }).catch(APP.rq.axios_handler_error_alert);
                },
                limpiarCampos: function () {
                    var _this = this;
                    _this.tipoPago = '0';
                    _this.distrito = null;
                    _this.tarjeta = null;
                    _this.embarque = null;
                    _this.arribo = null;
                },
                recorridoSectionTipoPagos: function () {
                    debugger;
                    var _this = this;
                    if (_this.computedTipoPago === '') {
                        $('#cboTipoPagoTP input[type=search]').focus();
                    }
                    else if (_this.tipoPago === '03') {
                        if (_this.tarjeta === null || _this.tarjeta === '') {
                            $('#cboTipoTP input[type=search]').focus();
                        } else if (_this.numeroTarjeta === '') {
                            $('#txtNumeroTP').focus();
                        } else if (_this.embarque === null || _this.embarque === '') {
                            $('#cboEmbarqueTP input[type=search]').focus();
                        } else if (_this.arribo === null || _this.embarque === '') {
                            $('#cboArriboTP input[type=search]').focus();
                        }
                    }
                    else if (_this.tipoPago === '04') {
                        if (_this.distrito === null || _this.distrito === '') {
                            $('#cboDistritoTP input[type=search]').focus();
                        } else if (_this.direccion === '') {
                            $('#txtDireccionTP').focus();
                        } else if (_this.observacion === '') {
                            $('#txtObservTP').focus();
                        } else if (_this.embarque === null || _this.embarque === '') {
                            $('#cboEmbarqueTP input[type=search]').focus();
                        } else if (_this.arribo === null || _this.embarque === '') {
                            $('#cboArriboTP input[type=search]').focus();
                        }
                    }
                    else if (_this.tipoPago === '02') {
                        if (_this.tarjeta === null || _this.tarjeta === '') {
                            $('#cboTipoTargetaTP input[type=search]').focus();
                        } else if (_this.tarjetaCant === '') {
                            $('#txtTtarjetaCantTP').focus();
                        } else if (_this.efectivo === '') {
                            $('#txtEfectivoTP').focus();
                        } else if (_this.embarque === null || _this.embarque === '') {
                            $('#cboEmbarqueTP input[type=search]').focus();
                        } else if (_this.arribo === null || _this.embarque === '') {
                            $('#cboArriboTP input[type=search]').focus();
                        }
                    }
                    else if (_this.embarque === null || _this.embarque === '') {
                        $('#cboEmbarqueTP input[type=search]').focus();
                    }
                    else if (_this.arribo === null || _this.embarque === '') {
                        $('#cboArriboTP input[type=search]').focus();
                    } else {
                        $('#btnSaveVentaTipoPago').focus();
                    }
                }
            },
            computed: {
                computedTipoPago: {
                    get: function () {
                        if (this.list.tiposPago.length > 0 && this.list.tiposPago.find(x => x.id === this.tipoPago))
                            return this.list.tiposPago.find(x => x.id === this.tipoPago)
                    },
                    set: function (value) {
                        if (value !== '' && value !== null) {
                            if (this.list.tiposPago.find(x => x.id === value.id))
                                this.tipoPago = value.id;
                        } else {
                            this.tipoPago = '';
                        }
                    }
                },
                filledCampos: function () {
                    var _this = this;
                    switch (this.tipoPago) {
                        case '03': return _this.tarjeta && _this.numeroTarjeta && _this.embarque && _this.arribo;
                        case '01': return _this.embarque && _this.arribo;
                        case '04': return _this.distrito && _this.direccion && _this.observacion && _this.embarque && _this.arribo;
                        default: return false;
                    }
                }
            },
            watch: {

            }
        });

        var appRegistrarInfante = new Vue({
            el: '#appRegistrarInfante ',
            data: {
                CodiTipoDoc: null,
                Documento: '',
                Nombres: '',
                ApellidoPaterno: '',
                ApellidoMaterno: '',
                FechaNac : '',
                Edad: '',
                Sexo: '',
                parentesco : '',
                list: {
                    tipoDoc: [],
                    parentesco: [],
                    sexos: [],
                    parentesco: []
                },
                mask: {
                    documento: ''
                },
            },
            mounted: function () {
                this.getParentesco();
            },
            methods: {
                show: function (_TipoDoc, _listSexos) {
                    this.limpiarCampos();
                    this.list.tipoDoc = _TipoDoc;
                    this.list.sexos = _listSexos;
                    $('#appRegistrarInfante').modal('show');
                },
                getParentesco: function () {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-parentesco')
                        .then(res => {
                            _this.list.parentesco = _.cloneDeep(res.data);
                        }).catch(APP.rq.axios_handler_error_alert);
                },
                limpiarCampos: function () {
                    var _this = this;
                    _this.CodiTipoDoc = null;
                    _this.Documento = '',
                    _this.Nombres = '',
                    _this.ApellidoPaterno = '',
                    _this.ApellidoMaterno = '',
                    _this.FechaNac = '',
                    _this.Edad =  '',
                    _this.Sexo = '',
                    _this.parentesco = ''
                    //_this.list = [];
                },
                setDateAndCalcYears: function (dateString) {
                    if (dateString) {
                        this.FechaNac = dateString;
                        var auxFechaNac = moment(dateString, 'DD/MM/YYYY');
                        this.Edad = '' + moment().diff(auxFechaNac, 'years');
                        this.recorridoSectionParentesco();
                    }
                    else
                        this.Edad = '';
                },
                recorridoSectionParentesco: function () {
                    var _this = this;
                    if (_this.CodiTipoDoc === null) {
                        $('#cboTipoDocRA input[type=search]').focus();
                    }
                    else if (_this.Documento === '') {
                        $('#txtDocumentoRA').focus();
                    }
                    else if (_this.Nombres === '') {
                        $('#txtNombresRA').focus();
                    }
                    else if (_this.ApellidoPaterno === '') {
                        $('#txtApellidoPaternoRA').focus();
                    }
                    else if (_this.ApellidoMaterno === '') {
                        $('#txtApellidoMaternoRA').focus();
                    }
                    else if (_this.FechaNac === '') {
                        $('#txtFechaNacRA').focus();
                    }
                    else if (_this.Sexo === '') {
                        $('#cboSexoRA input[type=search]').focus();
                    }
                    else if (_this.parentesco === '') {
                        $('#cboParentescoRA input[type=search]').focus();
                    }
                    else {
                        $('#btnRegistrarAconpaniante').focus();
                    }
                }
            },
            computed: {

            },
            watch: {

            }
        });

    </script>
}
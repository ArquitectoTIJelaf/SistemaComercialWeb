@using SisComWeb.Aplication.Helpers
@{
    var usuario = DataSession.UsuarioLogueado;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" type="image/png" sizes="16x16" href="~/favicon.ico">
    <title>SisComWeb - @ViewBag.Title</title>
    <link href="~/wwwroot/statics/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/wwwroot/plugins/bower_components/toast-master/css/jquery.toast.css" rel="stylesheet" />
    <link href="~/wwwroot/statics/css/animate.css" rel="stylesheet">
    <link href="~/wwwroot/plugins/bower_components/sidebar-nav/dist/sidebar-nav.min.css" rel="stylesheet" />
    <link href="~/wwwroot/statics/css/style.css" rel="stylesheet">
    <link href="~/wwwroot/statics/css/colors/blue-dark.css" rel="stylesheet">
    <link href="~/wwwroot/statics/css/custom-style.css" rel="stylesheet">
    <link href="~/wwwroot/plugins/bower_components/bootrstrap-datetimepicker/bootstrap-datetimepicker.min.css" rel="stylesheet">
    <link href="~/wwwroot/plugins/bower_components/sweetalert/sweetalert.css" rel="stylesheet">
    <link href="~/wwwroot/plugins/bower_components/jquery-ui/jquery-ui.css" rel="stylesheet" />
    @RenderSection("styles", required: false)
    <script type="text/javascript">
        var main_globals = {};
        main_globals.virtualPath = "@HttpContext.Current.Request.ApplicationPath";
        main_globals.Path = "@HttpContext.Current.Request.Path";
        main_globals.AbsolutePath = "@HttpContext.Current.Request.Url.AbsolutePath";
        main_globals.Query = "@HttpContext.Current.Request.Url.Query";
        main_globals.PathAndQuery = "@HttpContext.Current.Request.Url.PathAndQuery";
        main_globals.flagDevelop = JSON.parse("true".toLowerCase());
    </script>
</head>
<body class="fix-header">
    <div class="preloader">
        <svg class="circular" viewBox="25 25 50 50">
            <circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="2" stroke-miterlimit="10" />
        </svg>
    </div>
    <div id="wrapper">
        @Html.Partial("_LayoutHeader")
        @*@Html.Partial("_LayoutSidebar")*@
        <div id="page-wrapper">
            <div class="container-fluid">
                @RenderBody()
            </div>
            @Html.Partial("_LayoutFooter")
        </div>
    </div>
    @Scripts.Render("~/bundles/js")
    <script src="~/wwwroot/plugins/bower_components/signalR/jquery.signalR-2.4.0.min.js"></script>
    <script src="~/signalr/hubs"></script>
    @{
        var urlImprimirBoleto = System.Configuration.ConfigurationManager.AppSettings["urlImprimirBoleto"];
    }
    <script>

        var Usuario = '@usuario';
        var UrlImprimirBoleto = '@urlImprimirBoleto';
        var ValSetInt_MensajeriaInstantanea = 0;

        var ClientSignalR = {};
        ClientSignalR.NroViaje = '';
        ClientSignalR.FechaProgramacion = '';
        ClientSignalR.NroAsiento = '';
        ClientSignalR.ArregloNroAsientos = [];
        ClientSignalR.VentaResponse = {};
        ClientSignalR.Owner = false;


        // SignalR
        $(function () {

            var notification = $.connection.notificationHub;

            notification.client.bloquearAsiento = function (nroViaje, fechaProgramacion, nroAsiento) {
                if (String(appVueVenta.filtro.NroViaje) === nroViaje && appVueVenta.objTurno.FechaProgramacion === fechaProgramacion && !ClientSignalR.Owner) {
                    appVueVenta.signalR_BloquearAsiento(nroAsiento);
                }
                ClientSignalR.Owner = false;
            };

            notification.client.liberarAsiento = function (nroViaje, fechaProgramacion, nroAsiento) {
                if (String(appVueVenta.filtro.NroViaje) === nroViaje && appVueVenta.objTurno.FechaProgramacion === fechaProgramacion && !ClientSignalR.Owner) {
                    appVueVenta.signalR_LiberarAsiento(nroAsiento);
                }
                ClientSignalR.Owner = false;
            };

            notification.client.liberarArregloAsientos = function (nroViaje, fechaProgramacion, arregloNroAsientos) {
                if (String(appVueVenta.filtro.NroViaje) === nroViaje && appVueVenta.objTurno.FechaProgramacion === fechaProgramacion && !ClientSignalR.Owner) {
                    appVueVenta.signalR_LiberarArregloAsientos(arregloNroAsientos);
                }
                ClientSignalR.Owner = false;
            };

            notification.client.actualizarTurnoPlano = function (nroViaje, fechaProgramacion, ventaResponse) {
                if (String(appVueVenta.filtro.NroViaje) === nroViaje && appVueVenta.objTurno.FechaProgramacion === fechaProgramacion && !ClientSignalR.Owner) {
                    if (ventaResponse) {
                        if (!appVueVenta.filtro.CodiProgramacion && !isNaN(ventaResponse.CodiProgramacion))
                            appVueVenta.filtro.CodiProgramacion = parseInt(ventaResponse.CodiProgramacion);

                        appVueVenta.signalR_ActualizarTurnoPlano(ventaResponse.ListaVentasRealizadas);
                    }
                }
                ClientSignalR.Owner = false;
            };

            $.connection.hub.start().done(function () {
                $('#btnHiddenBloquearAsiento').click(function () {
                    notification.server.bloquearAsiento(ClientSignalR.NroViaje, ClientSignalR.FechaProgramacion, ClientSignalR.NroAsiento);
                });

                $('#btnHiddenLiberarAsiento').click(function () {
                    notification.server.liberarAsiento(ClientSignalR.NroViaje, ClientSignalR.FechaProgramacion, ClientSignalR.NroAsiento);
                });

                $('#btnHiddenLiberarArregloAsientos').click(function () {
                    notification.server.liberarArregloAsientos(ClientSignalR.NroViaje, ClientSignalR.FechaProgramacion, ClientSignalR.ArregloNroAsientos);
                });

                $('#btnHiddenActualizarTurnoPlano').click(function () {
                    notification.server.actualizarTurnoPlano(ClientSignalR.NroViaje, ClientSignalR.FechaProgramacion, ClientSignalR.VentaResponse);
                });
            });

            $.connection.hub.logging = true;

        });


        // Vue JS
        var appVueHeader = new Vue({
            el: "#appVueHeader",
            data: {
                mensaje: '',
                fixedHeader: true,
                menuItems: [
                    {
                        id: 0,
                        name: 'General',
                        children: [{ id: 0, name: 'Cambio de Horario en Lote (Ctrl+F7)' }, { id: 1, name: 'Modificación Boletos (F9)' }]
                    },
                    {
                        id: 1,
                        name: 'Ubicación'
                    },
                    {
                        id: 2,
                        name: 'Cta Cte de Ventas'
                    },
                    {
                        id: 3,
                        name: 'Utilitarios',
                        children: [{ id: 0, name: 'Nota de Crédito' }]
                    }
                ]
            },
            mounted: function () {
                var _this = this;

                // class 'ColorBlue'
                _this.setClassColorBlueToBorderBottom();

                //setInterval 'MensajeriaInstantanea'
                ValSetInt_MensajeriaInstantanea = setInterval(function () {
                    _this.startMensajeriaInstantanea();
                }, 2500);

                $('.dropdown-submenu a.test').on("click", function (e) {
                    $(this).next('ul').toggle();
                    e.stopPropagation();
                    e.preventDefault();
                });
            },
            methods: {
                startMensajeriaInstantanea: async function () {
                    var _this = this;

                    // clearInterval 'MensajeriaInstantanea'
                    clearInterval(ValSetInt_MensajeriaInstantanea);

                    var input = {};
                    input.CodiUsuario = Usuario.CodiUsuario;
                    input.Fecha = moment().format('DD/MM/YYYY');
                    input.Tipo = '1';
                    input.CodiSucursal = Usuario.CodiSucursal;
                    input.CodiPventa = Usuario.CodiPuntoVenta;

                    // Obtener 'Mensaje'
                    await APP.rq.axios2.post(APP.base + '/base/obtenerMensaje', input)
                        .then(async function (res) {
                            if (res.data.EsCorrecto) {
                                appVueMensajeria.show(res.data.Valor.Mensaje);

                                await deferredModal($('#appVueMensajeria'), false).done(function () {
                                    // Continue
                                });

                                // Eliminar 'Mensaje'
                                await APP.rq.axios2.post(APP.base + '/base/eliminarMensaje', res.data.Valor);
                            }
                        })

                    // setInterval 'MensajeriaInstantanea'
                    ValSetInt_MensajeriaInstantanea = setInterval(function () {
                        _this.startMensajeriaInstantanea();
                    }, 2500);
                },
                setClassColorBlueToBorderBottom: function () {
                    var elements = document.getElementsByClassName("borderBottom");
                    if (elements) {
                        for (var i = 0; i < elements.length; i++) {
                            elements[i].addEventListener("click", function () {
                                var current = document.getElementsByClassName("colorBlue");
                                current[0].className = current[0].className.replace(" colorBlue", "");
                                this.className += " colorBlue";
                            });
                        }
                    }
                },
                showLiquidacion: function () {
                    appVueLiquidacion.show();
                },
                setSelectedItem(item, child) {
                    $('.dropdown-submenu a.test').next('ul').toggle();
                    switch (item) {
                        case 0: // General
                            {
                                switch (child) {
                                    case 0: appVuePaseLote.show(); break;
                                    case 1: appVueModificacionBoleto.show(); break;
                                };
                            };
                            break;
                        case 1: break; // Ubicación
                        case 2: break; // Cta Cte de Ventas
                        case 3:
                            {
                                switch (child) {
                                    case 0: appController.showNotaCredito(); break;
                                };
                            };
                            break;
                    }
                }
            },
            watch: {
                'fixedHeader': function (newVal) {
                    if (newVal)
                        document.getElementById("page-wrapper").classList.remove("noFixed");
                    else
                        document.getElementById("page-wrapper").classList.add("noFixed");
                }
            }
        });

        var appVueMensajeria = new Vue({
            el: "#appVueMensajeria",
            data: {
                mensaje: ''
            },
            methods: {
                show: function (_Mensaje) {
                    this.mensaje = _Mensaje;
                    $('#appVueMensajeria').modal('show');
                },
                close: function () {
                    $('#appVueMensajeria').modal('hide');
                }
            }
        });

        var appVueLiquidacion = new Vue({
            el: "#appVueLiquidacion",
            data: {
                filtro: {
                    codEmpresa: '',
                    codSucursal: '',
                    fecha: moment().format('DD/MM/YYYY'),
                    codPuntVenta: '',
                    codUsuario: '0'
                },
                list: {
                    empresas: [],
                    sucursales: [],
                    puntosVenta: [],
                    usuarios: []
                },
                objLiquidacion: {}
            },
            methods: {
                show: function () {
                    this.setData();
                    $('#appVueLiquidacion').modal('show');
                },
                setData: async function () {
                    let _this = this;

                    if (!_this.filtro.codEmpresa) {
                        await _this.getEmpresas();
                    }

                    if (!_this.filtro.codSucursal) {
                        await _this.getSucursales();
                    }

                    if (!_this.filtro.codPuntVenta) {
                        await _this.getPuntosVenta();
                    }

                    if (_this.filtro.codUsuario === '0') {
                        await _this.getUsuarios(Usuario.Nombre);
                    }

                    _this.$nextTick(() => {
                        _this.filtro.codEmpresa = String(Usuario.CodiEmpresa);
                        _this.filtro.codSucursal = String(Usuario.CodiSucursal);
                        _this.filtro.codPuntVenta = String(Usuario.CodiPuntoVenta);
                        _this.filtro.codUsuario = String(Usuario.CodiUsuario);
                        _this.getLiquidacion();
                    })
                },
                getEmpresas: async function () {
                    let _this = this;
                    await APP.rq.axios2.get(APP.base + '/base/get-empresas')
                        .then(res => {
                            if (res.data.Estado) {
                                _this.list.empresas = _.cloneDeep(res.data.Valor);
                            }
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                getSucursales: async function() {
                    let _this = this;
                    await APP.rq.axios2.get(APP.base + '/base/get-oficinas')
                        .then(res => {
                            if (res.data.Estado) {
                                _this.list.sucursales = _.cloneDeep(res.data.Valor);
                            }
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                getPuntosVenta: async function () {
                    let _this = this;
                    await APP.rq.axios2.get(APP.base + '/base/get-puntosventa')
                        .then(res => {
                            if (res.data.Estado)
                                _this.list.puntosVenta = _.cloneDeep(res.data.Valor);
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                getUsuarios: async function (search, loading) {
                    var _this = this;
                    if (loading)
                        loading(true);
                    await APP.rq.axios2.get(APP.base + '/base/get-usuarios' + APP.util.getQueryParamByObject({ value: search }))
                        .then(res => {
                            if (res.data.Estado) {
                                if (loading)
                                    loading(false);

                                _this.list.usuarios = _.cloneDeep(res.data.Valor);
                            }
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                getLiquidacion: async function () {
                    let _this = this;
                    var input = {};
                    input.FechaLiquidacion = _this.filtro.fecha;
                    input.CodEmpresa = _this.filtro.codEmpresa;
                    input.Empresa = _.find(_this.list.empresas, { 'id': _this.filtro.codEmpresa }).label;
                    input.CodSucursal = _this.filtro.codSucursal;
                    input.Sucursal = _.find(_this.list.sucursales, { 'id': _this.filtro.codSucursal }).label;
                    input.CodPuntVenta = _this.filtro.codPuntVenta;
                    input.PuntoVenta = _.find(_this.list.puntosVenta, { 'id': _this.filtro.codPuntVenta }).label;
                    input.CodUsuario = _this.filtro.codUsuario;
                    input.Usuario = _.find(_this.list.usuarios, { 'id': _this.filtro.codUsuario }).label;
                    input.tipoLiq = (_this.filtro.codUsuario === '0') ? '1' : '0';
                    await APP.rq.axios.post(APP.base + '/liquidacion/lista-liquidacion', input)
                        .then(res => {
                            debugger;
                            if (res.data.Estado) {
                                _this.objLiquidacion = _.cloneDeep(res.data.Valor);
                            }
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                imprimir: function () {
                    let _this = this;

                    var auxUrl = UrlImprimirBoleto + '?base=' + _this.objLiquidacion.Impresion + '&' + 'name=' + 'IMPRESORA';

                    axios({ method: "GET", "url": auxUrl })
                        .then(res => {
                            //APP.msg.success('Boleto enviado a imprimir correctamente.');
                        }, error => {
                            //APP.msg.error('Imprimir Boleto: Ha ocurrido una excepción.');
                        });
                },
                getLabel: function (option) {
                    return `${option.id} - ${option.label}`
                },
                close: function () {
                    $('#appVueLiquidacion').modal('hide');
                }
            },
            computed: {
                filtroCodiEmpresa: {
                    get: function () {
                        if (this.list.empresas.length > 0 && this.list.empresas.find(x => x.id === this.filtro.codEmpresa)) {
                            return this.list.empresas.find(x => x.id === this.filtro.codEmpresa)
                        }
                    },
                    set: function (value) {
                        if (value !== '' && value !== null) {
                            if (this.list.empresas.find(x => x.id === value.id)) {
                                this.filtro.codEmpresa = value.id;
                            }
                        } else {
                            this.filtro.codEmpresa = '';
                        }

                        this.$nextTick(() => {
                            this.$refs.refLIEmpresa.typeAheadPointer = this.$getSelectorVselect(this.list.empresas, value);
                        });
                    }
                },
                filtroCodiSucursal: {
                    get: function () {
                        if (this.list.sucursales.length > 0 && this.list.sucursales.find(x => x.id === this.filtro.codSucursal)) {
                            return this.list.sucursales.find(x => x.id === this.filtro.codSucursal)
                        }
                    },
                    set: function (value) {
                        if (value !== '' && value !== null) {
                            if (this.list.sucursales.find(x => x.id === value.id)) {
                                this.filtro.codSucursal = value.id;
                            }
                        } else {
                            this.filtro.codSucursal = '';
                        }

                        this.$nextTick(() => {
                            this.$refs.refLISucursal.typeAheadPointer = this.$getSelectorVselect(this.list.sucursales, value);
                        });
                    }
                },
                filtroCodiPuntVenta: {
                    get: function () {
                        if (this.list.puntosVenta.length > 0 && this.list.puntosVenta.find(x => x.id === this.filtro.codPuntVenta)) {
                            return this.list.puntosVenta.find(x => x.id === this.filtro.codPuntVenta)
                        }
                    },
                    set: function (value) {
                        if (value !== '' && value !== null) {
                            if (this.list.puntosVenta.find(x => x.id === value.id)) {
                                this.filtro.codPuntVenta = value.id;
                            }
                        } else {
                            this.filtro.codPuntVenta = '';
                        }

                        this.$nextTick(() => {
                            this.$refs.refLIPuntVenta.typeAheadPointer = this.$getSelectorVselect(this.list.puntosVenta, value);
                        });
                    }
                },
                filtroCodiUsuario: {
                    get: function () {
                        if (this.list.usuarios.length > 0 && this.list.usuarios.find(x => x.id === this.filtro.codUsuario)) {
                            return this.list.usuarios.find(x => x.id === this.filtro.codUsuario)
                        }
                    },
                    set: function (value) {
                        if (value) {
                            if (this.list.usuarios.find(x => x.id === value.id))
                                this.filtro.codUsuario = value.id;
                        }
                        else {
                            this.filtro.codUsuario = '0';
                        }

                        this.$nextTick(() => {
                            this.$refs.refLIUsuario.typeAheadPointer = this.$getSelectorVselect(this.list.usuarios, value);
                        });
                    }
                }
            }
        });

    </script>
    <!-- CDNJS -->
    <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/vue-focus/2.1.0/vue-focus.js"></script> -->
    <!-- example: http://jsfiddle.net/8y70Lmz3/2/ -->
    <!-- CDNJS -->
    <script src="~/wwwroot/plugins/bower_components/jquery-ui/jquery-ui.js"></script>
    @RenderSection("scripts", required: false)
</body>
</html>

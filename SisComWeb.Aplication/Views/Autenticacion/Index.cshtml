@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
    var JLMrootCode = System.Configuration.ConfigurationManager.AppSettings["JLMrootCode"].ToString();
}

@section styles{
    <style>
        .form-control:focus {
            border-color: #66afe9;
            border-color: rgb(102, 175, 233);
        }

        #appVueLogin {
            width: 300px;
        }
    </style>
}

<div id="appVueLogin">
    <form v-on:submit.prevent="confirmUsuario(filtro)" action="@Url.Content("~/login/redirect")" id="frmLogin" class="form-container" autocomplete="off">
        <div class="form-group m-b-0">
            <div class="separate-in-form">
                <center style="padding-bottom: 20px;">
                    <img width="35%" src="~/wwwroot/plugins/images/owner/venta-comercial.png" />
                </center>
            </div>
            <div class="separate-in-form">
                <v-select v-model="codigoUsuario"
                          id="txtUsuario"
                          placeholder="--- Seleccione usuario ---"
                          :options="list.usuarios"
                          :select-on-tab="true"
                          :get-option-label="getLabel"
                          :filterable="false"
                          @@search="getUsuarios"
                          ref="usuario">
                    <span slot="no-options" class="text-danger">No hay resultados</span>
                </v-select>
            </div>
            <div v-show="filtro.Codigo && filtro.Codigo === '@JLMrootCode'">
                <div class="separate-in-form">
                    <v-select v-model="filtro.Sucursal"
                              id="cboSucursal"
                              placeholder="Sucursal"
                              :get-option-label="getLabel"
                              :options="list.sucursales"
                              :select-on-tab="true">
                        <span slot="no-options" class="text-danger">No hay resultados</span>
                    </v-select>
                </div>
                <div class="separate-in-form">
                    <v-select v-model="filtro.PuntoVenta"
                              id="cboPuntoVenta"
                              placeholder="Punto de Venta"
                              :get-option-label="getLabel"
                              :options="list.puntosventa"
                              :select-on-tab="true">
                        <span slot="no-options" class="text-danger">No hay resultados</span>
                    </v-select>
                </div>
            </div>
            <div class="separate-in-form">
                <input id="txtContrasena"
                       type="password"
                       name="txtClave"
                       class="form-control input-sm"
                       placeholder="Password"
                       v-model="filtro.Clave"
                       @@keydown.13.prevent="confirmUsuario(filtro)"
                       @@keydown.9.prevent="confirmUsuario(filtro)"
                       autocomplete="off" />
            </div>
            <div style="padding-top: 30px !important; ">
                <button id="btnLogIn" :disabled="!filledFiltro || disabledValidator" type="submit" class="btn btn-info btn-block">INGRESAR</button>
            </div>
        </div>
    </form>
</div>

@section scripts{
    <script>

        var UsuarioJML = '@JLMrootCode';

        var appVueLogin = new Vue({
            el: '#appVueLogin',
            data: {
                filtro: {
                    Codigo: '0',
                    Clave: '',
                    Sucursal: null,
                    PuntoVenta: null
                },
                list: {
                    sucursales: [],
                    puntosventa: [],
                    usuarios: []
                },
                disabledValidator: false,
                Terminal: ''
            },
            mounted: function () {
                this.getUsuarios('', null);
                this.$nextTick(() => {
                    $('#txtUsuario input[type=search]').focus();
                });
            },
            methods: {
                confirmUsuario: async function (filtro) {
                    this.disabledValidator = true;

                    await this.getTerminal();

                    // Valida 'Terminal'
                    if (!this.Terminal) {
                        APP.msg.error("No se encontró Terminal.");
                        this.disabledValidator = false;
                        return;
                    }

                    var input = {};
                    input.Codigo = filtro.Codigo;
                    input.Clave = filtro.Clave;
                    input.Sucursal = filtro.Codigo === UsuarioJML ? filtro.Sucursal.id : '0';
                    input.PuntoVenta = filtro.Codigo === UsuarioJML ? filtro.PuntoVenta.id : '0';
                    input.NomSucursal = filtro.Codigo === UsuarioJML ? filtro.Sucursal.label : '';
                    input.NomPuntoVenta = filtro.Codigo === UsuarioJML ? filtro.PuntoVenta.label : '';
                    input.Terminal = this.Terminal;
                    await APP.rq.axios2.post(APP.base + '/login/post-usuario', input)
                        .then(res => {
                            if (res.data.EsCorrecto)
                                $('#frmLogin').submit();
                            else {
                                document.getElementById("txtContrasena").focus();
                                if (res.data.Estado)
                                    APP.msg.warning(res.data.Mensaje);
                                else
                                    APP.msg.error(res.data.Mensaje);
                            }
                        })
                        .catch(APP.rq.axios_handler_error_alert);

                    this.disabledValidator = false;
                },
                getTerminal: async function () {
                    var _this = this;

                    await axios({ method: "GET", "url": "http://localhost:9100/" })
                        .then(res => {
                            _this.Terminal = res.data[1].terminal;
                        }, error => {
                            APP.msg.error('Obtener Terminal: Ha ocurrido una excepción.');
                        });
                },
                getSucursales() {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-oficinas')
                        .then(res => {
                            if (res.data.Estado)
                                _this.list.sucursales = res.data.Valor;
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                getPuntosVenta(Codi_Sucursal) {
                    var _this = this;
                    APP.rq.axios2.get(APP.base + '/base/get-puntosventa', { params: { CodiSucursal: Codi_Sucursal } })
                        .then(res => {
                            if (res.data.Estado)
                                _this.list.puntosventa = res.data.Valor;
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                getUsuarios: function (search, loading) {
                    var _this = this;
                    if (loading)
                        loading(true);
                    APP.rq.axios2.get(APP.base + '/base/get-usuarios' + APP.util.getQueryParamByObject({ value: search }))
                        .then(res => {
                            if (res.data.Estado) {
                                if (loading)
                                    loading(false);
                                _this.list.usuarios = res.data.Valor;
                            }
                            else
                                APP.msg.error(res.data.Mensaje);
                        })
                        .catch(APP.rq.axios_handler_error_alert);
                },
                getLabel(option) {
                    return `${option.id} - ${option.label}`
                },
                recorrido() {
                    if (this.filtro.Codigo === UsuarioJML && !this.filtro.Sucursal)
                        $('#cboSucursal input[type=search]').focus();
                    else if (this.filtro.Codigo === UsuarioJML && !this.filtro.PuntoVenta)
                        $('#cboPuntoVenta input[type=search]').focus();
                    else if (this.filtro.Codigo === '0')
                        $('#cboUsuario input[type=search]').focus();
                    else if (!this.filtro.Clave)
                        document.getElementById("txtContrasena").focus();
                    else
                        document.getElementById("btnLogIn").focus();
                }
            },
            computed: {
                filledFiltro: function() {
                    if (this.filtro.Codigo) {
                        if (this.filtro.Codigo === UsuarioJML) {
                            return (
                                this.filtro.Sucursal &&
                                this.filtro.PuntoVenta &&
                                parseInt(this.filtro.Codigo) > 0 &&
                                this.filtro.Clave) ? true : false;
                        }
                        else {
                            return (
                                parseInt(this.filtro.Codigo) > 0 &&
                                this.filtro.Clave) ? true : false;
                        }
                    }
                },
                codigoUsuario: {
                    get: function () {
                        if (this.list.usuarios.length > 0 && this.list.usuarios.find(x => x.id === parseInt(this.filtro.Codigo)))
                            return this.list.usuarios.find(x => x.id === parseInt(this.filtro.Codigo))
                    },
                    set: function (value) {
                        if (value) {
                            if (this.list.usuarios.find(x => x.id === value.id)) {
                                this.filtro.Codigo = value.id;

                                this.$nextTick(function () {
                                    this.recorrido();
                                });
                            }
                        }
                        else
                            this.filtro.Codigo = '0';
                    }
                }
            },
            watch: {
                'filtro.Sucursal': function (newVal, oldVal) {
                    if (newVal) {
                        if (String(newVal.id).replace(/\s/g, '').length > 0)
                            this.getPuntosVenta(newVal.id);
                    }
                    else {
                        this.list.puntosventa = [];
                        this.filtro.PuntoVenta = null;
                    }
                    this.$nextTick(function () {
                        this.recorrido();
                    });
                },
                'filtro.PuntoVenta': function (newVal, oldVal) {
                    this.$nextTick(function () {
                        this.recorrido();
                    });
                },
                'filtro.Codigo': function (newVal, oldVal) {
                    if (this.filtro.Codigo === UsuarioJML && this.list.sucursales.length === 0)
                        this.getSucursales();

                    this.$nextTick(function () {
                        this.recorrido();
                    });
                }
            }
        });

    </script>
}
